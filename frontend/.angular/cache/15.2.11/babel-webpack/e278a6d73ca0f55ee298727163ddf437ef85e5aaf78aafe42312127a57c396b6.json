{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/_services\";\nimport * as i4 from \"@angular/common\";\nfunction AddEditComponent_div_17_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Type is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtemplate(1, AddEditComponent_div_17_div_1_Template, 2, 0, \"div\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.type.errors.required);\n  }\n}\nfunction AddEditComponent_div_22_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Details are required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtemplate(1, AddEditComponent_div_22_div_1_Template, 2, 0, \"div\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.description.errors.required);\n  }\n}\nfunction AddEditComponent_div_23_div_4_div_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_23_div_4_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtemplate(1, AddEditComponent_div_23_div_4_div_3_div_1_Template, 2, 0, \"div\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r7 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r7.get(\"name\").errors.required);\n  }\n}\nfunction AddEditComponent_div_23_div_4_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Quantity is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_23_div_4_div_6_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Quantity must be at least 1\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_23_div_4_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtemplate(1, AddEditComponent_div_23_div_4_div_6_div_1_Template, 2, 0, \"div\", 19);\n    i0.ɵɵtemplate(2, AddEditComponent_div_23_div_4_div_6_div_2_Template, 2, 0, \"div\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r7 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r7.get(\"quantity\").errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r7.get(\"quantity\").errors.min);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nfunction AddEditComponent_div_23_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"div\", 24);\n    i0.ɵɵelement(2, \"input\", 25);\n    i0.ɵɵtemplate(3, AddEditComponent_div_23_div_4_div_3_Template, 2, 1, \"div\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 24);\n    i0.ɵɵelement(5, \"input\", 26);\n    i0.ɵɵtemplate(6, AddEditComponent_div_23_div_4_div_6_Template, 3, 2, \"div\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 27)(8, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function AddEditComponent_div_23_div_4_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const i_r8 = restoredCtx.index;\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.removeItem(i_r8));\n    });\n    i0.ɵɵelement(9, \"i\", 29);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const item_r7 = ctx.$implicit;\n    const i_r8 = ctx.index;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"formGroupName\", i_r8);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, ctx_r6.submitted && item_r7.get(\"name\").errors));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.submitted && item_r7.get(\"name\").errors);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx_r6.submitted && item_r7.get(\"quantity\").errors));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.submitted && item_r7.get(\"quantity\").errors);\n  }\n}\nfunction AddEditComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"label\", 5);\n    i0.ɵɵtext(2, \"Items\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 20);\n    i0.ɵɵtemplate(4, AddEditComponent_div_23_div_4_Template, 10, 9, \"div\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function AddEditComponent_div_23_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.addItem());\n    });\n    i0.ɵɵtext(6, \" Add Item \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.items.controls);\n  }\n}\nfunction AddEditComponent_span_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 30);\n  }\n}\nexport let AddEditComponent = /*#__PURE__*/(() => {\n  class AddEditComponent {\n    // Getter for checking if items section should be shown\n    get showItemsSection() {\n      var _a, _b;\n      const type = (_b = (_a = this.form) === null || _a === void 0 ? void 0 : _a.get('type')) === null || _b === void 0 ? void 0 : _b.value;\n      return type === 'Equipment' || type === 'Resources';\n    }\n    constructor(formBuilder, route, router, requestService, alertService, accountService) {\n      var _a;\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.requestService = requestService;\n      this.alertService = alertService;\n      this.accountService = accountService;\n      this.loading = false;\n      this.submitted = false;\n      this.employeeId = null;\n      this.isAdmin = false;\n      this.isAdmin = this.accountService.isAdmin;\n      this.employeeId = (_a = this.accountService.userValue) === null || _a === void 0 ? void 0 : _a.id;\n    }\n    // convenience getter for easy access to form fields\n    get f() {\n      return this.form.controls;\n    }\n    // getter for items FormArray\n    get items() {\n      return this.f.items;\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      this.isAddMode = !this.id;\n      // Create base form\n      this.form = this.formBuilder.group({\n        type: ['', Validators.required],\n        description: ['', Validators.required],\n        items: this.formBuilder.array([])\n      });\n      if (!this.isAddMode) {\n        this.requestService.getById(this.id).pipe(first()).subscribe(x => {\n          this.form.patchValue({\n            type: x.type,\n            description: x.description\n          });\n          // Load items if any\n          if (x.items) {\n            x.items.forEach(item => this.addItem(item));\n          }\n        });\n      }\n    }\n    // Add item to form\n    addItem(item = null) {\n      const itemForm = this.formBuilder.group({\n        name: [item ? item.name : '', Validators.required],\n        quantity: [item ? item.quantity : '', [Validators.required, Validators.min(1)]]\n      });\n      this.items.push(itemForm);\n    }\n    // Remove item from form\n    removeItem(index) {\n      this.items.removeAt(index);\n    }\n    onSubmit() {\n      this.submitted = true;\n      this.alertService.clear();\n      // stop here if form is invalid\n      if (this.form.invalid) {\n        return;\n      }\n      if (!this.employeeId) {\n        this.alertService.error('Employee ID is required');\n        return;\n      }\n      this.loading = true;\n      const requestData = Object.assign(Object.assign({}, this.form.value), {\n        employeeId: Number(this.employeeId)\n      });\n      if (this.isAddMode) {\n        this.requestService.create(requestData).pipe(first()).subscribe({\n          next: () => {\n            this.alertService.success('Request added successfully');\n            this.router.navigate(['../'], {\n              relativeTo: this.route\n            });\n          },\n          error: error => {\n            this.alertService.error(error);\n            this.loading = false;\n          }\n        });\n      } else {\n        this.requestService.update(this.id, requestData).pipe(first()).subscribe({\n          next: () => {\n            this.alertService.success('Request updated successfully');\n            this.router.navigate(['/requests']);\n          },\n          error: error => {\n            this.alertService.error(error);\n            this.loading = false;\n          }\n        });\n      }\n    }\n    submitRequest() {\n      this.requestService.changeStatus(this.id, 'Submitted', 'Request submitted by employee').pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Request submitted successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n  }\n  AddEditComponent.ɵfac = function AddEditComponent_Factory(t) {\n    return new (t || AddEditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.RequestService), i0.ɵɵdirectiveInject(i3.AlertService), i0.ɵɵdirectiveInject(i3.AccountService));\n  };\n  AddEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddEditComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 30,\n    vars: 13,\n    consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"formControlName\", \"type\", 1, \"form-select\", 3, \"ngClass\"], [\"value\", \"\"], [\"value\", \"Equipment\"], [\"value\", \"Leave\"], [\"value\", \"Resources\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"formControlName\", \"description\", \"rows\", \"3\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"mb-3\", 4, \"ngIf\"], [1, \"mt-4\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [\"routerLink\", \"/requests\", 1, \"btn\", \"btn-link\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [\"formArrayName\", \"items\"], [\"class\", \"row mb-2\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"mt-2\", 3, \"click\"], [1, \"row\", \"mb-2\", 3, \"formGroupName\"], [1, \"col-5\"], [\"type\", \"text\", \"formControlName\", \"name\", \"placeholder\", \"Item name\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"number\", \"formControlName\", \"quantity\", \"placeholder\", \"Quantity\", 1, \"form-control\", 3, \"ngClass\"], [1, \"col-2\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"fas\", \"fa-trash\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"]],\n    template: function AddEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h4\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function AddEditComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n        i0.ɵɵtext(7, \"Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"select\", 6)(9, \"option\", 7);\n        i0.ɵɵtext(10, \"Choose type...\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"option\", 8);\n        i0.ɵɵtext(12, \"Equipment\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"option\", 9);\n        i0.ɵɵtext(14, \"Leave\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"option\", 10);\n        i0.ɵɵtext(16, \"Resources\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(17, AddEditComponent_div_17_Template, 2, 1, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 4)(19, \"label\", 5);\n        i0.ɵɵtext(20, \"Details\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"textarea\", 12);\n        i0.ɵɵtemplate(22, AddEditComponent_div_22_Template, 2, 1, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(23, AddEditComponent_div_23_Template, 7, 1, \"div\", 13);\n        i0.ɵɵelementStart(24, \"div\", 14)(25, \"button\", 15);\n        i0.ɵɵtemplate(26, AddEditComponent_span_26_Template, 1, 0, \"span\", 16);\n        i0.ɵɵtext(27, \" Save Request \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"a\", 17);\n        i0.ɵɵtext(29, \"Cancel\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.isAddMode ? \"Add Request\" : \"Edit Request\", \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, ctx.submitted && ctx.f.type.errors));\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.type.errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c0, ctx.submitted && ctx.f.description.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.description.errors);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showItemsSection);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      }\n    },\n    dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName, i2.RouterLink],\n    encapsulation: 2\n  });\n  return AddEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}