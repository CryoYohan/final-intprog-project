{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/_services\";\nimport * as i4 from \"@angular/common\";\nfunction AddEditComponent_div_7_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, AddEditComponent_div_7_div_1_Template, 2, 0, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.name.errors.required);\n  }\n}\nfunction AddEditComponent_div_12_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Description is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, AddEditComponent_div_12_div_1_Template, 2, 0, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.description.errors.required);\n  }\n}\nfunction AddEditComponent_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 11);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport let AddEditComponent = /*#__PURE__*/(() => {\n  class AddEditComponent {\n    constructor(formBuilder, route, router, departmentService, alertService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.departmentService = departmentService;\n      this.alertService = alertService;\n      this.loading = false;\n      this.submitted = false;\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      this.isAddMode = !this.id;\n      this.form = this.formBuilder.group({\n        name: ['', Validators.required],\n        description: ['', Validators.required]\n      });\n      if (!this.isAddMode) {\n        this.departmentService.getById(this.id).pipe(first()).subscribe(x => this.form.patchValue(x));\n      }\n    }\n    // convenience getter for easy access to form fields\n    get f() {\n      return this.form.controls;\n    }\n    onSubmit() {\n      this.submitted = true;\n      // reset alerts on submit\n      this.alertService.clear();\n      // stop here if form is invalid\n      if (this.form.invalid) {\n        return;\n      }\n      this.loading = true;\n      if (this.isAddMode) {\n        this.createDepartment();\n      } else {\n        this.updateDepartment();\n      }\n    }\n    createDepartment() {\n      this.departmentService.create(this.form.value).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Department added successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    updateDepartment() {\n      this.departmentService.update(this.id, this.form.value).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Update successful', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n  }\n  AddEditComponent.ɵfac = function AddEditComponent_Factory(t) {\n    return new (t || AddEditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.DepartmentService), i0.ɵɵdirectiveInject(i3.AlertService));\n  };\n  AddEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddEditComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 19,\n    vars: 12,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"formControlName\", \"description\", \"rows\", \"3\", 1, \"form-control\", 3, \"ngClass\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [\"routerLink\", \"../\", 1, \"btn\", \"btn-link\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"]],\n    template: function AddEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function AddEditComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"label\", 2);\n        i0.ɵɵtext(5, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 3);\n        i0.ɵɵtemplate(7, AddEditComponent_div_7_Template, 2, 1, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 1)(9, \"label\", 2);\n        i0.ɵɵtext(10, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"textarea\", 5);\n        i0.ɵɵtemplate(12, AddEditComponent_div_12_Template, 2, 1, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 1)(14, \"button\", 6);\n        i0.ɵɵtemplate(15, AddEditComponent_span_15_Template, 1, 0, \"span\", 7);\n        i0.ɵɵtext(16, \" Save \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"a\", 8);\n        i0.ɵɵtext(18, \"Cancel\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"\", ctx.isAddMode ? \"Add\" : \"Edit\", \" Department\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx.submitted && ctx.f.name.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.name.errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, ctx.submitted && ctx.f.description.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.description.errors);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      }\n    },\n    dependencies: [i4.NgClass, i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.RouterLink],\n    encapsulation: 2\n  });\n  return AddEditComponent;\n})();","map":{"version":3,"mappings":"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","names":["Validators","first","i0","AddEditComponent","constructor","formBuilder","route","router","departmentService","alertService","ngOnInit","id","snapshot","params","isAddMode","form","group","name","required","description","getById","pipe","subscribe","x","patchValue","f","controls","onSubmit","submitted","clear","invalid","loading","createDepartment","updateDepartment","create","value","next","success","keepAfterRouteChange","navigate","relativeTo","error","update","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\JiM\\School\\3rd Year\\2nd Semester\\SUBJECTS\\IT-INTPROG32\\Coding (INTPROG32)\\Final\\project3 (cursor)\\frontend\\src\\app\\departments\\add-edit.component.ts","D:\\JiM\\School\\3rd Year\\2nd Semester\\SUBJECTS\\IT-INTPROG32\\Coding (INTPROG32)\\Final\\project3 (cursor)\\frontend\\src\\app\\departments\\add-edit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { DepartmentService, AlertService } from '@app/_services';\r\n\r\n@Component({ templateUrl: 'add-edit.component.html' })\r\nexport class AddEditComponent implements OnInit {\r\n    form: FormGroup;\r\n    id: string;\r\n    isAddMode: boolean;\r\n    loading = false;\r\n    submitted = false;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private departmentService: DepartmentService,\r\n        private alertService: AlertService\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.id = this.route.snapshot.params['id'];\r\n        this.isAddMode = !this.id;\r\n        \r\n        this.form = this.formBuilder.group({\r\n            name: ['', Validators.required],\r\n            description: ['', Validators.required]\r\n        });\r\n\r\n        if (!this.isAddMode) {\r\n            this.departmentService.getById(this.id)\r\n                .pipe(first())\r\n                .subscribe(x => this.form.patchValue(x));\r\n        }\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.form.controls; }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n\r\n        // reset alerts on submit\r\n        this.alertService.clear();\r\n\r\n        // stop here if form is invalid\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        if (this.isAddMode) {\r\n            this.createDepartment();\r\n        } else {\r\n            this.updateDepartment();\r\n        }\r\n    }\r\n\r\n    private createDepartment() {\r\n        this.departmentService.create(this.form.value)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success('Department added successfully', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['../'], { relativeTo: this.route });\r\n                },\r\n                error: error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n\r\n    private updateDepartment() {\r\n        this.departmentService.update(this.id, this.form.value)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success('Update successful', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['../'], { relativeTo: this.route });\r\n                },\r\n                error: error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n} ","<h1>{{isAddMode ? 'Add' : 'Edit'}} Department</h1>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"mb-3\">\r\n        <label class=\"form-label\">Name</label>\r\n        <input type=\"text\" formControlName=\"name\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\" />\r\n        <div *ngIf=\"submitted && f.name.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.name.errors.required\">Name is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"mb-3\">\r\n        <label class=\"form-label\">Description</label>\r\n        <textarea formControlName=\"description\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.description.errors }\" rows=\"3\"></textarea>\r\n        <div *ngIf=\"submitted && f.description.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.description.errors.required\">Description is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"mb-3\">\r\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm me-1\"></span>\r\n            Save\r\n        </button>\r\n        <a routerLink=\"../\" class=\"btn btn-link\">Cancel</a>\r\n    </div>\r\n</form> "]},"metadata":{},"sourceType":"module","externalDependencies":[]}