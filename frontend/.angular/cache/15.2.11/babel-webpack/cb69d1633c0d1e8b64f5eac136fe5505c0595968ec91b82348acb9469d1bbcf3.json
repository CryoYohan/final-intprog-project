{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { Role, RequestType, RequestStatus } from '@app/_models';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/_services\";\nimport * as i4 from \"@angular/common\";\nfunction AddEditComponent_option_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", type_r8);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(type_r8);\n  }\n}\nfunction AddEditComponent_div_11_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Request type is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, AddEditComponent_div_11_div_1_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.type.errors.required);\n  }\n}\nconst _c0 = function (a0, a1, a2, a3, a4, a5) {\n  return {\n    \"bg-secondary\": a0,\n    \"bg-primary\": a1,\n    \"bg-info\": a2,\n    \"bg-success\": a3,\n    \"bg-danger\": a4,\n    \"bg-dark\": a5\n  };\n};\nfunction AddEditComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24)(1, \"span\", 25);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction6(2, _c0, ctx_r2.f.status.value === \"Draft\", ctx_r2.f.status.value === \"Submitted\", ctx_r2.f.status.value === \"In Progress\", ctx_r2.f.status.value === \"Approved\", ctx_r2.f.status.value === \"Rejected\", ctx_r2.f.status.value === \"Completed\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.f.status.value);\n  }\n}\nfunction AddEditComponent_input_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 26);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"value\", \"Draft\");\n  }\n}\nfunction AddEditComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27)(1, \"div\", 28)(2, \"div\", 29);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"width\", ctx_r4.f.currentStep.value / ctx_r4.f.totalSteps.value * 100, \"%\");\n    i0.ɵɵattribute(\"aria-valuenow\", ctx_r4.f.currentStep.value)(\"aria-valuemin\", 0)(\"aria-valuemax\", ctx_r4.f.totalSteps.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" Step \", ctx_r4.f.currentStep.value, \" of \", ctx_r4.f.totalSteps.value, \" \");\n  }\n}\nfunction AddEditComponent_div_22_div_7_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Item name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_22_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, AddEditComponent_div_22_div_7_div_1_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r10 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r10.get(\"name\").errors.required);\n  }\n}\nfunction AddEditComponent_div_22_div_27_div_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Quantity is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_22_div_27_div_4_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Quantity must be at least 1\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_22_div_27_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, AddEditComponent_div_22_div_27_div_4_div_1_Template, 2, 0, \"div\", 23);\n    i0.ɵɵtemplate(2, AddEditComponent_div_22_div_27_div_4_div_2_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r10 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r10.get(\"quantity\").errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r10.get(\"quantity\").errors.min);\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nfunction AddEditComponent_div_22_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 45)(1, \"label\", 3);\n    i0.ɵɵtext(2, \"Quantity\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 46);\n    i0.ɵɵtemplate(4, AddEditComponent_div_22_div_27_div_4_Template, 3, 2, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r10 = i0.ɵɵnextContext().$implicit;\n    const ctx_r13 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c1, ctx_r13.submitted && item_r10.get(\"quantity\").errors));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r13.submitted && item_r10.get(\"quantity\").errors);\n  }\n}\nfunction AddEditComponent_div_22_ng_container_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 45)(2, \"label\", 3);\n    i0.ɵɵtext(3, \"Start Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 47);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 45)(6, \"label\", 3);\n    i0.ɵɵtext(7, \"End Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 48);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const item_r10 = i0.ɵɵnextContext().$implicit;\n    const ctx_r14 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c1, ctx_r14.submitted && item_r10.get(\"startDate\").errors));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c1, ctx_r14.submitted && item_r10.get(\"endDate\").errors));\n  }\n}\nfunction AddEditComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"div\", 31)(2, \"div\", 32)(3, \"div\", 33)(4, \"label\", 3);\n    i0.ɵɵtext(5, \"Item Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 34);\n    i0.ɵɵtemplate(7, AddEditComponent_div_22_div_7_Template, 2, 1, \"div\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 33)(9, \"label\", 3);\n    i0.ɵɵtext(10, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"select\", 4)(12, \"option\", 5);\n    i0.ɵɵtext(13, \"Select Type...\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"option\", 35);\n    i0.ɵɵtext(15, \"Equipment\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"option\", 36);\n    i0.ɵɵtext(17, \"Software\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"option\", 37);\n    i0.ɵɵtext(19, \"Leave\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"option\", 38);\n    i0.ɵɵtext(21, \"Other\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(22, \"div\", 39)(23, \"button\", 40);\n    i0.ɵɵlistener(\"click\", function AddEditComponent_div_22_Template_button_click_23_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r24);\n      const i_r11 = restoredCtx.index;\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.removeItem(i_r11));\n    });\n    i0.ɵɵelement(24, \"i\", 41);\n    i0.ɵɵtext(25, \" Remove \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(26, \"div\", 42);\n    i0.ɵɵtemplate(27, AddEditComponent_div_22_div_27_Template, 5, 4, \"div\", 43);\n    i0.ɵɵtemplate(28, AddEditComponent_div_22_ng_container_28_Template, 9, 6, \"ng-container\", 44);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const item_r10 = ctx.$implicit;\n    const i_r11 = ctx.index;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroupName\", i_r11);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c1, ctx_r5.submitted && item_r10.get(\"name\").errors));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.submitted && item_r10.get(\"name\").errors);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c1, ctx_r5.submitted && item_r10.get(\"type\").errors));\n    i0.ɵɵadvance(15);\n    i0.ɵɵproperty(\"ngSwitch\", item_r10.get(\"type\").value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"Equipment\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"Leave\");\n  }\n}\nfunction AddEditComponent_span_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 49);\n  }\n}\nfunction AddEditComponent_button_30_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 49);\n  }\n}\nfunction AddEditComponent_button_30_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 50);\n    i0.ɵɵlistener(\"click\", function AddEditComponent_button_30_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r27);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r26.submitRequest());\n    });\n    i0.ɵɵtemplate(1, AddEditComponent_button_30_span_1_Template, 1, 0, \"span\", 18);\n    i0.ɵɵtext(2, \" Submit Request \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r7.loading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.loading);\n  }\n}\nexport let AddEditComponent = /*#__PURE__*/(() => {\n  class AddEditComponent {\n    constructor(formBuilder, route, router, requestService, alertService, employeeService, accountService) {\n      var _a;\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.requestService = requestService;\n      this.alertService = alertService;\n      this.employeeService = employeeService;\n      this.accountService = accountService;\n      this.loading = false;\n      this.submitted = false;\n      this.currentEmployeeId = null;\n      this.isAdmin = false;\n      this.requestTypes = Object.values(RequestType);\n      this.isAdmin = ((_a = this.accountService.accountValue) === null || _a === void 0 ? void 0 : _a.role) === Role.Admin;\n      // Initialize the form immediately\n      this.form = this.formBuilder.group({\n        employeeId: [null, Validators.required],\n        type: ['', Validators.required],\n        status: [{\n          value: RequestStatus.Draft,\n          disabled: false\n        }],\n        items: this.formBuilder.array([]),\n        currentStep: [{\n          value: 1,\n          disabled: true\n        }],\n        totalSteps: [{\n          value: 3,\n          disabled: true\n        }]\n      });\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      this.isAddMode = !this.id;\n      // Get current employee ID\n      this.employeeService.getByAccountId(this.accountService.accountValue.id).pipe(first()).subscribe(employee => {\n        this.currentEmployeeId = (employee === null || employee === void 0 ? void 0 : employee.id) ? Number(employee.id) : null;\n        this.form.patchValue({\n          employeeId: this.currentEmployeeId\n        });\n        if (this.isAddMode) {\n          this.addItem(); // Add default empty item\n        } else {\n          this.loadRequest();\n        }\n      });\n      // Watch for type changes to update form\n      this.form.get('type').valueChanges.subscribe(type => {\n        this.updateFormBasedOnType(type);\n      });\n    }\n    // convenience getters\n    get f() {\n      return this.form.controls;\n    }\n    get items() {\n      return this.form.get('items');\n    }\n    loadRequest() {\n      this.requestService.getById(this.id).pipe(first()).subscribe(x => {\n        this.form.patchValue(x);\n        // Clear existing items\n        while (this.items.length) {\n          this.items.removeAt(0);\n        }\n        // Add loaded items\n        if (x.items && x.items.length) {\n          x.items.forEach(item => this.addItem(item));\n        } else {\n          this.addItem(); // Add at least one empty item\n        }\n      });\n    }\n\n    addItem(item = null) {\n      const itemForm = this.formBuilder.group({\n        id: [(item === null || item === void 0 ? void 0 : item.id) || null],\n        name: [(item === null || item === void 0 ? void 0 : item.name) || '', Validators.required],\n        type: [(item === null || item === void 0 ? void 0 : item.type) || '', Validators.required],\n        quantity: [(item === null || item === void 0 ? void 0 : item.quantity) || null],\n        startDate: [(item === null || item === void 0 ? void 0 : item.startDate) || null],\n        endDate: [(item === null || item === void 0 ? void 0 : item.endDate) || null],\n        status: [{\n          value: (item === null || item === void 0 ? void 0 : item.status) || RequestStatus.Draft,\n          disabled: !this.isAddMode\n        }]\n      });\n      this.items.push(itemForm);\n    }\n    removeItem(index) {\n      if (this.items.length > 1) {\n        this.items.removeAt(index);\n      } else {\n        this.alertService.warn('At least one item is required');\n      }\n    }\n    updateFormBasedOnType(type) {\n      // Update total steps based on request type\n      let totalSteps = 3; // Default steps\n      switch (type) {\n        case RequestType.Equipment:\n          totalSteps = 3; // Request → Manager Approval → Procurement\n          break;\n        case RequestType.Leave:\n          totalSteps = 2; // Request → Manager Approval\n          break;\n        case RequestType.DepartmentChange:\n          totalSteps = 4; // Request → Current Manager → New Manager → HR\n          break;\n        case RequestType.Onboarding:\n          totalSteps = 5; // Request → HR → IT → Facilities → Final\n          break;\n      }\n      this.form.patchValue({\n        totalSteps\n      });\n    }\n    submitRequest() {\n      if (this.form.invalid) {\n        return;\n      }\n      this.loading = true;\n      const formData = this.form.getRawValue();\n      formData.status = RequestStatus.Submitted;\n      // Filter out empty items\n      formData.items = this.filterValidItems(formData.items);\n      this.requestService.update(this.id, formData).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Request submitted successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    onSubmit() {\n      this.submitted = true;\n      this.alertService.clear();\n      if (this.form.invalid) {\n        return;\n      }\n      this.loading = true;\n      // Filter out empty items before saving\n      const formData = this.form.getRawValue();\n      formData.items = this.filterValidItems(formData.items);\n      if (this.isAddMode) {\n        this.createRequest(formData);\n      } else {\n        this.updateRequest(formData);\n      }\n    }\n    filterValidItems(items) {\n      return items.filter(item => {\n        var _a, _b;\n        return ((_a = item.name) === null || _a === void 0 ? void 0 : _a.trim()) && ((_b = item.type) === null || _b === void 0 ? void 0 : _b.trim()) && (item.type === 'Equipment' && item.quantity > 0 || item.type === 'Leave' && item.startDate && item.endDate || item.type !== 'Equipment' && item.type !== 'Leave');\n      });\n    }\n    createRequest(formData) {\n      formData.requestNumber = this.generateRequestNumber();\n      formData.createdDate = new Date();\n      formData.lastModifiedDate = new Date();\n      this.requestService.create(formData).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Request created successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    updateRequest(formData) {\n      formData.lastModifiedDate = new Date();\n      this.requestService.update(this.id, formData).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Request updated successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    generateRequestNumber() {\n      const prefix = 'REQ';\n      const timestamp = new Date().getTime().toString().slice(-6);\n      const random = Math.floor(Math.random() * 1000).toString().padStart(3, '0');\n      return `${prefix}${timestamp}${random}`;\n    }\n  }\n  AddEditComponent.ɵfac = function AddEditComponent_Factory(t) {\n    return new (t || AddEditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.RequestService), i0.ɵɵdirectiveInject(i3.AlertService), i0.ɵɵdirectiveInject(i3.EmployeeService), i0.ɵɵdirectiveInject(i3.AccountService));\n  };\n  AddEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddEditComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 33,\n    vars: 14,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"col-md-6\", \"mb-3\"], [1, \"form-label\"], [\"formControlName\", \"type\", 1, \"form-select\", 3, \"ngClass\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"class\", \"form-control-plaintext\", 4, \"ngIf\"], [\"type\", \"text\", \"class\", \"form-control\", \"readonly\", \"\", 3, \"value\", 4, \"ngIf\"], [\"class\", \"mb-4\", 4, \"ngIf\"], [1, \"mb-3\"], [\"formArrayName\", \"items\"], [\"class\", \"card mb-3\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"mt-2\", 3, \"click\"], [1, \"fas\", \"fa-plus\", \"me-1\"], [1, \"border-top\", \"pt-3\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"me-2\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"btn btn-success me-2\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"routerLink\", \"../\", 1, \"btn\", \"btn-link\"], [3, \"value\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"form-control-plaintext\"], [1, \"badge\", 3, \"ngClass\"], [\"type\", \"text\", \"readonly\", \"\", 1, \"form-control\", 3, \"value\"], [1, \"mb-4\"], [1, \"progress\"], [\"role\", \"progressbar\", 1, \"progress-bar\"], [1, \"card\", \"mb-3\", 3, \"formGroupName\"], [1, \"card-body\"], [1, \"row\", \"mb-3\"], [1, \"col-md-5\"], [\"type\", \"text\", \"formControlName\", \"name\", \"placeholder\", \"Item name\", 1, \"form-control\", 3, \"ngClass\"], [\"value\", \"Equipment\"], [\"value\", \"Software\"], [\"value\", \"Leave\"], [\"value\", \"Other\"], [1, \"col-md-2\", \"d-flex\", \"align-items-end\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", \"w-100\", 3, \"click\"], [1, \"fas\", \"fa-trash\", \"me-1\"], [1, \"row\", \"mb-3\", 3, \"ngSwitch\"], [\"class\", \"col-md-4\", 4, \"ngSwitchCase\"], [4, \"ngSwitchCase\"], [1, \"col-md-4\"], [\"type\", \"number\", \"formControlName\", \"quantity\", \"placeholder\", \"Quantity\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"date\", \"formControlName\", \"startDate\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"date\", \"formControlName\", \"endDate\", 1, \"form-control\", 3, \"ngClass\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"me-2\", 3, \"disabled\", \"click\"]],\n    template: function AddEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function AddEditComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Request Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"select\", 4)(8, \"option\", 5);\n        i0.ɵɵtext(9, \"Select Type...\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(10, AddEditComponent_option_10_Template, 2, 2, \"option\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(11, AddEditComponent_div_11_Template, 2, 1, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 3);\n        i0.ɵɵtext(14, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(15, AddEditComponent_div_15_Template, 3, 9, \"div\", 8);\n        i0.ɵɵtemplate(16, AddEditComponent_input_16_Template, 1, 1, \"input\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(17, AddEditComponent_div_17_Template, 4, 7, \"div\", 10);\n        i0.ɵɵelementStart(18, \"div\", 11)(19, \"label\", 3);\n        i0.ɵɵtext(20, \"Items\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 12);\n        i0.ɵɵtemplate(22, AddEditComponent_div_22_Template, 29, 11, \"div\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function AddEditComponent_Template_button_click_23_listener() {\n          return ctx.addItem();\n        });\n        i0.ɵɵelement(24, \"i\", 15);\n        i0.ɵɵtext(25, \" Add Item \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"div\", 16)(27, \"button\", 17);\n        i0.ɵɵtemplate(28, AddEditComponent_span_28_Template, 1, 0, \"span\", 18);\n        i0.ɵɵtext(29, \" Save Request \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(30, AddEditComponent_button_30_Template, 3, 2, \"button\", 19);\n        i0.ɵɵelementStart(31, \"a\", 20);\n        i0.ɵɵtext(32, \"Cancel\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"\", ctx.isAddMode ? \"Create\" : \"Edit\", \" Request\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c1, ctx.submitted && ctx.f.type.errors));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.requestTypes);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.type.errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isAddMode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isAddMode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isAddMode);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.items.controls);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isAddMode && ctx.f.status.value === \"Draft\");\n      }\n    },\n    dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i4.NgSwitch, i4.NgSwitchCase, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName, i2.RouterLink],\n    encapsulation: 2\n  });\n  return AddEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}