{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { Role } from '@app/_models';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/_services\";\nimport * as i4 from \"@angular/common\";\nfunction AddEditComponent_div_7_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Title is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtemplate(1, AddEditComponent_div_7_div_1_Template, 2, 0, \"div\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.title.errors.required);\n  }\n}\nfunction AddEditComponent_div_12_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Description is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtemplate(1, AddEditComponent_div_12_div_1_Template, 2, 0, \"div\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.description.errors.required);\n  }\n}\nfunction AddEditComponent_div_29_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Request type is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtemplate(1, AddEditComponent_div_29_div_1_Template, 2, 0, \"div\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f.requestType.errors.required);\n  }\n}\nfunction AddEditComponent_div_45_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const employee_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", employee_r9.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" \", employee_r9.account == null ? null : employee_r9.account.firstName, \" \", employee_r9.account == null ? null : employee_r9.account.lastName, \" (\", employee_r9.position, \") \");\n  }\n}\nfunction AddEditComponent_div_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"label\", 2);\n    i0.ɵɵtext(2, \"Assign To\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"select\", 26);\n    i0.ɵɵelement(4, \"option\", 9);\n    i0.ɵɵtemplate(5, AddEditComponent_div_45_option_5_Template, 2, 4, \"option\", 27);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.employees);\n  }\n}\nfunction AddEditComponent_span_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 29);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport let AddEditComponent = /*#__PURE__*/(() => {\n  class AddEditComponent {\n    constructor(formBuilder, route, router, requestService, alertService, employeeService, accountService) {\n      var _a, _b;\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.requestService = requestService;\n      this.alertService = alertService;\n      this.employeeService = employeeService;\n      this.accountService = accountService;\n      this.loading = false;\n      this.submitted = false;\n      this.employees = [];\n      this.currentEmployeeId = null;\n      this.isAdmin = false;\n      this.isModerator = false;\n      // Check if current user is admin or moderator\n      this.isAdmin = ((_a = this.accountService.accountValue) === null || _a === void 0 ? void 0 : _a.role) === Role.Admin;\n      this.isModerator = ((_b = this.accountService.accountValue) === null || _b === void 0 ? void 0 : _b.role) === Role.Moderator;\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      this.isAddMode = !this.id;\n      // Get current employee ID\n      this.employeeService.getByAccountId(this.accountService.accountValue.id).pipe(first()).subscribe(employee => {\n        this.currentEmployeeId = (employee === null || employee === void 0 ? void 0 : employee.id) ? Number(employee.id) : null;\n      });\n      // Get all employees for assignee dropdown (if admin or moderator)\n      if (this.isAdmin || this.isModerator) {\n        this.employeeService.getAll().pipe(first()).subscribe(employees => {\n          this.employees = employees;\n        });\n      }\n      // Form validation rules\n      this.form = this.formBuilder.group({\n        title: ['', Validators.required],\n        description: ['', Validators.required],\n        requestType: ['', Validators.required],\n        priority: ['Medium', Validators.required],\n        requesterId: [this.currentEmployeeId],\n        assignedTo: [''],\n        dueDate: ['']\n      });\n      if (!this.isAddMode) {\n        this.requestService.getById(this.id).pipe(first()).subscribe(x => {\n          // Prepare form data without modifying the original object\n          const formData = Object.assign({}, x);\n          // Format date for the date input\n          if (formData.dueDate) {\n            const dueDate = new Date(formData.dueDate);\n            // Use a separate variable for the form value\n            const dateString = dueDate.toISOString().split('T')[0];\n            // Use patchValue instead of directly modifying formData\n            this.form.patchValue(Object.assign(Object.assign({}, formData), {\n              dueDate: dateString\n            }));\n          } else {\n            this.form.patchValue(formData);\n          }\n        });\n      }\n    }\n    // convenience getter for easy access to form fields\n    get f() {\n      return this.form.controls;\n    }\n    onSubmit() {\n      this.submitted = true;\n      // reset alerts on submit\n      this.alertService.clear();\n      // stop here if form is invalid\n      if (this.form.invalid) {\n        return;\n      }\n      this.loading = true;\n      // Set requesterId if not already set\n      if (!this.f.requesterId.value && this.currentEmployeeId) {\n        this.form.patchValue({\n          requesterId: this.currentEmployeeId\n        });\n      }\n      // Prepare request data with correct types\n      const requestData = Object.assign(Object.assign({}, this.form.value), {\n        requesterId: this.form.value.requesterId ? Number(this.form.value.requesterId) : null,\n        assignedTo: this.form.value.assignedTo ? Number(this.form.value.assignedTo) : null,\n        dueDate: this.form.value.dueDate ? new Date(this.form.value.dueDate) : null\n      });\n      if (this.isAddMode) {\n        this.createRequest(requestData);\n      } else {\n        this.updateRequest(requestData);\n      }\n    }\n    createRequest(requestData) {\n      this.requestService.create(requestData).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Request added successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../my-requests'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    updateRequest(requestData) {\n      this.requestService.update(this.id, requestData).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Update successful', {\n            keepAfterRouteChange: true\n          });\n          if (this.isAdmin || this.isModerator) {\n            this.router.navigate(['../../'], {\n              relativeTo: this.route\n            });\n          } else {\n            this.router.navigate(['../../my-requests'], {\n              relativeTo: this.route\n            });\n          }\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n  }\n  AddEditComponent.ɵfac = function AddEditComponent_Factory(t) {\n    return new (t || AddEditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.RequestService), i0.ɵɵdirectiveInject(i3.AlertService), i0.ɵɵdirectiveInject(i3.EmployeeService), i0.ɵɵdirectiveInject(i3.AccountService));\n  };\n  AddEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddEditComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 52,\n    vars: 18,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"title\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"formControlName\", \"description\", \"rows\", \"4\", 1, \"form-control\", 3, \"ngClass\"], [1, \"row\"], [1, \"col-md-6\", \"mb-3\"], [\"formControlName\", \"requestType\", 1, \"form-select\", 3, \"ngClass\"], [\"value\", \"\"], [\"value\", \"Issue\"], [\"value\", \"Feature Request\"], [\"value\", \"Documentation\"], [\"value\", \"Task\"], [\"value\", \"Other\"], [\"formControlName\", \"priority\", 1, \"form-select\"], [\"value\", \"Low\"], [\"value\", \"Medium\"], [\"value\", \"High\"], [\"type\", \"date\", \"formControlName\", \"dueDate\", 1, \"form-control\"], [\"class\", \"col-md-6 mb-3\", 4, \"ngIf\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [1, \"btn\", \"btn-link\", 3, \"routerLink\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [\"formControlName\", \"assignedTo\", 1, \"form-select\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"]],\n    template: function AddEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function AddEditComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"label\", 2);\n        i0.ɵɵtext(5, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 3);\n        i0.ɵɵtemplate(7, AddEditComponent_div_7_Template, 2, 1, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 1)(9, \"label\", 2);\n        i0.ɵɵtext(10, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"textarea\", 5);\n        i0.ɵɵtemplate(12, AddEditComponent_div_12_Template, 2, 1, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 6)(14, \"div\", 7)(15, \"label\", 2);\n        i0.ɵɵtext(16, \"Request Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"select\", 8);\n        i0.ɵɵelement(18, \"option\", 9);\n        i0.ɵɵelementStart(19, \"option\", 10);\n        i0.ɵɵtext(20, \"Issue\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"option\", 11);\n        i0.ɵɵtext(22, \"Feature Request\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"option\", 12);\n        i0.ɵɵtext(24, \"Documentation\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"option\", 13);\n        i0.ɵɵtext(26, \"Task\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"option\", 14);\n        i0.ɵɵtext(28, \"Other\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(29, AddEditComponent_div_29_Template, 2, 1, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"div\", 7)(31, \"label\", 2);\n        i0.ɵɵtext(32, \"Priority\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"select\", 15)(34, \"option\", 16);\n        i0.ɵɵtext(35, \"Low\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"option\", 17);\n        i0.ɵɵtext(37, \"Medium\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"option\", 18);\n        i0.ɵɵtext(39, \"High\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(40, \"div\", 6)(41, \"div\", 7)(42, \"label\", 2);\n        i0.ɵɵtext(43, \"Due Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(44, \"input\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(45, AddEditComponent_div_45_Template, 6, 1, \"div\", 20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"div\", 1)(47, \"button\", 21);\n        i0.ɵɵtemplate(48, AddEditComponent_span_48_Template, 1, 0, \"span\", 22);\n        i0.ɵɵtext(49, \" Save \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(50, \"a\", 23);\n        i0.ɵɵtext(51, \"Cancel\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"\", ctx.isAddMode ? \"Create\" : \"Edit\", \" Request\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c0, ctx.submitted && ctx.f.title.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.title.errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(14, _c0, ctx.submitted && ctx.f.description.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.description.errors);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(16, _c0, ctx.submitted && ctx.f.requestType.errors));\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.requestType.errors);\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"ngIf\", ctx.isAdmin || ctx.isModerator);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"routerLink\", ctx.isAdmin || ctx.isModerator ? \"../\" : \"../my-requests\");\n      }\n    },\n    dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.RouterLink],\n    encapsulation: 2\n  });\n  return AddEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}