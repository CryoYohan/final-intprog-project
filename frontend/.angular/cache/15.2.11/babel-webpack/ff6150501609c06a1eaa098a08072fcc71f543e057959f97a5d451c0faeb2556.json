{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { Role } from '@app/_models';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/_services\";\nimport * as i4 from \"@angular/common\";\nfunction AddEditComponent_div_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Request type is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, AddEditComponent_div_15_div_1_Template, 2, 0, \"div\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.type.errors.required);\n  }\n}\nfunction AddEditComponent_div_20_div_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Item name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_20_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, AddEditComponent_div_20_div_3_div_1_Template, 2, 0, \"div\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r4.get(\"name\").errors.required);\n  }\n}\nfunction AddEditComponent_div_20_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Quantity is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_20_div_6_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Quantity must be at least 1\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_20_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, AddEditComponent_div_20_div_6_div_1_Template, 2, 0, \"div\", 16);\n    i0.ɵɵtemplate(2, AddEditComponent_div_20_div_6_div_2_Template, 2, 0, \"div\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r4.get(\"quantity\").errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r4.get(\"quantity\").errors.min);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nfunction AddEditComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"div\", 18);\n    i0.ɵɵelement(2, \"input\", 19);\n    i0.ɵɵtemplate(3, AddEditComponent_div_20_div_3_Template, 2, 1, \"div\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 20);\n    i0.ɵɵelement(5, \"input\", 21);\n    i0.ɵɵtemplate(6, AddEditComponent_div_20_div_6_Template, 3, 2, \"div\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 22)(8, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function AddEditComponent_div_20_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const i_r5 = restoredCtx.index;\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.removeItem(i_r5));\n    });\n    i0.ɵɵelement(9, \"i\", 24);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const item_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroupName\", i_r5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, ctx_r1.submitted && item_r4.get(\"name\").errors));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.submitted && item_r4.get(\"name\").errors);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx_r1.submitted && item_r4.get(\"quantity\").errors));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.submitted && item_r4.get(\"quantity\").errors);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.items.length === 1);\n  }\n}\nfunction AddEditComponent_span_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 25);\n  }\n}\nexport let AddEditComponent = /*#__PURE__*/(() => {\n  class AddEditComponent {\n    constructor(formBuilder, route, router, requestService, alertService, employeeService, accountService) {\n      var _a;\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.requestService = requestService;\n      this.alertService = alertService;\n      this.employeeService = employeeService;\n      this.accountService = accountService;\n      this.loading = false;\n      this.submitted = false;\n      this.currentEmployeeId = null;\n      this.isAdmin = false;\n      this.isAdmin = ((_a = this.accountService.accountValue) === null || _a === void 0 ? void 0 : _a.role) === Role.Admin;\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      this.isAddMode = !this.id;\n      // Get current employee ID\n      this.employeeService.getByAccountId(this.accountService.accountValue.id).pipe(first()).subscribe(employee => {\n        this.currentEmployeeId = (employee === null || employee === void 0 ? void 0 : employee.id) ? Number(employee.id) : null;\n        this.initializeForm();\n      });\n    }\n    initializeForm() {\n      this.form = this.formBuilder.group({\n        employeeId: [this.currentEmployeeId, Validators.required],\n        type: ['Equipment', Validators.required],\n        items: this.formBuilder.array([])\n      });\n      if (!this.isAddMode) {\n        this.requestService.getById(this.id).pipe(first()).subscribe(x => {\n          var _a;\n          this.form.patchValue(x);\n          (_a = x.items) === null || _a === void 0 ? void 0 : _a.forEach(item => {\n            this.addItem(item.name, item.quantity);\n          });\n        });\n      } else {\n        // Add default empty item\n        this.addItem();\n      }\n    }\n    // convenience getters\n    get f() {\n      return this.form.controls;\n    }\n    get items() {\n      return this.f.items;\n    }\n    addItem(name = '', quantity = 1) {\n      const itemForm = this.formBuilder.group({\n        name: [name, Validators.required],\n        quantity: [quantity, [Validators.required, Validators.min(1)]]\n      });\n      this.items.push(itemForm);\n    }\n    removeItem(index) {\n      this.items.removeAt(index);\n    }\n    onSubmit() {\n      this.submitted = true;\n      // reset alerts on submit\n      this.alertService.clear();\n      // stop here if form is invalid\n      if (this.form.invalid) {\n        return;\n      }\n      this.loading = true;\n      if (this.isAddMode) {\n        this.createRequest();\n      } else {\n        this.updateRequest();\n      }\n    }\n    createRequest() {\n      this.requestService.create(this.form.value).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Request added successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    updateRequest() {\n      this.requestService.update(this.id, this.form.value).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Request updated successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n  }\n  AddEditComponent.ɵfac = function AddEditComponent_Factory(t) {\n    return new (t || AddEditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.RequestService), i0.ɵɵdirectiveInject(i3.AlertService), i0.ɵɵdirectiveInject(i3.EmployeeService), i0.ɵɵdirectiveInject(i3.AccountService));\n  };\n  AddEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddEditComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 29,\n    vars: 9,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"formControlName\", \"type\", 1, \"form-select\", 3, \"ngClass\"], [\"value\", \"Equipment\"], [\"value\", \"Software\"], [\"value\", \"Access\"], [\"value\", \"Other\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"formArrayName\", \"items\"], [\"class\", \"row mb-2\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"mt-2\", 3, \"click\"], [1, \"btn\", \"btn-primary\", \"me-2\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [\"routerLink\", \"../\", 1, \"btn\", \"btn-link\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"row\", \"mb-2\", 3, \"formGroupName\"], [1, \"col-md-6\"], [\"type\", \"text\", \"formControlName\", \"name\", \"placeholder\", \"Item name\", 1, \"form-control\", 3, \"ngClass\"], [1, \"col-md-4\"], [\"type\", \"number\", \"formControlName\", \"quantity\", \"placeholder\", \"Quantity\", 1, \"form-control\", 3, \"ngClass\"], [1, \"col-md-2\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"disabled\", \"click\"], [1, \"fas\", \"fa-trash\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"]],\n    template: function AddEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function AddEditComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"label\", 2);\n        i0.ɵɵtext(5, \"Request Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"select\", 3)(7, \"option\", 4);\n        i0.ɵɵtext(8, \"Equipment\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"option\", 5);\n        i0.ɵɵtext(10, \"Software\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"option\", 6);\n        i0.ɵɵtext(12, \"Access\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"option\", 7);\n        i0.ɵɵtext(14, \"Other\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(15, AddEditComponent_div_15_Template, 2, 1, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 1)(17, \"label\", 2);\n        i0.ɵɵtext(18, \"Items\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 9);\n        i0.ɵɵtemplate(20, AddEditComponent_div_20_Template, 10, 10, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function AddEditComponent_Template_button_click_21_listener() {\n          return ctx.addItem();\n        });\n        i0.ɵɵtext(22, \" Add Item \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"div\", 1)(24, \"button\", 12);\n        i0.ɵɵtemplate(25, AddEditComponent_span_25_Template, 1, 0, \"span\", 13);\n        i0.ɵɵtext(26, \" Save Request \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"a\", 14);\n        i0.ɵɵtext(28, \"Cancel\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"\", ctx.isAddMode ? \"Create\" : \"Edit\", \" Request\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx.submitted && ctx.f.type.errors));\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.type.errors);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.items.controls);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      }\n    },\n    dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName, i2.RouterLink],\n    encapsulation: 2\n  });\n  return AddEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}