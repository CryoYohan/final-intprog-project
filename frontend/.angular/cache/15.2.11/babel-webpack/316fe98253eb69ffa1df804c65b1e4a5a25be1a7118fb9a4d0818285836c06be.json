{"ast":null,"code":"import { environment } from '@environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let RequestService = /*#__PURE__*/(() => {\n  class RequestService {\n    constructor(http) {\n      this.http = http;\n    }\n    getAll() {\n      return this.http.get(`${environment.apiUrl}/requests`);\n    }\n    getById(id) {\n      return this.http.get(`${environment.apiUrl}/requests/${id}`);\n    }\n    getMyRequests() {\n      return this.http.get(`${environment.apiUrl}/requests/my-requests`);\n    }\n    getAssignedToMe() {\n      return this.http.get(`${environment.apiUrl}/requests/assigned-to-me`);\n    }\n    create(request) {\n      return this.http.post(`${environment.apiUrl}/requests`, request);\n    }\n    update(id, params) {\n      return this.http.put(`${environment.apiUrl}/requests/${id}`, params);\n    }\n    changeStatus(id, status, comments) {\n      return this.http.put(`${environment.apiUrl}/requests/${id}/status`, {\n        status,\n        comments\n      });\n    }\n    delete(id) {\n      return this.http.delete(`${environment.apiUrl}/requests/${id}`);\n    }\n  }\n  RequestService.ɵfac = function RequestService_Factory(t) {\n    return new (t || RequestService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  RequestService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RequestService,\n    factory: RequestService.ɵfac,\n    providedIn: 'root'\n  });\n  return RequestService;\n})();","map":{"version":3,"mappings":"AAGA,SAASA,WAAW,QAAQ,2BAA2B;;;AAIvD,WAAaC,cAAc;EAArB,MAAOA,cAAc;IACvBC,YAAoBC,IAAgB;MAAhB,SAAI,GAAJA,IAAI;IAAgB;IAExCC,MAAM;MACF,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAY,GAAGL,WAAW,CAACM,MAAM,WAAW,CAAC;IACrE;IAEAC,OAAO,CAACC,EAAU;MACd,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAU,GAAGL,WAAW,CAACM,MAAM,aAAaE,EAAE,EAAE,CAAC;IACzE;IAEAC,aAAa;MACT,OAAO,IAAI,CAACN,IAAI,CAACE,GAAG,CAAY,GAAGL,WAAW,CAACM,MAAM,uBAAuB,CAAC;IACjF;IAEAI,eAAe;MACX,OAAO,IAAI,CAACP,IAAI,CAACE,GAAG,CAAY,GAAGL,WAAW,CAACM,MAAM,0BAA0B,CAAC;IACpF;IAEAK,MAAM,CAACC,OAAgB;MACnB,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAU,GAAGb,WAAW,CAACM,MAAM,WAAW,EAAEM,OAAO,CAAC;IAC7E;IAEAE,MAAM,CAACN,EAAU,EAAEO,MAAW;MAC1B,OAAO,IAAI,CAACZ,IAAI,CAACa,GAAG,CAAU,GAAGhB,WAAW,CAACM,MAAM,aAAaE,EAAE,EAAE,EAAEO,MAAM,CAAC;IACjF;IAEAE,YAAY,CAACT,EAAU,EAAEU,MAAc,EAAEC,QAAgB;MACrD,OAAO,IAAI,CAAChB,IAAI,CAACa,GAAG,CAAU,GAAGhB,WAAW,CAACM,MAAM,aAAaE,EAAE,SAAS,EAAE;QAAEU,MAAM;QAAEC;MAAQ,CAAE,CAAC;IACtG;IAEAC,MAAM,CAACZ,EAAU;MACb,OAAO,IAAI,CAACL,IAAI,CAACiB,MAAM,CAAC,GAAGpB,WAAW,CAACM,MAAM,aAAaE,EAAE,EAAE,CAAC;IACnE;;;qBAjCSP,cAAc;EAAA;;WAAdA,cAAc;IAAAoB,SAAdpB,cAAc;IAAAqB,YADD;EAAM;EAAA,OACnBrB,cAAc;AAAA","names":["environment","RequestService","constructor","http","getAll","get","apiUrl","getById","id","getMyRequests","getAssignedToMe","create","request","post","update","params","put","changeStatus","status","comments","delete","factory","providedIn"],"sourceRoot":"","sources":["D:\\JiM\\School\\3rd Year\\2nd Semester\\SUBJECTS\\IT-INTPROG32\\Coding (INTPROG32)\\Final\\project3 (cursor)\\frontend\\src\\app\\_services\\request.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { environment } from '@environments/environment';\r\nimport { Request } from '@app/_models';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class RequestService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAll() {\r\n        return this.http.get<Request[]>(`${environment.apiUrl}/requests`);\r\n    }\r\n\r\n    getById(id: string) {\r\n        return this.http.get<Request>(`${environment.apiUrl}/requests/${id}`);\r\n    }\r\n\r\n    getMyRequests() {\r\n        return this.http.get<Request[]>(`${environment.apiUrl}/requests/my-requests`);\r\n    }\r\n\r\n    getAssignedToMe() {\r\n        return this.http.get<Request[]>(`${environment.apiUrl}/requests/assigned-to-me`);\r\n    }\r\n\r\n    create(request: Request) {\r\n        return this.http.post<Request>(`${environment.apiUrl}/requests`, request);\r\n    }\r\n\r\n    update(id: string, params: any) {\r\n        return this.http.put<Request>(`${environment.apiUrl}/requests/${id}`, params);\r\n    }\r\n\r\n    changeStatus(id: string, status: string, comments: string) {\r\n        return this.http.put<Request>(`${environment.apiUrl}/requests/${id}/status`, { status, comments });\r\n    }\r\n\r\n    delete(id: string) {\r\n        return this.http.delete(`${environment.apiUrl}/requests/${id}`);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}