{"ast":null,"code":"import { first } from 'rxjs/operators';\nimport { Role, WorkflowStatus } from '@app/_models';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/_services\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"./confirm-modal.component\";\nconst _c0 = [\"confirmModal\"];\nfunction ListWorkflowComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"All Workflows\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction ListWorkflowComponent_ng_container_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"- \", ctx_r9.employeeFullName, \"\");\n  }\n}\nfunction ListWorkflowComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, ListWorkflowComponent_ng_container_2_ng_container_2_Template, 2, 1, \"ng-container\", 0);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Workflows for Employee #\", ctx_r1.employeeId, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.employeeFullName);\n  }\n}\nfunction ListWorkflowComponent_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"All Workflows\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction ListWorkflowComponent_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"Employee Workflows\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction ListWorkflowComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"a\", 11);\n    i0.ɵɵtext(2, \"View All Workflows\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ListWorkflowComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵelement(1, \"span\", 13);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ListWorkflowComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" No workflows found for Employee #\", ctx_r6.employeeId, \" \");\n  }\n}\nfunction ListWorkflowComponent_table_13_tr_16_span_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 27);\n  }\n}\nfunction ListWorkflowComponent_table_13_tr_16_li_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"a\", 28);\n    i0.ɵɵlistener(\"click\", function ListWorkflowComponent_table_13_tr_16_li_22_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const workflow_r12 = i0.ɵɵnextContext().$implicit;\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.openStatusChangeModal(workflow_r12.id, ctx_r16.WorkflowStatus.ForReviewing));\n    });\n    i0.ɵɵtext(2, \"Mark For Review\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const workflow_r12 = i0.ɵɵnextContext().$implicit;\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"disabled\", workflow_r12.status === ctx_r14.WorkflowStatus.ForReviewing);\n  }\n}\nfunction ListWorkflowComponent_table_13_tr_16_li_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"a\", 28);\n    i0.ɵɵlistener(\"click\", function ListWorkflowComponent_table_13_tr_16_li_23_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const workflow_r12 = i0.ɵɵnextContext().$implicit;\n      const ctx_r20 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r20.openStatusChangeModal(workflow_r12.id, ctx_r20.WorkflowStatus.Completed));\n    });\n    i0.ɵɵtext(2, \"Mark Complete\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const workflow_r12 = i0.ɵɵnextContext().$implicit;\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"disabled\", workflow_r12.status === ctx_r15.WorkflowStatus.Completed);\n  }\n}\nconst _c1 = function (a0, a1) {\n  return {\n    \"bg-info\": a0,\n    \"bg-success\": a1\n  };\n};\nfunction ListWorkflowComponent_table_13_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"span\", 21);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵpipe(12, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\")(14, \"div\", 22)(15, \"button\", 23);\n    i0.ɵɵtemplate(16, ListWorkflowComponent_table_13_tr_16_span_16_Template, 1, 0, \"span\", 24);\n    i0.ɵɵtext(17, \" Actions \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"ul\", 25)(19, \"li\")(20, \"a\", 26);\n    i0.ɵɵtext(21, \"View Details\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(22, ListWorkflowComponent_table_13_tr_16_li_22_Template, 3, 2, \"li\", 0);\n    i0.ɵɵtemplate(23, ListWorkflowComponent_table_13_tr_16_li_23_Template, 3, 2, \"li\", 0);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const workflow_r12 = ctx.$implicit;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(workflow_r12.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(workflow_r12.type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(workflow_r12.details);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(14, _c1, workflow_r12.status === ctx_r10.WorkflowStatus.ForReviewing, workflow_r12.status === ctx_r10.WorkflowStatus.Completed));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(workflow_r12.status);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(12, 11, workflow_r12.datetimecreated, \"medium\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", workflow_r12.isUpdating);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", workflow_r12.isUpdating);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"view/\", workflow_r12.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r10.isAdmin);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r10.isAdmin);\n  }\n}\nfunction ListWorkflowComponent_table_13_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 29)(2, \"span\", 30);\n    i0.ɵɵtext(3, \"No workflows found\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction ListWorkflowComponent_table_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 15)(1, \"thead\")(2, \"tr\")(3, \"th\", 16);\n    i0.ɵɵtext(4, \"ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\", 17);\n    i0.ɵɵtext(6, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\", 18);\n    i0.ɵɵtext(8, \"Details\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\", 16);\n    i0.ɵɵtext(10, \"Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\", 19);\n    i0.ɵɵtext(12, \"Date & Time Created\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"th\", 17);\n    i0.ɵɵtext(14, \"Actions\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(15, \"tbody\");\n    i0.ɵɵtemplate(16, ListWorkflowComponent_table_13_tr_16_Template, 24, 17, \"tr\", 20);\n    i0.ɵɵtemplate(17, ListWorkflowComponent_table_13_tr_17_Template, 4, 0, \"tr\", 0);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(16);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r7.workflows);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r7.loading && (!ctx_r7.workflows || ctx_r7.workflows.length === 0));\n  }\n}\nexport let ListWorkflowComponent = /*#__PURE__*/(() => {\n  class ListWorkflowComponent {\n    constructor(workflowService, alertService, accountService, route) {\n      var _a;\n      this.workflowService = workflowService;\n      this.alertService = alertService;\n      this.accountService = accountService;\n      this.route = route;\n      this.workflows = null;\n      this.loading = false;\n      this.isAdmin = false;\n      this.employeeId = null;\n      this.employeeFullName = null;\n      this.confirmMessage = '';\n      this.notFound = false;\n      this.pendingStatusChange = null;\n      // Make enum available in template\n      this.WorkflowStatus = WorkflowStatus;\n      this.isAdmin = ((_a = this.accountService.accountValue) === null || _a === void 0 ? void 0 : _a.role) === Role.Admin;\n      // Get employeeId from query params\n      this.route.queryParams.subscribe(params => {\n        this.employeeId = params['employeeid'];\n        if (this.employeeId) {\n          this.loadWorkflows();\n        } else {\n          this.notFound = false;\n          this.loadWorkflows();\n        }\n      });\n    }\n    ngOnInit() {\n      this.loadWorkflows();\n    }\n    loadWorkflows() {\n      this.loading = true;\n      let request;\n      if (this.employeeId) {\n        request = this.workflowService.getByEmployeeId(this.employeeId);\n      } else {\n        request = this.workflowService.getAll();\n      }\n      request.pipe(first()).subscribe({\n        next: workflows => {\n          // Sort workflows by date in descending order\n          this.workflows = workflows.sort((a, b) => {\n            const dateA = new Date(a.datetimecreated).getTime();\n            const dateB = new Date(b.datetimecreated).getTime();\n            return dateB - dateA;\n          });\n          this.loading = false;\n          this.notFound = false;\n        },\n        error: error => {\n          if (error.status === 404) {\n            this.notFound = true;\n          }\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    openStatusChangeModal(id, status) {\n      const workflow = this.workflows.find(x => x.id === id);\n      if (!workflow) return;\n      this.pendingStatusChange = {\n        id,\n        status\n      };\n      this.confirmMessage = `Are you sure you want to mark this workflow ${status === WorkflowStatus.ForReviewing ? 'for review' : 'as completed'}?`;\n      this.confirmModal.show();\n    }\n    onStatusChangeConfirmed() {\n      if (!this.pendingStatusChange) return;\n      const {\n        id,\n        status\n      } = this.pendingStatusChange;\n      const workflow = this.workflows.find(x => x.id === id);\n      if (!workflow) return;\n      workflow.isUpdating = true;\n      this.workflowService.changeStatus(id, status).pipe(first()).subscribe({\n        next: () => {\n          workflow.status = status;\n          workflow.isUpdating = false;\n          this.alertService.success('Workflow status updated successfully');\n        },\n        error: error => {\n          this.alertService.error(error);\n          workflow.isUpdating = false;\n        }\n      });\n      this.pendingStatusChange = null;\n    }\n    deleteWorkflow(id) {\n      const workflow = this.workflows.find(x => x.id === id);\n      if (!workflow) return;\n      if (confirm('Are you sure you want to delete this workflow?')) {\n        workflow.isDeleting = true;\n        this.workflowService.delete(id).pipe(first()).subscribe({\n          next: () => {\n            this.workflows = this.workflows.filter(x => x.id !== id);\n            this.alertService.success('Workflow deleted successfully');\n          },\n          error: error => {\n            this.alertService.error(error);\n            workflow.isDeleting = false;\n          }\n        });\n      }\n    }\n  }\n  ListWorkflowComponent.ɵfac = function ListWorkflowComponent_Factory(t) {\n    return new (t || ListWorkflowComponent)(i0.ɵɵdirectiveInject(i1.WorkflowService), i0.ɵɵdirectiveInject(i1.AlertService), i0.ɵɵdirectiveInject(i1.AccountService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  ListWorkflowComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ListWorkflowComponent,\n    selectors: [[\"ng-component\"]],\n    viewQuery: function ListWorkflowComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.confirmModal = _t.first);\n      }\n    },\n    decls: 16,\n    vars: 9,\n    consts: [[4, \"ngIf\"], [1, \"card\"], [1, \"card-header\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"mb-0\"], [1, \"card-body\"], [\"class\", \"text-center\", 4, \"ngIf\"], [\"class\", \"alert alert-warning\", 4, \"ngIf\"], [\"class\", \"table table-striped\", 4, \"ngIf\"], [3, \"message\", \"confirmed\"], [\"confirmModal\", \"\"], [\"routerLink\", \"/workflows\", 1, \"btn\", \"btn-secondary\"], [1, \"text-center\"], [1, \"spinner-border\", \"spinner-border-lg\", \"align-center\"], [1, \"alert\", \"alert-warning\"], [1, \"table\", \"table-striped\"], [2, \"width\", \"10%\"], [2, \"width\", \"15%\"], [2, \"width\", \"30%\"], [2, \"width\", \"20%\"], [4, \"ngFor\", \"ngForOf\"], [1, \"badge\", 3, \"ngClass\"], [1, \"btn-group\"], [\"type\", \"button\", \"data-bs-toggle\", \"dropdown\", 1, \"btn\", \"btn-sm\", \"btn-primary\", \"dropdown-toggle\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [1, \"dropdown-menu\"], [1, \"dropdown-item\", 3, \"routerLink\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"], [1, \"dropdown-item\", 3, \"click\"], [\"colspan\", \"6\", 1, \"text-center\"], [1, \"text-muted\"]],\n    template: function ListWorkflowComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtemplate(1, ListWorkflowComponent_ng_container_1_Template, 2, 0, \"ng-container\", 0);\n        i0.ɵɵtemplate(2, ListWorkflowComponent_ng_container_2_Template, 3, 2, \"ng-container\", 0);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"div\", 3)(6, \"h2\", 4);\n        i0.ɵɵtemplate(7, ListWorkflowComponent_ng_container_7_Template, 2, 0, \"ng-container\", 0);\n        i0.ɵɵtemplate(8, ListWorkflowComponent_ng_container_8_Template, 2, 0, \"ng-container\", 0);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, ListWorkflowComponent_div_9_Template, 3, 0, \"div\", 0);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 5);\n        i0.ɵɵtemplate(11, ListWorkflowComponent_div_11_Template, 2, 0, \"div\", 6);\n        i0.ɵɵtemplate(12, ListWorkflowComponent_div_12_Template, 2, 1, \"div\", 7);\n        i0.ɵɵtemplate(13, ListWorkflowComponent_table_13_Template, 18, 2, \"table\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"app-confirm-modal\", 9, 10);\n        i0.ɵɵlistener(\"confirmed\", function ListWorkflowComponent_Template_app_confirm_modal_confirmed_14_listener() {\n          return ctx.onStatusChangeConfirmed();\n        });\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.employeeId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.employeeId);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", !ctx.employeeId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.employeeId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.employeeId);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.notFound);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading && !ctx.notFound && ctx.workflows);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"message\", ctx.confirmMessage);\n      }\n    },\n    dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i2.RouterLink, i4.ConfirmModalComponent, i3.DatePipe],\n    encapsulation: 2\n  });\n  return ListWorkflowComponent;\n})();","map":{"version":3,"mappings":"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","names":["first","Role","WorkflowStatus","i0","ListWorkflowComponent","constructor","workflowService","alertService","accountService","route","isAdmin","accountValue","role","Admin","queryParams","subscribe","params","employeeId","loadWorkflows","notFound","ngOnInit","loading","request","getByEmployeeId","getAll","pipe","next","workflows","sort","a","b","dateA","Date","datetimecreated","getTime","dateB","error","status","openStatusChangeModal","id","workflow","find","x","pendingStatusChange","confirmMessage","ForReviewing","confirmModal","show","onStatusChangeConfirmed","isUpdating","changeStatus","success","deleteWorkflow","confirm","isDeleting","delete","filter","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["D:\\JiM\\School\\3rd Year\\2nd Semester\\SUBJECTS\\IT-INTPROG32\\Coding (INTPROG32)\\Final\\project6\\frontend\\src\\app\\workflows\\list.component.ts","D:\\JiM\\School\\3rd Year\\2nd Semester\\SUBJECTS\\IT-INTPROG32\\Coding (INTPROG32)\\Final\\project6\\frontend\\src\\app\\workflows\\list.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { WorkflowService, AlertService, AccountService } from '@app/_services';\nimport { Role, WorkflowStatus } from '@app/_models';\nimport { ConfirmModalComponent } from './confirm-modal.component';\n\n@Component({ templateUrl: 'list.component.html' })\nexport class ListWorkflowComponent implements OnInit {\n    @ViewChild('confirmModal') confirmModal!: ConfirmModalComponent;\n    workflows = null;\n    loading = false;\n    isAdmin = false;\n    employeeId: string | null = null;\n    employeeFullName: string | null = null;\n    confirmMessage: string = '';\n    notFound = false;\n    private pendingStatusChange: { id: string; status: WorkflowStatus } | null = null;\n    \n    // Make enum available in template\n    WorkflowStatus = WorkflowStatus;\n\n    constructor(\n        private workflowService: WorkflowService,\n        private alertService: AlertService,\n        private accountService: AccountService,\n        private route: ActivatedRoute\n    ) {\n        this.isAdmin = this.accountService.accountValue?.role === Role.Admin;\n        \n        // Get employeeId from query params\n        this.route.queryParams.subscribe(params => {\n            this.employeeId = params['employeeid'];\n            if (this.employeeId) {\n                this.loadWorkflows();\n            } else {\n                this.notFound = false;\n                this.loadWorkflows();\n            }\n        });\n    }\n\n    ngOnInit() {\n        this.loadWorkflows();\n    }\n\n    private loadWorkflows() {\n        this.loading = true;\n        let request;\n\n        if (this.employeeId) {\n            request = this.workflowService.getByEmployeeId(this.employeeId);\n        } else {\n            request = this.workflowService.getAll();\n        }\n\n        request.pipe(first())\n            .subscribe({\n                next: (workflows: any) => {\n                    // Sort workflows by date in descending order\n                    this.workflows = workflows.sort((a: any, b: any) => {\n                        const dateA = new Date(a.datetimecreated).getTime();\n                        const dateB = new Date(b.datetimecreated).getTime();\n                        return dateB - dateA;\n                    });\n                    this.loading = false;\n                    this.notFound = false;\n                },\n                error: error => {\n                    if (error.status === 404) {\n                        this.notFound = true;\n                    }\n                    this.alertService.error(error);\n                    this.loading = false;\n                }\n            });\n    }\n\n    openStatusChangeModal(id: string, status: WorkflowStatus) {\n        const workflow = this.workflows.find(x => x.id === id);\n        if (!workflow) return;\n\n        this.pendingStatusChange = { id, status };\n        this.confirmMessage = `Are you sure you want to mark this workflow ${status === WorkflowStatus.ForReviewing ? 'for review' : 'as completed'}?`;\n        this.confirmModal.show();\n    }\n\n    onStatusChangeConfirmed() {\n        if (!this.pendingStatusChange) return;\n\n        const { id, status } = this.pendingStatusChange;\n        const workflow = this.workflows.find(x => x.id === id);\n        if (!workflow) return;\n\n        workflow.isUpdating = true;\n        this.workflowService.changeStatus(id, status)\n            .pipe(first())\n            .subscribe({\n                next: () => {\n                    workflow.status = status;\n                    workflow.isUpdating = false;\n                    this.alertService.success('Workflow status updated successfully');\n                },\n                error: error => {\n                    this.alertService.error(error);\n                    workflow.isUpdating = false;\n                }\n            });\n\n        this.pendingStatusChange = null;\n    }\n\n    deleteWorkflow(id: string) {\n        const workflow = this.workflows.find(x => x.id === id);\n        if (!workflow) return;\n\n        if (confirm('Are you sure you want to delete this workflow?')) {\n            workflow.isDeleting = true;\n            this.workflowService.delete(id)\n                .pipe(first())\n                .subscribe({\n                    next: () => {\n                        this.workflows = this.workflows.filter(x => x.id !== id);\n                        this.alertService.success('Workflow deleted successfully');\n                    },\n                    error: error => {\n                        this.alertService.error(error);\n                        workflow.isDeleting = false;\n                    }\n                });\n        }\n    }\n} ","<h1>\n    <ng-container *ngIf=\"!employeeId\">All Workflows</ng-container>\n    <ng-container *ngIf=\"employeeId\">\n        Workflows for Employee #{{employeeId}}\n        <ng-container *ngIf=\"employeeFullName\">- {{employeeFullName}}</ng-container>\n    </ng-container>\n</h1>\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        <div class=\"d-flex justify-content-between align-items-center\">\n            <h2 class=\"mb-0\">\n                <ng-container *ngIf=\"!employeeId\">All Workflows</ng-container>\n                <ng-container *ngIf=\"employeeId\">Employee Workflows</ng-container>\n            </h2>\n            <div *ngIf=\"employeeId\">\n                <a routerLink=\"/workflows\" class=\"btn btn-secondary\">View All Workflows</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"card-body\">\n        <div *ngIf=\"loading\" class=\"text-center\">\n            <span class=\"spinner-border spinner-border-lg align-center\"></span>\n        </div>\n        <div *ngIf=\"notFound\" class=\"alert alert-warning\">\n            No workflows found for Employee #{{employeeId}}\n        </div>\n        <table *ngIf=\"!loading && !notFound && workflows\" class=\"table table-striped\">\n            <thead>\n                <tr>\n                    <th style=\"width: 10%\">ID</th>\n                    <th style=\"width: 15%\">Type</th>\n                    <th style=\"width: 30%\">Details</th>\n                    <th style=\"width: 10%\">Status</th>\n                    <th style=\"width: 20%\">Date & Time Created</th>\n                    <th style=\"width: 15%\">Actions</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let workflow of workflows\">\n                    <td>{{workflow.id}}</td>\n                    <td>{{workflow.type}}</td>\n                    <td>{{workflow.details}}</td>\n                    <td>\n                        <span class=\"badge\" [ngClass]=\"{\n                            'bg-info': workflow.status === WorkflowStatus.ForReviewing,\n                            'bg-success': workflow.status === WorkflowStatus.Completed\n                        }\">{{workflow.status}}</span>\n                    </td>\n                    <td>{{workflow.datetimecreated | date:'medium'}}</td>\n                    <td>\n                        <div class=\"btn-group\">\n                            <button type=\"button\" class=\"btn btn-sm btn-primary dropdown-toggle\" data-bs-toggle=\"dropdown\" [disabled]=\"workflow.isUpdating\">\n                                <span *ngIf=\"workflow.isUpdating\" class=\"spinner-border spinner-border-sm me-1\"></span>\n                                Actions\n                            </button>\n                            <ul class=\"dropdown-menu\">\n                                <li><a class=\"dropdown-item\" routerLink=\"view/{{workflow.id}}\">View Details</a></li>\n                                <li *ngIf=\"isAdmin\"><a class=\"dropdown-item\" (click)=\"openStatusChangeModal(workflow.id, WorkflowStatus.ForReviewing)\" [class.disabled]=\"workflow.status === WorkflowStatus.ForReviewing\">Mark For Review</a></li>\n                                <li *ngIf=\"isAdmin\"><a class=\"dropdown-item\" (click)=\"openStatusChangeModal(workflow.id, WorkflowStatus.Completed)\" [class.disabled]=\"workflow.status === WorkflowStatus.Completed\">Mark Complete</a></li>\n                            </ul>\n                        </div>\n                    </td>\n                </tr>\n                <tr *ngIf=\"!loading && (!workflows || workflows.length === 0)\">\n                    <td colspan=\"6\" class=\"text-center\">\n                        <span class=\"text-muted\">No workflows found</span>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n\n<app-confirm-modal #confirmModal [message]=\"confirmMessage\" (confirmed)=\"onStatusChangeConfirmed()\"></app-confirm-modal> "]},"metadata":{},"sourceType":"module","externalDependencies":[]}