{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { Role } from '@app/_models';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/_services\";\nimport * as i4 from \"@angular/common\";\nfunction AddEditComponent_div_6_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const account_r12 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", account_r12.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" \", account_r12.id, \" - \", account_r12.firstName, \" \", account_r12.lastName, \" \");\n  }\n}\nfunction AddEditComponent_div_6_div_7_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Account is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_6_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵtemplate(1, AddEditComponent_div_6_div_7_div_1_Template, 2, 0, \"div\", 33);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.f.accountId.errors.required);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nfunction AddEditComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"label\", 7);\n    i0.ɵɵtext(2, \"Account\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"select\", 30)(4, \"option\", 13);\n    i0.ɵɵtext(5, \"Select Account...\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, AddEditComponent_div_6_option_6_Template, 2, 4, \"option\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, AddEditComponent_div_6_div_7_Template, 2, 1, \"div\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c0, ctx_r0.submitted && ctx_r0.f.accountId.errors));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.availableAccounts);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.submitted && ctx_r0.f.accountId.errors);\n  }\n}\nfunction AddEditComponent_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 34);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"titlecase\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, ctx_r1.selectedAccountName));\n  }\n}\nfunction AddEditComponent_div_13_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Employee ID is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵtemplate(1, AddEditComponent_div_13_div_1_Template, 2, 0, \"div\", 33);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f.employeeId.errors.required);\n  }\n}\nfunction AddEditComponent_option_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dept_r15 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", dept_r15.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", dept_r15.name, \" \");\n  }\n}\nfunction AddEditComponent_div_22_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Department is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵtemplate(1, AddEditComponent_div_22_div_1_Template, 2, 0, \"div\", 33);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.f.departmentId.errors.required);\n  }\n}\nfunction AddEditComponent_div_27_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Position is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵtemplate(1, AddEditComponent_div_27_div_1_Template, 2, 0, \"div\", 33);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.f.position.errors.required);\n  }\n}\nfunction AddEditComponent_div_33_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Hire Date is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵtemplate(1, AddEditComponent_div_33_div_1_Template, 2, 0, \"div\", 33);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.f.hireDate.errors.required);\n  }\n}\nfunction AddEditComponent_span_55_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 35);\n  }\n}\nfunction AddEditComponent_div_59_span_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 35);\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    \"show\": a0\n  };\n};\nfunction AddEditComponent_div_59_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 36)(1, \"div\", 37)(2, \"div\", 38)(3, \"div\", 39)(4, \"h5\", 40);\n    i0.ɵɵtext(5, \"Confirm Delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 41);\n    i0.ɵɵlistener(\"click\", function AddEditComponent_div_59_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.cancelDelete());\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 42)(8, \"div\", 43);\n    i0.ɵɵelement(9, \"i\", 44);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"p\", 45);\n    i0.ɵɵtext(11, \"Are you sure you want to delete this employee?\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"p\", 46);\n    i0.ɵɵtext(13, \"This action cannot be undone.\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 47)(15, \"button\", 48);\n    i0.ɵɵlistener(\"click\", function AddEditComponent_div_59_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.cancelDelete());\n    });\n    i0.ɵɵtext(16, \"Cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"button\", 49);\n    i0.ɵɵlistener(\"click\", function AddEditComponent_div_59_Template_button_click_17_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.confirmDelete());\n    });\n    i0.ɵɵtemplate(18, AddEditComponent_div_59_span_18_Template, 1, 0, \"span\", 26);\n    i0.ɵɵtext(19, \" Delete Employee \");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c1, ctx_r8.showDeleteModal));\n    i0.ɵɵadvance(18);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.loading);\n  }\n}\nfunction AddEditComponent_div_60_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 50);\n  }\n}\nexport let AddEditComponent = /*#__PURE__*/(() => {\n  class AddEditComponent {\n    constructor(formBuilder, route, router, accountService, employeeService, departmentService, alertService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.accountService = accountService;\n      this.employeeService = employeeService;\n      this.departmentService = departmentService;\n      this.alertService = alertService;\n      this.loading = false;\n      this.submitted = false;\n      this.accounts = [];\n      this.availableAccounts = [];\n      this.departments = [];\n      this.selectedAccountName = '';\n      this.existingEmployeeIds = [];\n      this.showDeleteModal = false;\n      this.employeeToDelete = null;\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      this.isAddMode = !this.id;\n      // Load all necessary data\n      this.loadAccounts();\n      this.loadDepartments();\n      this.loadExistingEmployeeIds();\n      this.form = this.formBuilder.group({\n        accountId: [{\n          value: '',\n          disabled: !this.isAddMode\n        }, Validators.required],\n        employeeId: [{\n          value: '',\n          disabled: true\n        }, Validators.required],\n        departmentId: [{\n          value: '',\n          disabled: !this.isAddMode\n        }, Validators.required],\n        position: ['', Validators.required],\n        hireDate: ['', Validators.required],\n        salary: [''],\n        status: ['Active']\n      });\n      // Watch for account changes to update the name display\n      this.form.get('accountId').valueChanges.subscribe(accountId => {\n        const account = this.accounts.find(a => a.id === accountId);\n        if (account) {\n          this.selectedAccountName = `${account.firstName} ${account.lastName}`;\n        } else {\n          this.selectedAccountName = '';\n        }\n      });\n      if (!this.isAddMode) {\n        this.employeeService.getById(this.id).pipe(first()).subscribe(employee => {\n          // Find the account details\n          this.accountService.getById(employee.accountId.toString()).pipe(first()).subscribe(account => {\n            this.selectedAccountName = `${account.firstName} ${account.lastName}`;\n          });\n          // Find the department details\n          this.departmentService.getById(employee.departmentId).pipe(first()).subscribe(department => {\n            employee.departmentName = department.name;\n          });\n          // Patch all form values\n          Object.keys(this.form.controls).forEach(key => {\n            this.form.get(key).patchValue(employee[key]);\n          });\n        });\n      } else {\n        // Generate unique employee ID for new employees\n        this.generateUniqueEmployeeId();\n      }\n    }\n    // Load existing employee IDs to ensure uniqueness\n    loadExistingEmployeeIds() {\n      this.employeeService.getAll().pipe(first()).subscribe(employees => {\n        this.existingEmployeeIds = employees.map(e => e.employeeId);\n        if (this.isAddMode) {\n          this.generateUniqueEmployeeId();\n        }\n      });\n    }\n    // Load all accounts and filter available ones\n    loadAccounts() {\n      // First, get all employees to know which accounts are already assigned\n      this.employeeService.getAll().pipe(first()).subscribe(employees => {\n        const usedAccountIds = employees.map(e => e.accountId.toString());\n        // Then load all accounts and filter them\n        this.accountService.getAll().pipe(first()).subscribe(accounts => {\n          var _a, _b;\n          this.accounts = accounts;\n          // Filter accounts:\n          // 1. Remove admin accounts\n          // 2. Remove accounts that are already assigned to employees (except in edit mode for current account)\n          this.availableAccounts = accounts.filter(account => {\n            var _a, _b;\n            const isAdmin = account.role === Role.Admin;\n            const isAlreadyAssigned = usedAccountIds.includes(account.id);\n            const isCurrentAccount = !this.isAddMode && account.id === ((_b = (_a = this.form) === null || _a === void 0 ? void 0 : _a.get('accountId')) === null || _b === void 0 ? void 0 : _b.value);\n            return !isAdmin && (!isAlreadyAssigned || isCurrentAccount);\n          });\n          // If in edit mode, ensure the current account is in the list\n          if (!this.isAddMode && ((_b = (_a = this.form) === null || _a === void 0 ? void 0 : _a.get('accountId')) === null || _b === void 0 ? void 0 : _b.value)) {\n            const currentAccount = this.accounts.find(a => a.id === this.form.get('accountId').value);\n            if (currentAccount && !this.availableAccounts.some(a => a.id === currentAccount.id)) {\n              this.availableAccounts.push(currentAccount);\n            }\n          }\n          // Sort accounts by name for better UX\n          this.availableAccounts.sort((a, b) => `${a.firstName} ${a.lastName}`.localeCompare(`${b.firstName} ${b.lastName}`));\n        });\n      });\n    }\n    // Load all departments\n    loadDepartments() {\n      this.departmentService.getAll().pipe(first()).subscribe(departments => {\n        this.departments = departments;\n      });\n    }\n    // Generate a unique employee ID\n    generateUniqueEmployeeId() {\n      let newId;\n      do {\n        const prefix = 'EMP';\n        const randomNum = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\n        const year = new Date().getFullYear().toString().substr(-2);\n        newId = `${prefix}${year}${randomNum}`;\n      } while (this.existingEmployeeIds.includes(newId));\n      this.form.get('employeeId').patchValue(newId);\n    }\n    // convenience getter for easy access to form fields\n    get f() {\n      return this.form.controls;\n    }\n    onSubmit() {\n      this.submitted = true;\n      this.alertService.clear();\n      if (this.form.invalid) {\n        return;\n      }\n      this.loading = true;\n      if (this.isAddMode) {\n        this.createEmployee();\n      } else {\n        this.updateEmployee();\n      }\n    }\n    createEmployee() {\n      const formData = Object.assign({}, this.form.getRawValue() // Get values from disabled fields too\n      );\n\n      this.employeeService.create(formData).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Employee added successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['/employees']);\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    updateEmployee() {\n      const formData = Object.assign({}, this.form.getRawValue() // Get values from disabled fields too\n      );\n\n      this.employeeService.update(this.id, formData).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Employee updated successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['/employees']);\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    // Delete modal methods\n    openDeleteModal(id) {\n      this.employeeToDelete = id;\n      this.showDeleteModal = true;\n    }\n    cancelDelete() {\n      this.showDeleteModal = false;\n      this.employeeToDelete = null;\n    }\n    confirmDelete() {\n      if (!this.employeeToDelete) return;\n      this.loading = true;\n      this.employeeService.delete(this.employeeToDelete).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Employee deleted successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['/employees']);\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n  }\n  AddEditComponent.ɵfac = function AddEditComponent_Factory(t) {\n    return new (t || AddEditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AccountService), i0.ɵɵdirectiveInject(i3.EmployeeService), i0.ɵɵdirectiveInject(i3.DepartmentService), i0.ɵɵdirectiveInject(i3.AlertService));\n  };\n  AddEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddEditComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 61,\n    vars: 26,\n    consts: [[1, \"mb-4\"], [1, \"card\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [\"class\", \"col-md-6 mb-3\", 4, \"ngIf\"], [1, \"col-md-6\", \"mb-3\"], [1, \"form-label\"], [1, \"input-group\"], [\"type\", \"text\", \"formControlName\", \"employeeId\", \"readonly\", \"\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"input-group-text bg-light\", 4, \"ngIf\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"formControlName\", \"departmentId\", 1, \"form-select\", 3, \"ngClass\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"formControlName\", \"position\", \"placeholder\", \"Enter position\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"date\", \"formControlName\", \"hireDate\", 1, \"form-control\", 3, \"ngClass\"], [1, \"input-group-text\"], [\"type\", \"number\", \"formControlName\", \"salary\", \"placeholder\", \"Enter salary\", 1, \"form-control\"], [\"formControlName\", \"status\", 1, \"form-select\"], [\"value\", \"Active\"], [\"value\", \"Inactive\"], [\"value\", \"On Leave\"], [\"value\", \"Terminated\"], [1, \"border-top\", \"pt-3\"], [1, \"btn\", \"btn-primary\", \"me-2\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [\"routerLink\", \"/employees\", 1, \"btn\", \"btn-secondary\"], [\"class\", \"modal fade\", \"id\", \"deleteModal\", \"tabindex\", \"-1\", 3, \"ngClass\", 4, \"ngIf\"], [\"class\", \"modal-backdrop fade show\", 4, \"ngIf\"], [\"formControlName\", \"accountId\", 1, \"form-select\", 3, \"ngClass\"], [3, \"value\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"input-group-text\", \"bg-light\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"], [\"id\", \"deleteModal\", \"tabindex\", \"-1\", 1, \"modal\", \"fade\", 3, \"ngClass\"], [1, \"modal-dialog\", \"modal-dialog-centered\"], [1, \"modal-content\"], [1, \"modal-header\", \"bg-danger\", \"text-white\"], [1, \"modal-title\"], [\"type\", \"button\", 1, \"btn-close\", \"btn-close-white\", 3, \"click\"], [1, \"modal-body\"], [1, \"text-center\", \"mb-3\"], [1, \"fas\", \"fa-exclamation-triangle\", \"text-danger\", 2, \"font-size\", \"3rem\"], [1, \"text-center\", \"mb-0\"], [1, \"text-center\", \"text-muted\", \"mb-0\"], [1, \"modal-footer\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"modal-backdrop\", \"fade\", \"show\"]],\n    template: function AddEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2)(4, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function AddEditComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵtemplate(6, AddEditComponent_div_6_Template, 8, 5, \"div\", 5);\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"label\", 7);\n        i0.ɵɵtext(9, \"Employee ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 8);\n        i0.ɵɵelement(11, \"input\", 9);\n        i0.ɵɵtemplate(12, AddEditComponent_span_12_Template, 3, 3, \"span\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(13, AddEditComponent_div_13_Template, 2, 1, \"div\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 4)(15, \"div\", 6)(16, \"label\", 7);\n        i0.ɵɵtext(17, \"Department\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"select\", 12)(19, \"option\", 13);\n        i0.ɵɵtext(20, \"Select Department...\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(21, AddEditComponent_option_21_Template, 2, 2, \"option\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(22, AddEditComponent_div_22_Template, 2, 1, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 6)(24, \"label\", 7);\n        i0.ɵɵtext(25, \"Position\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"input\", 15);\n        i0.ɵɵtemplate(27, AddEditComponent_div_27_Template, 2, 1, \"div\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"div\", 4)(29, \"div\", 6)(30, \"label\", 7);\n        i0.ɵɵtext(31, \"Hire Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(32, \"input\", 16);\n        i0.ɵɵtemplate(33, AddEditComponent_div_33_Template, 2, 1, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"div\", 6)(35, \"label\", 7);\n        i0.ɵɵtext(36, \"Salary\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"div\", 8)(38, \"span\", 17);\n        i0.ɵɵtext(39, \"\\u20B1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(40, \"input\", 18);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(41, \"div\", 0)(42, \"label\", 7);\n        i0.ɵɵtext(43, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"select\", 19)(45, \"option\", 20);\n        i0.ɵɵtext(46, \"Active\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"option\", 21);\n        i0.ɵɵtext(48, \"Inactive\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"option\", 22);\n        i0.ɵɵtext(50, \"On Leave\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"option\", 23);\n        i0.ɵɵtext(52, \"Terminated\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(53, \"div\", 24)(54, \"button\", 25);\n        i0.ɵɵtemplate(55, AddEditComponent_span_55_Template, 1, 0, \"span\", 26);\n        i0.ɵɵtext(56, \" Save Employee \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(57, \"a\", 27);\n        i0.ɵɵtext(58, \"Cancel\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵtemplate(59, AddEditComponent_div_59_Template, 20, 4, \"div\", 28);\n        i0.ɵɵtemplate(60, AddEditComponent_div_60_Template, 1, 0, \"div\", 29);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"\", ctx.isAddMode ? \"Add New\" : \"Edit\", \" Employee\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isAddMode);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(18, _c0, ctx.submitted && ctx.f.employeeId.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedAccountName);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.employeeId.errors);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(20, _c0, ctx.submitted && ctx.f.departmentId.errors));\n        i0.ɵɵattribute(\"disabled\", !ctx.isAddMode ? \"\" : null);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.departments);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.departmentId.errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(22, _c0, ctx.submitted && ctx.f.position.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.position.errors);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(24, _c0, ctx.submitted && ctx.f.hireDate.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.hireDate.errors);\n        i0.ɵɵadvance(21);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.showDeleteModal);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showDeleteModal);\n      }\n    },\n    dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.RouterLink, i4.TitleCasePipe],\n    encapsulation: 2\n  });\n  return AddEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}