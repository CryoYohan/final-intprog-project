{"ast":null,"code":"export function appInitializer(accountService) {\n  return () => new Promise(resolve => {\n    // Check if we have a stored account first\n    const account = accountService.accountValue;\n    if (!account) {\n      // No stored account, just resolve\n      resolve();\n      return;\n    }\n    // Check if token is valid before attempting refresh\n    if (!accountService.isTokenValid(account)) {\n      // attempt to refresh token on app start up to auto authenticate\n      accountService.refreshToken().subscribe({\n        next: () => {\n          console.log('Token refreshed successfully during app initialization');\n          resolve();\n        },\n        error: error => {\n          console.error('Token refresh failed during app initialization:', error);\n          // Clear any stored data to ensure clean state\n          accountService.clearAccountData();\n          resolve();\n        }\n      });\n    } else {\n      // Token is still valid, no need to refresh\n      console.log('Token is still valid during app initialization');\n      resolve();\n    }\n  });\n}","map":{"version":3,"mappings":"AAEA,OAAM,SAAUA,cAAc,CAACC,cAA8B;EACzD,OAAO,MAAM,IAAIC,OAAO,CAAQC,OAAO,IAAI;IACvC;IACA,MAAMC,OAAO,GAAGH,cAAc,CAACI,YAAY;IAE3C,IAAI,CAACD,OAAO,EAAE;MACV;MACAD,OAAO,EAAE;MACT;;IAGJ;IACA,IAAI,CAACF,cAAc,CAACK,YAAY,CAACF,OAAO,CAAC,EAAE;MAC3C;MACAH,cAAc,CAACM,YAAY,EAAE,CACxBC,SAAS,CAAC;QACPC,IAAI,EAAE,MAAK;UACHC,OAAO,CAACC,GAAG,CAAC,wDAAwD,CAAC;UACzER,OAAO,EAAE;QACb,CAAC;QACGS,KAAK,EAAGA,KAAK,IAAI;UACbF,OAAO,CAACE,KAAK,CAAC,iDAAiD,EAAEA,KAAK,CAAC;UACvE;UACAX,cAAc,CAACY,gBAAgB,EAAE;UACrCV,OAAO,EAAE;QACb;OACH,CAAC;KACL,MAAM;MACH;MACAO,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC;MAC7DR,OAAO,EAAE;;EAEjB,CAAC,CAAC;AACN","names":["appInitializer","accountService","Promise","resolve","account","accountValue","isTokenValid","refreshToken","subscribe","next","console","log","error","clearAccountData"],"sourceRoot":"","sources":["D:\\JiM\\School\\3rd Year\\2nd Semester\\SUBJECTS\\IT-INTPROG32\\Coding (INTPROG32)\\Final\\project6\\frontend\\src\\app\\_helpers\\app.initializer.ts"],"sourcesContent":["import { AccountService } from '@app/_services';\n\nexport function appInitializer(accountService: AccountService) {\n    return () => new Promise<void>((resolve) => {\n        // Check if we have a stored account first\n        const account = accountService.accountValue;\n        \n        if (!account) {\n            // No stored account, just resolve\n            resolve();\n            return;\n        }\n\n        // Check if token is valid before attempting refresh\n        if (!accountService.isTokenValid(account)) {\n        // attempt to refresh token on app start up to auto authenticate\n        accountService.refreshToken()\n            .subscribe({\n                next: () => {\n                        console.log('Token refreshed successfully during app initialization');\n                    resolve();\n                },\n                    error: (error) => {\n                        console.error('Token refresh failed during app initialization:', error);\n                        // Clear any stored data to ensure clean state\n                        accountService.clearAccountData();\n                    resolve();\n                }\n            });\n        } else {\n            // Token is still valid, no need to refresh\n            console.log('Token is still valid during app initialization');\n            resolve();\n        }\n    });\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}