{"ast":null,"code":"import { first } from 'rxjs/operators';\nimport { Role } from '@app/_models';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/_services\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ListWorkflowComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelement(1, \"span\", 7);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ListWorkflowComponent_table_8_tr_13_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 20);\n  }\n}\nfunction ListWorkflowComponent_table_8_tr_13_li_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"a\", 21);\n    i0.ɵɵlistener(\"click\", function ListWorkflowComponent_table_8_tr_13_li_20_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const workflow_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.changeStatus(workflow_r4.id, \"InProgress\"));\n    });\n    i0.ɵɵtext(2, \"Start Processing\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const workflow_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"disabled\", workflow_r4.status === \"InProgress\");\n  }\n}\nfunction ListWorkflowComponent_table_8_tr_13_li_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"a\", 21);\n    i0.ɵɵlistener(\"click\", function ListWorkflowComponent_table_8_tr_13_li_21_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const workflow_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.changeStatus(workflow_r4.id, \"Completed\"));\n    });\n    i0.ɵɵtext(2, \"Mark Complete\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const workflow_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"disabled\", workflow_r4.status === \"Completed\");\n  }\n}\nfunction ListWorkflowComponent_table_8_tr_13_li_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"a\", 21);\n    i0.ɵɵlistener(\"click\", function ListWorkflowComponent_table_8_tr_13_li_22_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const workflow_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.changeStatus(workflow_r4.id, \"Rejected\"));\n    });\n    i0.ɵɵtext(2, \"Reject\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const workflow_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"disabled\", workflow_r4.status === \"Rejected\");\n  }\n}\nfunction ListWorkflowComponent_table_8_tr_13_li_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵelement(1, \"hr\", 22);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ListWorkflowComponent_table_8_tr_13_li_24_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 20);\n  }\n}\nfunction ListWorkflowComponent_table_8_tr_13_li_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"a\", 23);\n    i0.ɵɵlistener(\"click\", function ListWorkflowComponent_table_8_tr_13_li_24_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const workflow_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r24 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r24.deleteWorkflow(workflow_r4.id));\n    });\n    i0.ɵɵtemplate(2, ListWorkflowComponent_table_8_tr_13_li_24_span_2_Template, 1, 0, \"span\", 17);\n    i0.ɵɵtext(3, \" Delete \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const workflow_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"disabled\", workflow_r4.isDeleting);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", workflow_r4.isDeleting);\n  }\n}\nconst _c0 = function (a0, a1, a2, a3) {\n  return {\n    \"bg-warning\": a0,\n    \"bg-info\": a1,\n    \"bg-success\": a2,\n    \"bg-danger\": a3\n  };\n};\nfunction ListWorkflowComponent_table_8_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"span\", 14);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵpipe(10, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\")(12, \"div\", 15)(13, \"button\", 16);\n    i0.ɵɵtemplate(14, ListWorkflowComponent_table_8_tr_13_span_14_Template, 1, 0, \"span\", 17);\n    i0.ɵɵtext(15, \" Actions \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"ul\", 18)(17, \"li\")(18, \"a\", 19);\n    i0.ɵɵtext(19, \"View Details\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(20, ListWorkflowComponent_table_8_tr_13_li_20_Template, 3, 2, \"li\", 13);\n    i0.ɵɵtemplate(21, ListWorkflowComponent_table_8_tr_13_li_21_Template, 3, 2, \"li\", 13);\n    i0.ɵɵtemplate(22, ListWorkflowComponent_table_8_tr_13_li_22_Template, 3, 2, \"li\", 13);\n    i0.ɵɵtemplate(23, ListWorkflowComponent_table_8_tr_13_li_23_Template, 2, 0, \"li\", 13);\n    i0.ɵɵtemplate(24, ListWorkflowComponent_table_8_tr_13_li_24_Template, 4, 3, \"li\", 13);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const workflow_r4 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(workflow_r4.type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(workflow_r4.details.task);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction4(16, _c0, workflow_r4.status === \"Pending\", workflow_r4.status === \"InProgress\", workflow_r4.status === \"Completed\", workflow_r4.status === \"Rejected\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(workflow_r4.status);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(10, 13, workflow_r4.createdDate, \"medium\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", workflow_r4.isUpdating);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", workflow_r4.isUpdating);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"view/\", workflow_r4.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isAdmin);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isAdmin);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isAdmin);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isAdmin && workflow_r4.status === \"Pending\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isAdmin && workflow_r4.status === \"Pending\");\n  }\n}\nfunction ListWorkflowComponent_table_8_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 24)(2, \"span\", 25);\n    i0.ɵɵtext(3, \"No workflows found\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction ListWorkflowComponent_table_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 8)(1, \"thead\")(2, \"tr\")(3, \"th\", 9);\n    i0.ɵɵtext(4, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\", 10);\n    i0.ɵɵtext(6, \"Task\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\", 11);\n    i0.ɵɵtext(8, \"Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\", 9);\n    i0.ɵɵtext(10, \"Created\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"th\", 11);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"tbody\");\n    i0.ɵɵtemplate(13, ListWorkflowComponent_table_8_tr_13_Template, 25, 21, \"tr\", 12);\n    i0.ɵɵtemplate(14, ListWorkflowComponent_table_8_tr_14_Template, 4, 0, \"tr\", 13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.workflows);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.loading && (!ctx_r1.workflows || ctx_r1.workflows.length === 0));\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    employeeId: a0\n  };\n};\nexport let ListWorkflowComponent = /*#__PURE__*/(() => {\n  class ListWorkflowComponent {\n    constructor(workflowService, alertService, accountService, route) {\n      var _a;\n      this.workflowService = workflowService;\n      this.alertService = alertService;\n      this.accountService = accountService;\n      this.route = route;\n      this.workflows = null;\n      this.loading = false;\n      this.isAdmin = false;\n      this.employeeId = null;\n      this.isAdmin = ((_a = this.accountService.accountValue) === null || _a === void 0 ? void 0 : _a.role) === Role.Admin;\n      // Get employeeId from query params\n      this.route.queryParams.subscribe(params => {\n        this.employeeId = params['employeeId'];\n        if (this.employeeId) {\n          this.loadWorkflows();\n        }\n      });\n    }\n    ngOnInit() {\n      if (!this.employeeId) {\n        this.loadAllWorkflows();\n      }\n    }\n    loadAllWorkflows() {\n      this.loading = true;\n      this.workflowService.getAll().pipe(first()).subscribe({\n        next: workflows => {\n          this.workflows = workflows;\n          this.loading = false;\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    loadWorkflows() {\n      this.loading = true;\n      this.workflowService.getByEmployeeId(this.employeeId).pipe(first()).subscribe({\n        next: workflows => {\n          this.workflows = workflows;\n          this.loading = false;\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    changeStatus(id, status) {\n      const workflow = this.workflows.find(x => x.id === id);\n      if (!workflow) return;\n      const comments = prompt('Please enter comments for this status change:');\n      if (comments === null) return; // User cancelled\n      workflow.isUpdating = true;\n      this.workflowService.changeStatus(id, status, comments).pipe(first()).subscribe({\n        next: () => {\n          workflow.status = status;\n          workflow.isUpdating = false;\n          this.alertService.success('Workflow status updated successfully');\n        },\n        error: error => {\n          this.alertService.error(error);\n          workflow.isUpdating = false;\n        }\n      });\n    }\n    deleteWorkflow(id) {\n      const workflow = this.workflows.find(x => x.id === id);\n      if (!workflow) return;\n      if (confirm('Are you sure you want to delete this workflow?')) {\n        workflow.isDeleting = true;\n        this.workflowService.delete(id).pipe(first()).subscribe({\n          next: () => {\n            this.workflows = this.workflows.filter(x => x.id !== id);\n            this.alertService.success('Workflow deleted successfully');\n          },\n          error: error => {\n            this.alertService.error(error);\n            workflow.isDeleting = false;\n          }\n        });\n      }\n    }\n  }\n  ListWorkflowComponent.ɵfac = function ListWorkflowComponent_Factory(t) {\n    return new (t || ListWorkflowComponent)(i0.ɵɵdirectiveInject(i1.WorkflowService), i0.ɵɵdirectiveInject(i1.AlertService), i0.ɵɵdirectiveInject(i1.AccountService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  ListWorkflowComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ListWorkflowComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 9,\n    vars: 5,\n    consts: [[1, \"mb-3\"], [\"routerLink\", \"add\", 1, \"btn\", \"btn-sm\", \"btn-success\", 3, \"queryParams\"], [1, \"card\"], [1, \"card-body\"], [\"class\", \"text-center\", 4, \"ngIf\"], [\"class\", \"table table-striped\", 4, \"ngIf\"], [1, \"text-center\"], [1, \"spinner-border\", \"spinner-border-lg\", \"align-center\"], [1, \"table\", \"table-striped\"], [2, \"width\", \"20%\"], [2, \"width\", \"30%\"], [2, \"width\", \"15%\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"badge\", 3, \"ngClass\"], [1, \"btn-group\"], [\"type\", \"button\", \"data-bs-toggle\", \"dropdown\", 1, \"btn\", \"btn-sm\", \"btn-primary\", \"dropdown-toggle\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [1, \"dropdown-menu\"], [1, \"dropdown-item\", 3, \"routerLink\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"], [1, \"dropdown-item\", 3, \"click\"], [1, \"dropdown-divider\"], [1, \"dropdown-item\", \"text-danger\", 3, \"click\"], [\"colspan\", \"5\", 1, \"text-center\"], [1, \"text-muted\"]],\n    template: function ListWorkflowComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Workflows\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0)(3, \"a\", 1);\n        i0.ɵɵtext(4, \"New Workflow\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 2)(6, \"div\", 3);\n        i0.ɵɵtemplate(7, ListWorkflowComponent_div_7_Template, 2, 0, \"div\", 4);\n        i0.ɵɵtemplate(8, ListWorkflowComponent_table_8_Template, 15, 2, \"table\", 5);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"queryParams\", i0.ɵɵpureFunction1(3, _c1, ctx.employeeId));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading && ctx.workflows);\n      }\n    },\n    dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i2.RouterLink, i3.DatePipe],\n    encapsulation: 2\n  });\n  return ListWorkflowComponent;\n})();","map":{"version":3,"mappings":"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","names":["first","Role","i0","ListWorkflowComponent","constructor","workflowService","alertService","accountService","route","isAdmin","accountValue","role","Admin","queryParams","subscribe","params","employeeId","loadWorkflows","ngOnInit","loadAllWorkflows","loading","getAll","pipe","next","workflows","error","getByEmployeeId","changeStatus","id","status","workflow","find","x","comments","prompt","isUpdating","success","deleteWorkflow","confirm","isDeleting","delete","filter","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\JiM\\School\\3rd Year\\2nd Semester\\SUBJECTS\\IT-INTPROG32\\Coding (INTPROG32)\\Final\\project6\\frontend\\src\\app\\workflows\\list.component.ts","D:\\JiM\\School\\3rd Year\\2nd Semester\\SUBJECTS\\IT-INTPROG32\\Coding (INTPROG32)\\Final\\project6\\frontend\\src\\app\\workflows\\list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { WorkflowService, AlertService, AccountService } from '@app/_services';\r\nimport { Role, WorkflowStatus } from '@app/_models';\r\n\r\n@Component({ templateUrl: 'list.component.html' })\r\nexport class ListWorkflowComponent implements OnInit {\r\n    workflows = null;\r\n    loading = false;\r\n    isAdmin = false;\r\n    employeeId: string | null = null;\r\n\r\n    constructor(\r\n        private workflowService: WorkflowService,\r\n        private alertService: AlertService,\r\n        private accountService: AccountService,\r\n        private route: ActivatedRoute\r\n    ) {\r\n        this.isAdmin = this.accountService.accountValue?.role === Role.Admin;\r\n        \r\n        // Get employeeId from query params\r\n        this.route.queryParams.subscribe(params => {\r\n            this.employeeId = params['employeeId'];\r\n            if (this.employeeId) {\r\n                this.loadWorkflows();\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (!this.employeeId) {\r\n            this.loadAllWorkflows();\r\n        }\r\n    }\r\n\r\n    private loadAllWorkflows() {\r\n        this.loading = true;\r\n        this.workflowService.getAll()\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: workflows => {\r\n                    this.workflows = workflows;\r\n                    this.loading = false;\r\n                },\r\n                error: error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n\r\n    private loadWorkflows() {\r\n        this.loading = true;\r\n        this.workflowService.getByEmployeeId(this.employeeId)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: workflows => {\r\n                    this.workflows = workflows;\r\n                    this.loading = false;\r\n                },\r\n                error: error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n\r\n    changeStatus(id: string, status: WorkflowStatus) {\r\n        const workflow = this.workflows.find(x => x.id === id);\r\n        if (!workflow) return;\r\n\r\n        const comments = prompt('Please enter comments for this status change:');\r\n        if (comments === null) return; // User cancelled\r\n\r\n        workflow.isUpdating = true;\r\n        this.workflowService.changeStatus(id, status, comments)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    workflow.status = status;\r\n                    workflow.isUpdating = false;\r\n                    this.alertService.success('Workflow status updated successfully');\r\n                },\r\n                error: error => {\r\n                    this.alertService.error(error);\r\n                    workflow.isUpdating = false;\r\n                }\r\n            });\r\n    }\r\n\r\n    deleteWorkflow(id: string) {\r\n        const workflow = this.workflows.find(x => x.id === id);\r\n        if (!workflow) return;\r\n\r\n        if (confirm('Are you sure you want to delete this workflow?')) {\r\n            workflow.isDeleting = true;\r\n            this.workflowService.delete(id)\r\n                .pipe(first())\r\n                .subscribe({\r\n                    next: () => {\r\n                        this.workflows = this.workflows.filter(x => x.id !== id);\r\n                        this.alertService.success('Workflow deleted successfully');\r\n                    },\r\n                    error: error => {\r\n                        this.alertService.error(error);\r\n                        workflow.isDeleting = false;\r\n                    }\r\n                });\r\n        }\r\n    }\r\n} ","<h1>Workflows</h1>\r\n\r\n<div class=\"mb-3\">\r\n    <a routerLink=\"add\" [queryParams]=\"{ employeeId: employeeId }\" class=\"btn btn-sm btn-success\">New Workflow</a>\r\n</div>\r\n\r\n<div class=\"card\">\r\n    <div class=\"card-body\">\r\n        <div *ngIf=\"loading\" class=\"text-center\">\r\n            <span class=\"spinner-border spinner-border-lg align-center\"></span>\r\n        </div>\r\n        <table *ngIf=\"!loading && workflows\" class=\"table table-striped\">\r\n            <thead>\r\n                <tr>\r\n                    <th style=\"width: 20%\">Type</th>\r\n                    <th style=\"width: 30%\">Task</th>\r\n                    <th style=\"width: 15%\">Status</th>\r\n                    <th style=\"width: 20%\">Created</th>\r\n                    <th style=\"width: 15%\"></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let workflow of workflows\">\r\n                    <td>{{workflow.type}}</td>\r\n                    <td>{{workflow.details.task}}</td>\r\n                    <td>\r\n                        <span class=\"badge\" [ngClass]=\"{\r\n                            'bg-warning': workflow.status === 'Pending',\r\n                            'bg-info': workflow.status === 'InProgress',\r\n                            'bg-success': workflow.status === 'Completed',\r\n                            'bg-danger': workflow.status === 'Rejected'\r\n                        }\">{{workflow.status}}</span>\r\n                    </td>\r\n                    <td>{{workflow.createdDate | date:'medium'}}</td>\r\n                    <td>\r\n                        <div class=\"btn-group\">\r\n                            <button type=\"button\" class=\"btn btn-sm btn-primary dropdown-toggle\" data-bs-toggle=\"dropdown\" [disabled]=\"workflow.isUpdating\">\r\n                                <span *ngIf=\"workflow.isUpdating\" class=\"spinner-border spinner-border-sm me-1\"></span>\r\n                                Actions\r\n                            </button>\r\n                            <ul class=\"dropdown-menu\">\r\n                                <li><a class=\"dropdown-item\" routerLink=\"view/{{workflow.id}}\">View Details</a></li>\r\n                                <li *ngIf=\"isAdmin\"><a class=\"dropdown-item\" (click)=\"changeStatus(workflow.id, 'InProgress')\" [class.disabled]=\"workflow.status === 'InProgress'\">Start Processing</a></li>\r\n                                <li *ngIf=\"isAdmin\"><a class=\"dropdown-item\" (click)=\"changeStatus(workflow.id, 'Completed')\" [class.disabled]=\"workflow.status === 'Completed'\">Mark Complete</a></li>\r\n                                <li *ngIf=\"isAdmin\"><a class=\"dropdown-item\" (click)=\"changeStatus(workflow.id, 'Rejected')\" [class.disabled]=\"workflow.status === 'Rejected'\">Reject</a></li>\r\n                                <li *ngIf=\"isAdmin && workflow.status === 'Pending'\"><hr class=\"dropdown-divider\"></li>\r\n                                <li *ngIf=\"isAdmin && workflow.status === 'Pending'\">\r\n                                    <a class=\"dropdown-item text-danger\" (click)=\"deleteWorkflow(workflow.id)\" [class.disabled]=\"workflow.isDeleting\">\r\n                                        <span *ngIf=\"workflow.isDeleting\" class=\"spinner-border spinner-border-sm me-1\"></span>\r\n                                        Delete\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"!loading && (!workflows || workflows.length === 0)\">\r\n                    <td colspan=\"5\" class=\"text-center\">\r\n                        <span class=\"text-muted\">No workflows found</span>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div> "]},"metadata":{},"sourceType":"module","externalDependencies":[]}