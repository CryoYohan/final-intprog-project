{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/_services\";\nimport * as i4 from \"@angular/common\";\nfunction AddEditComponent_div_7_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Account ID is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtemplate(1, AddEditComponent_div_7_div_1_Template, 2, 0, \"div\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.accountId.errors.required);\n  }\n}\nfunction AddEditComponent_div_12_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Employee ID is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtemplate(1, AddEditComponent_div_12_div_1_Template, 2, 0, \"div\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.employeeId.errors.required);\n  }\n}\nfunction AddEditComponent_div_17_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Department is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtemplate(1, AddEditComponent_div_17_div_1_Template, 2, 0, \"div\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f.department.errors.required);\n  }\n}\nfunction AddEditComponent_div_22_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Position is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtemplate(1, AddEditComponent_div_22_div_1_Template, 2, 0, \"div\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.f.position.errors.required);\n  }\n}\nfunction AddEditComponent_div_27_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Hire Date is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtemplate(1, AddEditComponent_div_27_div_1_Template, 2, 0, \"div\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.f.hireDate.errors.required);\n  }\n}\nfunction AddEditComponent_span_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 20);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport let AddEditComponent = /*#__PURE__*/(() => {\n  class AddEditComponent {\n    constructor(formBuilder, route, router, accountService, employeeService, alertService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.accountService = accountService;\n      this.employeeService = employeeService;\n      this.alertService = alertService;\n      this.loading = false;\n      this.submitted = false;\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      this.isAddMode = !this.id;\n      this.form = this.formBuilder.group({\n        accountId: ['', Validators.required],\n        employeeId: ['', Validators.required],\n        department: ['', Validators.required],\n        position: ['', Validators.required],\n        hireDate: ['', Validators.required],\n        salary: [''],\n        status: ['Active']\n      });\n      if (!this.isAddMode) {\n        this.employeeService.getById(this.id).pipe(first()).subscribe(x => this.form.patchValue(x));\n      }\n    }\n    // convenience getter for easy access to form fields\n    get f() {\n      return this.form.controls;\n    }\n    onSubmit() {\n      this.submitted = true;\n      // reset alerts on submit\n      this.alertService.clear();\n      // stop here if form is invalid\n      if (this.form.invalid) {\n        return;\n      }\n      this.loading = true;\n      if (this.isAddMode) {\n        this.createEmployee();\n      } else {\n        this.updateEmployee();\n      }\n    }\n    createEmployee() {\n      this.employeeService.create(this.form.value).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Employee added successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    updateEmployee() {\n      this.employeeService.update(this.id, this.form.value).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Update successful', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n  }\n  AddEditComponent.ɵfac = function AddEditComponent_Factory(t) {\n    return new (t || AddEditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AccountService), i0.ɵɵdirectiveInject(i3.EmployeeService), i0.ɵɵdirectiveInject(i3.AlertService));\n  };\n  AddEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddEditComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 50,\n    vars: 24,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"accountId\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"employeeId\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"text\", \"formControlName\", \"department\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"text\", \"formControlName\", \"position\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"date\", \"formControlName\", \"hireDate\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"number\", \"formControlName\", \"salary\", 1, \"form-control\"], [\"formControlName\", \"status\", 1, \"form-control\"], [\"value\", \"Active\"], [\"value\", \"Inactive\"], [\"value\", \"On Leave\"], [\"value\", \"Terminated\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [\"routerLink\", \"../\", 1, \"btn\", \"btn-link\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"]],\n    template: function AddEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function AddEditComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"label\", 2);\n        i0.ɵɵtext(5, \"Account ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 3);\n        i0.ɵɵtemplate(7, AddEditComponent_div_7_Template, 2, 1, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 1)(9, \"label\", 2);\n        i0.ɵɵtext(10, \"Employee ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 5);\n        i0.ɵɵtemplate(12, AddEditComponent_div_12_Template, 2, 1, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 1)(14, \"label\", 2);\n        i0.ɵɵtext(15, \"Department\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 6);\n        i0.ɵɵtemplate(17, AddEditComponent_div_17_Template, 2, 1, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 1)(19, \"label\", 2);\n        i0.ɵɵtext(20, \"Position\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 7);\n        i0.ɵɵtemplate(22, AddEditComponent_div_22_Template, 2, 1, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 1)(24, \"label\", 2);\n        i0.ɵɵtext(25, \"Hire Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"input\", 8);\n        i0.ɵɵtemplate(27, AddEditComponent_div_27_Template, 2, 1, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 1)(29, \"label\", 2);\n        i0.ɵɵtext(30, \"Salary\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"div\", 1)(33, \"label\", 2);\n        i0.ɵɵtext(34, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"select\", 10)(36, \"option\", 11);\n        i0.ɵɵtext(37, \"Active\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"option\", 12);\n        i0.ɵɵtext(39, \"Inactive\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"option\", 13);\n        i0.ɵɵtext(41, \"On Leave\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"option\", 14);\n        i0.ɵɵtext(43, \"Terminated\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(44, \"div\", 1)(45, \"button\", 15);\n        i0.ɵɵtemplate(46, AddEditComponent_span_46_Template, 1, 0, \"span\", 16);\n        i0.ɵɵtext(47, \" Save \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(48, \"a\", 17);\n        i0.ɵɵtext(49, \"Cancel\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"\", ctx.isAddMode ? \"Add\" : \"Edit\", \" Employee\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(14, _c0, ctx.submitted && ctx.f.accountId.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.accountId.errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(16, _c0, ctx.submitted && ctx.f.employeeId.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.employeeId.errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(18, _c0, ctx.submitted && ctx.f.department.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.department.errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(20, _c0, ctx.submitted && ctx.f.position.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.position.errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(22, _c0, ctx.submitted && ctx.f.hireDate.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.hireDate.errors);\n        i0.ɵɵadvance(18);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      }\n    },\n    dependencies: [i4.NgClass, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.RouterLink],\n    encapsulation: 2\n  });\n  return AddEditComponent;\n})();","map":{"version":3,"mappings":"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","names":["Validators","first","i0","AddEditComponent","constructor","formBuilder","route","router","accountService","employeeService","alertService","ngOnInit","id","snapshot","params","isAddMode","form","group","accountId","required","employeeId","department","position","hireDate","salary","status","getById","pipe","subscribe","x","patchValue","f","controls","onSubmit","submitted","clear","invalid","loading","createEmployee","updateEmployee","create","value","next","success","keepAfterRouteChange","navigate","relativeTo","error","update","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\JiM\\School\\3rd Year\\2nd Semester\\SUBJECTS\\IT-INTPROG32\\Coding (INTPROG32)\\Final\\project3 (cursor)\\frontend\\src\\app\\employees\\add-edit.component.ts","D:\\JiM\\School\\3rd Year\\2nd Semester\\SUBJECTS\\IT-INTPROG32\\Coding (INTPROG32)\\Final\\project3 (cursor)\\frontend\\src\\app\\employees\\add-edit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AccountService, AlertService, EmployeeService } from '@app/_services';\r\nimport { Employee } from '@app/_models';\r\n\r\n@Component({ templateUrl: 'add-edit.component.html' })\r\nexport class AddEditComponent implements OnInit {\r\n    form: FormGroup;\r\n    id: string;\r\n    isAddMode: boolean;\r\n    loading = false;\r\n    submitted = false;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n        private employeeService: EmployeeService,\r\n        private alertService: AlertService\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.id = this.route.snapshot.params['id'];\r\n        this.isAddMode = !this.id;\r\n        \r\n        this.form = this.formBuilder.group({\r\n            accountId: ['', Validators.required],\r\n            employeeId: ['', Validators.required],\r\n            department: ['', Validators.required],\r\n            position: ['', Validators.required],\r\n            hireDate: ['', Validators.required],\r\n            salary: [''],\r\n            status: ['Active']\r\n        });\r\n\r\n        if (!this.isAddMode) {\r\n            this.employeeService.getById(this.id)\r\n                .pipe(first())\r\n                .subscribe(x => this.form.patchValue(x));\r\n        }\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.form.controls; }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n\r\n        // reset alerts on submit\r\n        this.alertService.clear();\r\n\r\n        // stop here if form is invalid\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        if (this.isAddMode) {\r\n            this.createEmployee();\r\n        } else {\r\n            this.updateEmployee();\r\n        }\r\n    }\r\n\r\n    private createEmployee() {\r\n        this.employeeService.create(this.form.value)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success('Employee added successfully', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['../'], { relativeTo: this.route });\r\n                },\r\n                error: error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n\r\n    private updateEmployee() {\r\n        this.employeeService.update(this.id, this.form.value)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success('Update successful', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['../../'], { relativeTo: this.route });\r\n                },\r\n                error: error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n} ","<h1>{{isAddMode ? 'Add' : 'Edit'}} Employee</h1>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"mb-3\">\r\n        <label class=\"form-label\">Account ID</label>\r\n        <input type=\"text\" formControlName=\"accountId\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.accountId.errors }\" />\r\n        <div *ngIf=\"submitted && f.accountId.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.accountId.errors.required\">Account ID is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"mb-3\">\r\n        <label class=\"form-label\">Employee ID</label>\r\n        <input type=\"text\" formControlName=\"employeeId\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.employeeId.errors }\" />\r\n        <div *ngIf=\"submitted && f.employeeId.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.employeeId.errors.required\">Employee ID is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"mb-3\">\r\n        <label class=\"form-label\">Department</label>\r\n        <input type=\"text\" formControlName=\"department\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.department.errors }\" />\r\n        <div *ngIf=\"submitted && f.department.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.department.errors.required\">Department is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"mb-3\">\r\n        <label class=\"form-label\">Position</label>\r\n        <input type=\"text\" formControlName=\"position\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.position.errors }\" />\r\n        <div *ngIf=\"submitted && f.position.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.position.errors.required\">Position is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"mb-3\">\r\n        <label class=\"form-label\">Hire Date</label>\r\n        <input type=\"date\" formControlName=\"hireDate\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.hireDate.errors }\" />\r\n        <div *ngIf=\"submitted && f.hireDate.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.hireDate.errors.required\">Hire Date is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"mb-3\">\r\n        <label class=\"form-label\">Salary</label>\r\n        <input type=\"number\" formControlName=\"salary\" class=\"form-control\" />\r\n    </div>\r\n    <div class=\"mb-3\">\r\n        <label class=\"form-label\">Status</label>\r\n        <select formControlName=\"status\" class=\"form-control\">\r\n            <option value=\"Active\">Active</option>\r\n            <option value=\"Inactive\">Inactive</option>\r\n            <option value=\"On Leave\">On Leave</option>\r\n            <option value=\"Terminated\">Terminated</option>\r\n        </select>\r\n    </div>\r\n    <div class=\"mb-3\">\r\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm me-1\"></span>\r\n            Save\r\n        </button>\r\n        <a routerLink=\"../\" class=\"btn btn-link\">Cancel</a>\r\n    </div>\r\n</form> "]},"metadata":{},"sourceType":"module","externalDependencies":[]}