{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { Role } from '@app/_models';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/_services\";\nimport * as i4 from \"@angular/common\";\nfunction AddEditComponent_div_6_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 50);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const account_r17 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", account_r17.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" \", account_r17.id, \" - \", account_r17.firstName, \" \", account_r17.lastName, \" \");\n  }\n}\nfunction AddEditComponent_div_6_div_7_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Account is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_6_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 51);\n    i0.ɵɵtemplate(1, AddEditComponent_div_6_div_7_div_1_Template, 2, 0, \"div\", 52);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r16.f.accountId.errors.required);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nfunction AddEditComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"label\", 7);\n    i0.ɵɵtext(2, \"Account\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"select\", 49)(4, \"option\", 13);\n    i0.ɵɵtext(5, \"Select Account...\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, AddEditComponent_div_6_option_6_Template, 2, 4, \"option\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, AddEditComponent_div_6_div_7_Template, 2, 1, \"div\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c0, ctx_r0.submitted && ctx_r0.f.accountId.errors));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.availableAccounts);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.submitted && ctx_r0.f.accountId.errors);\n  }\n}\nfunction AddEditComponent_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 53);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"titlecase\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, ctx_r1.selectedAccountName));\n  }\n}\nfunction AddEditComponent_div_13_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Employee ID is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 51);\n    i0.ɵɵtemplate(1, AddEditComponent_div_13_div_1_Template, 2, 0, \"div\", 52);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f.employeeId.errors.required);\n  }\n}\nfunction AddEditComponent_option_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 50);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dept_r20 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", dept_r20.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", dept_r20.name, \" \");\n  }\n}\nfunction AddEditComponent_div_22_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Department is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 51);\n    i0.ɵɵtemplate(1, AddEditComponent_div_22_div_1_Template, 2, 0, \"div\", 52);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.f.departmentId.errors.required);\n  }\n}\nfunction AddEditComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 54);\n    i0.ɵɵelement(1, \"i\", 44);\n    i0.ɵɵtext(2, \" Use the \\\"Change Department\\\" button to transfer employee to another department \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_28_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Position is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 51);\n    i0.ɵɵtemplate(1, AddEditComponent_div_28_div_1_Template, 2, 0, \"div\", 52);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.f.position.errors.required);\n  }\n}\nfunction AddEditComponent_div_34_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Hire Date is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 51);\n    i0.ɵɵtemplate(1, AddEditComponent_div_34_div_1_Template, 2, 0, \"div\", 52);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.f.hireDate.errors.required);\n  }\n}\nfunction AddEditComponent_span_57_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 55);\n  }\n}\nfunction AddEditComponent_button_59_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 56);\n    i0.ɵɵlistener(\"click\", function AddEditComponent_button_59_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r25);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.openChangeDepartment());\n    });\n    i0.ɵɵtext(1, \" Change Department \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_62_span_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 55);\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    \"show\": a0\n  };\n};\nfunction AddEditComponent_div_62_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 57)(1, \"div\", 33)(2, \"div\", 34)(3, \"div\", 58)(4, \"h5\", 36);\n    i0.ɵɵtext(5, \"Confirm Delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 37);\n    i0.ɵɵlistener(\"click\", function AddEditComponent_div_62_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r27.cancelDelete());\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 38)(8, \"div\", 59);\n    i0.ɵɵelement(9, \"i\", 60);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"p\", 61);\n    i0.ɵɵtext(11, \"Are you sure you want to delete this employee?\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"p\", 62);\n    i0.ɵɵtext(13, \"This action cannot be undone.\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 45)(15, \"button\", 46);\n    i0.ɵɵlistener(\"click\", function AddEditComponent_div_62_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r29 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r29.cancelDelete());\n    });\n    i0.ɵɵtext(16, \"Cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"button\", 63);\n    i0.ɵɵlistener(\"click\", function AddEditComponent_div_62_Template_button_click_17_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r30 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r30.confirmDelete());\n    });\n    i0.ɵɵtemplate(18, AddEditComponent_div_62_span_18_Template, 1, 0, \"span\", 28);\n    i0.ɵɵtext(19, \" Delete Employee \");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c1, ctx_r10.showDeleteModal));\n    i0.ɵɵadvance(18);\n    i0.ɵɵproperty(\"ngIf\", ctx_r10.loading);\n  }\n}\nfunction AddEditComponent_option_87_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 50);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dept_r31 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", dept_r31.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", dept_r31.name, \" \");\n  }\n}\nfunction AddEditComponent_div_88_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 64);\n    i0.ɵɵtext(1, \" Please select a department \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_span_96_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 55);\n  }\n}\nfunction AddEditComponent_div_98_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 65);\n  }\n}\nexport let AddEditComponent = /*#__PURE__*/(() => {\n  class AddEditComponent {\n    constructor(formBuilder, route, router, accountService, employeeService, departmentService, alertService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.accountService = accountService;\n      this.employeeService = employeeService;\n      this.departmentService = departmentService;\n      this.alertService = alertService;\n      this.loading = false;\n      this.submitted = false;\n      this.accounts = [];\n      this.availableAccounts = [];\n      this.departments = [];\n      this.selectedAccountName = '';\n      this.existingEmployeeIds = [];\n      this.showDeleteModal = false;\n      this.showDepartmentModal = false;\n      this.employeeToDelete = null;\n      this.newDepartmentId = '';\n      this.currentEmployee = null;\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      this.isAddMode = !this.id;\n      // Load all departments\n      this.departmentService.getAll().pipe(first()).subscribe(departments => {\n        this.departments = departments;\n      });\n      // Load all accounts for dropdown\n      this.accountService.getAll().pipe(first()).subscribe(accounts => {\n        this.accounts = accounts;\n        this.updateAvailableAccounts();\n      });\n      // Load existing employee IDs\n      this.employeeService.getAll().pipe(first()).subscribe(employees => {\n        this.existingEmployeeIds = employees.map(e => e.employeeId);\n      });\n      // Initialize form with appropriate disabled states\n      this.form = this.formBuilder.group({\n        accountId: [{\n          value: '',\n          disabled: !this.isAddMode\n        }, this.isAddMode ? Validators.required : []],\n        employeeId: [{\n          value: '',\n          disabled: true\n        }],\n        departmentId: [{\n          value: '',\n          disabled: !this.isAddMode\n        }, Validators.required],\n        position: ['', Validators.required],\n        hireDate: ['', Validators.required],\n        salary: [''],\n        status: ['Active']\n      });\n      if (!this.isAddMode) {\n        this.employeeService.getById(this.id).pipe(first()).subscribe({\n          next: employee => {\n            // Convert the employee to EmployeeForm type\n            this.currentEmployee = Object.assign(Object.assign({}, employee), {\n              hireDate: employee.hireDate ? new Date(employee.hireDate).toISOString().split('T')[0] : ''\n            });\n            // Use patchValue with the raw form values\n            this.form.patchValue(this.currentEmployee);\n            if (employee.account) {\n              this.selectedAccountName = `${employee.account.firstName} ${employee.account.lastName}`;\n            }\n          },\n          error: error => {\n            this.alertService.error(error);\n          }\n        });\n      } else {\n        // Generate unique employee ID for new employees\n        this.generateUniqueEmployeeId();\n      }\n      // Watch for account changes to update the name display\n      this.form.get('accountId').valueChanges.subscribe(accountId => {\n        const account = this.accounts.find(a => a.id === accountId);\n        if (account) {\n          this.selectedAccountName = `${account.firstName} ${account.lastName}`;\n        } else {\n          this.selectedAccountName = '';\n        }\n      });\n    }\n    // Load existing employee IDs to ensure uniqueness\n    loadExistingEmployeeIds() {\n      this.employeeService.getAll().pipe(first()).subscribe(employees => {\n        this.existingEmployeeIds = employees.map(e => e.employeeId);\n        if (this.isAddMode) {\n          this.generateUniqueEmployeeId();\n        }\n      });\n    }\n    // Load all accounts and filter available ones\n    loadAccounts() {\n      // First, get all employees to know which accounts are already assigned\n      this.employeeService.getAll().pipe(first()).subscribe(employees => {\n        const usedAccountIds = employees.map(e => e.accountId.toString());\n        // Then load all accounts and filter them\n        this.accountService.getAll().pipe(first()).subscribe(accounts => {\n          var _a, _b;\n          this.accounts = accounts;\n          // Filter accounts:\n          // 1. Remove admin accounts\n          // 2. Remove accounts that are already assigned to employees (except in edit mode for current account)\n          this.availableAccounts = accounts.filter(account => {\n            var _a, _b;\n            const isAdmin = account.role === Role.Admin;\n            const isAlreadyAssigned = usedAccountIds.includes(account.id);\n            const isCurrentAccount = !this.isAddMode && account.id === ((_b = (_a = this.form) === null || _a === void 0 ? void 0 : _a.get('accountId')) === null || _b === void 0 ? void 0 : _b.value);\n            return !isAdmin && (!isAlreadyAssigned || isCurrentAccount);\n          });\n          // If in edit mode, ensure the current account is in the list\n          if (!this.isAddMode && ((_b = (_a = this.form) === null || _a === void 0 ? void 0 : _a.get('accountId')) === null || _b === void 0 ? void 0 : _b.value)) {\n            const currentAccount = this.accounts.find(a => a.id === this.form.get('accountId').value);\n            if (currentAccount && !this.availableAccounts.some(a => a.id === currentAccount.id)) {\n              this.availableAccounts.push(currentAccount);\n            }\n          }\n          // Sort accounts by name for better UX\n          this.availableAccounts.sort((a, b) => `${a.firstName} ${a.lastName}`.localeCompare(`${b.firstName} ${b.lastName}`));\n        });\n      });\n    }\n    // Load all departments\n    loadDepartments() {\n      this.departmentService.getAll().pipe(first()).subscribe(departments => {\n        this.departments = departments;\n      });\n    }\n    // Generate a unique employee ID\n    generateUniqueEmployeeId() {\n      let newId;\n      do {\n        const prefix = 'EMP';\n        const randomNum = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\n        const year = new Date().getFullYear().toString().substr(-2);\n        newId = `${prefix}${year}${randomNum}`;\n      } while (this.existingEmployeeIds.includes(newId));\n      this.form.get('employeeId').patchValue(newId);\n    }\n    // convenience getter for easy access to form fields\n    get f() {\n      return this.form.controls;\n    }\n    onSubmit() {\n      this.submitted = true;\n      this.alertService.clear();\n      if (this.form.invalid) {\n        return;\n      }\n      this.loading = true;\n      if (this.isAddMode) {\n        this.createEmployee();\n      } else {\n        this.updateEmployee();\n      }\n    }\n    createEmployee() {\n      const formData = Object.assign({}, this.form.getRawValue() // Get values from disabled fields too\n      );\n\n      this.employeeService.create(formData).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Employee added successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['/employees']);\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    updateEmployee() {\n      const formData = Object.assign({}, this.form.getRawValue() // Get values from disabled fields too\n      );\n\n      this.employeeService.update(this.id, formData).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Employee updated successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['/employees']);\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    // Delete modal methods\n    openDeleteModal(id) {\n      this.employeeToDelete = id;\n      this.showDeleteModal = true;\n    }\n    cancelDelete() {\n      this.showDeleteModal = false;\n      this.employeeToDelete = null;\n    }\n    confirmDelete() {\n      if (!this.employeeToDelete) return;\n      this.loading = true;\n      this.employeeService.delete(this.employeeToDelete).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Employee deleted successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['/employees']);\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    // Change Department modal methods\n    openChangeDepartment() {\n      this.submitted = false;\n      this.newDepartmentId = '';\n      this.showDepartmentModal = true;\n    }\n    cancelChangeDepartment() {\n      this.showDepartmentModal = false;\n      this.newDepartmentId = '';\n      this.submitted = false;\n    }\n    confirmChangeDepartment() {\n      this.submitted = true;\n      if (!this.newDepartmentId) {\n        return;\n      }\n      this.loading = true;\n      // Convert the current employee to the correct type\n      const updateData = Object.assign(Object.assign({}, this.currentEmployee), {\n        departmentId: this.newDepartmentId,\n        hireDate: this.currentEmployee.hireDate ? new Date(this.currentEmployee.hireDate) : null\n      });\n      this.employeeService.update(this.id, updateData).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Department changed successfully', {\n            keepAfterRouteChange: true\n          });\n          this.loading = false;\n          this.showDepartmentModal = false;\n          // Refresh the current employee data\n          this.employeeService.getById(this.id).pipe(first()).subscribe(employee => {\n            // Convert the employee to EmployeeForm type\n            this.currentEmployee = Object.assign(Object.assign({}, employee), {\n              hireDate: employee.hireDate ? new Date(employee.hireDate).toISOString().split('T')[0] : ''\n            });\n            this.form.patchValue(this.currentEmployee);\n          });\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    // Computed property to get available departments (excluding current department)\n    get availableDepartments() {\n      if (!this.currentEmployee) return this.departments;\n      return this.departments.filter(dept => {\n        var _a, _b;\n        return dept.id.toString() !== ((_b = (_a = this.currentEmployee) === null || _a === void 0 ? void 0 : _a.departmentId) === null || _b === void 0 ? void 0 : _b.toString());\n      });\n    }\n    updateAvailableAccounts() {\n      this.loadAccounts();\n    }\n  }\n  AddEditComponent.ɵfac = function AddEditComponent_Factory(t) {\n    return new (t || AddEditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AccountService), i0.ɵɵdirectiveInject(i3.EmployeeService), i0.ɵɵdirectiveInject(i3.DepartmentService), i0.ɵɵdirectiveInject(i3.AlertService));\n  };\n  AddEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddEditComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 99,\n    vars: 47,\n    consts: [[1, \"mb-4\"], [1, \"card\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [\"class\", \"col-md-6 mb-3\", 4, \"ngIf\"], [1, \"col-md-6\", \"mb-3\"], [1, \"form-label\"], [1, \"input-group\"], [\"type\", \"text\", \"formControlName\", \"employeeId\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"input-group-text bg-light\", 4, \"ngIf\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"formControlName\", \"departmentId\", 1, \"form-select\", 3, \"ngClass\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"text-muted small mt-1\", 4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"position\", \"placeholder\", \"Enter position\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"date\", \"formControlName\", \"hireDate\", 1, \"form-control\", 3, \"ngClass\"], [1, \"input-group-text\"], [\"type\", \"number\", \"formControlName\", \"salary\", \"placeholder\", \"Enter salary\", 1, \"form-control\"], [\"formControlName\", \"status\", 1, \"form-select\"], [\"value\", \"Active\"], [\"value\", \"Inactive\"], [\"value\", \"On Leave\"], [\"value\", \"Terminated\"], [1, \"border-top\", \"pt-3\"], [1, \"btn-group\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"btn btn-info text-white\", 3, \"click\", 4, \"ngIf\"], [\"routerLink\", \"/employees\", 1, \"btn\", \"btn-secondary\", \"ms-2\"], [\"class\", \"modal fade\", \"id\", \"deleteModal\", \"tabindex\", \"-1\", 3, \"ngClass\", 4, \"ngIf\"], [\"tabindex\", \"-1\", \"role\", \"dialog\", 1, \"modal\"], [1, \"modal-dialog\", \"modal-dialog-centered\"], [1, \"modal-content\"], [1, \"modal-header\", \"bg-info\", \"text-white\"], [1, \"modal-title\"], [\"type\", \"button\", 1, \"btn-close\", \"btn-close-white\", 3, \"click\"], [1, \"modal-body\"], [1, \"text-muted\", \"mb-2\"], [1, \"h5\", \"mb-3\"], [1, \"form-select\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"class\", \"invalid-feedback d-block\", 4, \"ngIf\"], [1, \"text-muted\", \"small\", \"mt-2\"], [1, \"fas\", \"fa-info-circle\", \"me-1\"], [1, \"modal-footer\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-info\", \"text-white\", 3, \"disabled\", \"click\"], [\"class\", \"modal-backdrop show\", 4, \"ngIf\"], [\"formControlName\", \"accountId\", 1, \"form-select\", 3, \"ngClass\"], [3, \"value\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"input-group-text\", \"bg-light\"], [1, \"text-muted\", \"small\", \"mt-1\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"], [\"type\", \"button\", 1, \"btn\", \"btn-info\", \"text-white\", 3, \"click\"], [\"id\", \"deleteModal\", \"tabindex\", \"-1\", 1, \"modal\", \"fade\", 3, \"ngClass\"], [1, \"modal-header\", \"bg-danger\", \"text-white\"], [1, \"text-center\", \"mb-3\"], [1, \"fas\", \"fa-exclamation-triangle\", \"text-danger\", 2, \"font-size\", \"3rem\"], [1, \"text-center\", \"mb-0\"], [1, \"text-center\", \"text-muted\", \"mb-0\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"invalid-feedback\", \"d-block\"], [1, \"modal-backdrop\", \"show\"]],\n    template: function AddEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2)(4, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function AddEditComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵtemplate(6, AddEditComponent_div_6_Template, 8, 5, \"div\", 5);\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"label\", 7);\n        i0.ɵɵtext(9, \"Employee ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 8);\n        i0.ɵɵelement(11, \"input\", 9);\n        i0.ɵɵtemplate(12, AddEditComponent_span_12_Template, 3, 3, \"span\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(13, AddEditComponent_div_13_Template, 2, 1, \"div\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 4)(15, \"div\", 6)(16, \"label\", 7);\n        i0.ɵɵtext(17, \"Department\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"select\", 12)(19, \"option\", 13);\n        i0.ɵɵtext(20, \"Select Department...\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(21, AddEditComponent_option_21_Template, 2, 2, \"option\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(22, AddEditComponent_div_22_Template, 2, 1, \"div\", 11);\n        i0.ɵɵtemplate(23, AddEditComponent_div_23_Template, 3, 0, \"div\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 6)(25, \"label\", 7);\n        i0.ɵɵtext(26, \"Position\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"input\", 16);\n        i0.ɵɵtemplate(28, AddEditComponent_div_28_Template, 2, 1, \"div\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(29, \"div\", 4)(30, \"div\", 6)(31, \"label\", 7);\n        i0.ɵɵtext(32, \"Hire Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"input\", 17);\n        i0.ɵɵtemplate(34, AddEditComponent_div_34_Template, 2, 1, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\", 6)(36, \"label\", 7);\n        i0.ɵɵtext(37, \"Salary\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"div\", 8)(39, \"span\", 18);\n        i0.ɵɵtext(40, \"\\u20B1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(41, \"input\", 19);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(42, \"div\", 0)(43, \"label\", 7);\n        i0.ɵɵtext(44, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"select\", 20)(46, \"option\", 21);\n        i0.ɵɵtext(47, \"Active\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(48, \"option\", 22);\n        i0.ɵɵtext(49, \"Inactive\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(50, \"option\", 23);\n        i0.ɵɵtext(51, \"On Leave\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"option\", 24);\n        i0.ɵɵtext(53, \"Terminated\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(54, \"div\", 25)(55, \"div\", 26)(56, \"button\", 27);\n        i0.ɵɵtemplate(57, AddEditComponent_span_57_Template, 1, 0, \"span\", 28);\n        i0.ɵɵtext(58, \" Save Employee \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(59, AddEditComponent_button_59_Template, 2, 0, \"button\", 29);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(60, \"a\", 30);\n        i0.ɵɵtext(61, \"Cancel\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵtemplate(62, AddEditComponent_div_62_Template, 20, 4, \"div\", 31);\n        i0.ɵɵelementStart(63, \"div\", 32)(64, \"div\", 33)(65, \"div\", 34)(66, \"div\", 35)(67, \"h5\", 36);\n        i0.ɵɵtext(68, \"Change Department\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(69, \"button\", 37);\n        i0.ɵɵlistener(\"click\", function AddEditComponent_Template_button_click_69_listener() {\n          return ctx.cancelChangeDepartment();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(70, \"div\", 38)(71, \"div\", 0)(72, \"h6\", 39);\n        i0.ɵɵtext(73, \"Employee\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(74, \"p\", 40);\n        i0.ɵɵtext(75);\n        i0.ɵɵpipe(76, \"titlecase\");\n        i0.ɵɵpipe(77, \"titlecase\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(78, \"h6\", 39);\n        i0.ɵɵtext(79, \"Current Department\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(80, \"p\", 40);\n        i0.ɵɵtext(81);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(82, \"h6\", 39);\n        i0.ɵɵtext(83, \"New Department\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(84, \"select\", 41);\n        i0.ɵɵlistener(\"ngModelChange\", function AddEditComponent_Template_select_ngModelChange_84_listener($event) {\n          return ctx.newDepartmentId = $event;\n        });\n        i0.ɵɵelementStart(85, \"option\", 13);\n        i0.ɵɵtext(86, \"Select Department...\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(87, AddEditComponent_option_87_Template, 2, 2, \"option\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(88, AddEditComponent_div_88_Template, 2, 0, \"div\", 42);\n        i0.ɵɵelementStart(89, \"div\", 43);\n        i0.ɵɵelement(90, \"i\", 44);\n        i0.ɵɵtext(91, \" Current department is excluded from selection \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(92, \"div\", 45)(93, \"button\", 46);\n        i0.ɵɵlistener(\"click\", function AddEditComponent_Template_button_click_93_listener() {\n          return ctx.cancelChangeDepartment();\n        });\n        i0.ɵɵtext(94, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(95, \"button\", 47);\n        i0.ɵɵlistener(\"click\", function AddEditComponent_Template_button_click_95_listener() {\n          return ctx.confirmChangeDepartment();\n        });\n        i0.ɵɵtemplate(96, AddEditComponent_span_96_Template, 1, 0, \"span\", 28);\n        i0.ɵɵtext(97, \" Save Changes \");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵtemplate(98, AddEditComponent_div_98_Template, 1, 0, \"div\", 48);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"\", ctx.isAddMode ? \"Add New\" : \"Edit\", \" Employee\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isAddMode);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(37, _c0, ctx.submitted && ctx.f.employeeId.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedAccountName);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.employeeId.errors);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(39, _c0, ctx.submitted && ctx.f.departmentId.errors));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.departments);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.departmentId.errors);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isAddMode);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(41, _c0, ctx.submitted && ctx.f.position.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.position.errors);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(43, _c0, ctx.submitted && ctx.f.hireDate.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.hireDate.errors);\n        i0.ɵɵadvance(22);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isAddMode);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.showDeleteModal);\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"show\", ctx.showDepartmentModal)(\"d-block\", ctx.showDepartmentModal);\n        i0.ɵɵadvance(12);\n        i0.ɵɵtextInterpolate3(\"\", ctx.currentEmployee == null ? null : ctx.currentEmployee.employeeId, \" - \", i0.ɵɵpipeBind1(76, 33, ctx.currentEmployee == null ? null : ctx.currentEmployee.account == null ? null : ctx.currentEmployee.account.firstName), \" \", i0.ɵɵpipeBind1(77, 35, ctx.currentEmployee == null ? null : ctx.currentEmployee.account == null ? null : ctx.currentEmployee.account.lastName), \"\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.currentEmployee == null ? null : ctx.currentEmployee.departmentName);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.newDepartmentId)(\"ngClass\", i0.ɵɵpureFunction1(45, _c0, ctx.submitted && !ctx.newDepartmentId));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.availableDepartments);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && !ctx.newDepartmentId);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.showDeleteModal || ctx.showDepartmentModal);\n      }\n    },\n    dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.NgModel, i2.RouterLink, i4.TitleCasePipe],\n    encapsulation: 2\n  });\n  return AddEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}