{"ast":null,"code":"import { first } from 'rxjs/operators';\nimport { Role, WorkflowStatus } from '@app/_models';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/_services\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"./confirm-modal.component\";\nconst _c0 = [\"confirmModal\"];\nfunction ListWorkflowComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"All Workflows\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction ListWorkflowComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Workflows for Employee #\", ctx_r1.employeeId, \"\");\n  }\n}\nfunction ListWorkflowComponent_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"All Workflows\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction ListWorkflowComponent_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"Employee Workflows\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction ListWorkflowComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"a\", 10);\n    i0.ɵɵtext(2, \"View All Workflows\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ListWorkflowComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵelement(1, \"span\", 12);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ListWorkflowComponent_table_12_tr_15_span_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 25);\n  }\n}\nfunction ListWorkflowComponent_table_12_tr_15_li_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"a\", 26);\n    i0.ɵɵlistener(\"click\", function ListWorkflowComponent_table_12_tr_15_li_22_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const workflow_r10 = i0.ɵɵnextContext().$implicit;\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.openStatusChangeModal(workflow_r10.id, ctx_r14.WorkflowStatus.ForReviewing));\n    });\n    i0.ɵɵtext(2, \"Mark For Review\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const workflow_r10 = i0.ɵɵnextContext().$implicit;\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"disabled\", workflow_r10.status === ctx_r12.WorkflowStatus.ForReviewing);\n  }\n}\nfunction ListWorkflowComponent_table_12_tr_15_li_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"a\", 26);\n    i0.ɵɵlistener(\"click\", function ListWorkflowComponent_table_12_tr_15_li_23_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const workflow_r10 = i0.ɵɵnextContext().$implicit;\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.openStatusChangeModal(workflow_r10.id, ctx_r18.WorkflowStatus.Completed));\n    });\n    i0.ɵɵtext(2, \"Mark Complete\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const workflow_r10 = i0.ɵɵnextContext().$implicit;\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"disabled\", workflow_r10.status === ctx_r13.WorkflowStatus.Completed);\n  }\n}\nconst _c1 = function (a0, a1) {\n  return {\n    \"bg-info\": a0,\n    \"bg-success\": a1\n  };\n};\nfunction ListWorkflowComponent_table_12_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"span\", 19);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵpipe(12, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\")(14, \"div\", 20)(15, \"button\", 21);\n    i0.ɵɵtemplate(16, ListWorkflowComponent_table_12_tr_15_span_16_Template, 1, 0, \"span\", 22);\n    i0.ɵɵtext(17, \" Actions \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"ul\", 23)(19, \"li\")(20, \"a\", 24);\n    i0.ɵɵtext(21, \"View Details\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(22, ListWorkflowComponent_table_12_tr_15_li_22_Template, 3, 2, \"li\", 0);\n    i0.ɵɵtemplate(23, ListWorkflowComponent_table_12_tr_15_li_23_Template, 3, 2, \"li\", 0);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const workflow_r10 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(workflow_r10.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(workflow_r10.type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(workflow_r10.details);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(14, _c1, workflow_r10.status === ctx_r8.WorkflowStatus.ForReviewing, workflow_r10.status === ctx_r8.WorkflowStatus.Completed));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(workflow_r10.status);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(12, 11, workflow_r10.datetimecreated, \"medium\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", workflow_r10.isUpdating);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", workflow_r10.isUpdating);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"view/\", workflow_r10.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.isAdmin);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.isAdmin);\n  }\n}\nfunction ListWorkflowComponent_table_12_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 27)(2, \"span\", 28);\n    i0.ɵɵtext(3, \"No workflows found\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction ListWorkflowComponent_table_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 13)(1, \"thead\")(2, \"tr\")(3, \"th\", 14);\n    i0.ɵɵtext(4, \"ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\", 15);\n    i0.ɵɵtext(6, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\", 16);\n    i0.ɵɵtext(8, \"Details\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\", 14);\n    i0.ɵɵtext(10, \"Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\", 17);\n    i0.ɵɵtext(12, \"Date&Time Created\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"th\", 15);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"tbody\");\n    i0.ɵɵtemplate(15, ListWorkflowComponent_table_12_tr_15_Template, 24, 17, \"tr\", 18);\n    i0.ɵɵtemplate(16, ListWorkflowComponent_table_12_tr_16_Template, 4, 0, \"tr\", 0);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(15);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.workflows);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r6.loading && (!ctx_r6.workflows || ctx_r6.workflows.length === 0));\n  }\n}\nexport let ListWorkflowComponent = /*#__PURE__*/(() => {\n  class ListWorkflowComponent {\n    constructor(workflowService, alertService, accountService, route) {\n      var _a;\n      this.workflowService = workflowService;\n      this.alertService = alertService;\n      this.accountService = accountService;\n      this.route = route;\n      this.workflows = null;\n      this.loading = false;\n      this.isAdmin = false;\n      this.employeeId = null;\n      this.confirmMessage = '';\n      this.pendingStatusChange = null;\n      // Make enum available in template\n      this.WorkflowStatus = WorkflowStatus;\n      this.isAdmin = ((_a = this.accountService.accountValue) === null || _a === void 0 ? void 0 : _a.role) === Role.Admin;\n      // Get employeeId from query params\n      this.route.queryParams.subscribe(params => {\n        this.employeeId = params['employeeId'];\n        this.loadWorkflows();\n      });\n    }\n    ngOnInit() {\n      this.loadWorkflows();\n    }\n    loadWorkflows() {\n      this.loading = true;\n      if (this.employeeId) {\n        // Load workflows for specific employee\n        this.workflowService.getByEmployeeId(this.employeeId).pipe(first()).subscribe({\n          next: workflows => {\n            this.workflows = workflows;\n            this.loading = false;\n          },\n          error: error => {\n            this.alertService.error(error);\n            this.loading = false;\n          }\n        });\n      } else {\n        // Load all workflows\n        this.workflowService.getAll().pipe(first()).subscribe({\n          next: workflows => {\n            this.workflows = workflows;\n            this.loading = false;\n          },\n          error: error => {\n            this.alertService.error(error);\n            this.loading = false;\n          }\n        });\n      }\n    }\n    openStatusChangeModal(id, status) {\n      const workflow = this.workflows.find(x => x.id === id);\n      if (!workflow) return;\n      this.pendingStatusChange = {\n        id,\n        status\n      };\n      this.confirmMessage = `Are you sure you want to mark this workflow ${status === WorkflowStatus.ForReviewing ? 'for review' : 'as completed'}?`;\n      this.confirmModal.show();\n    }\n    onStatusChangeConfirmed() {\n      if (!this.pendingStatusChange) return;\n      const {\n        id,\n        status\n      } = this.pendingStatusChange;\n      const workflow = this.workflows.find(x => x.id === id);\n      if (!workflow) return;\n      workflow.isUpdating = true;\n      this.workflowService.changeStatus(id, status).pipe(first()).subscribe({\n        next: () => {\n          workflow.status = status;\n          workflow.isUpdating = false;\n          this.alertService.success('Workflow status updated successfully');\n        },\n        error: error => {\n          this.alertService.error(error);\n          workflow.isUpdating = false;\n        }\n      });\n      this.pendingStatusChange = null;\n    }\n    deleteWorkflow(id) {\n      const workflow = this.workflows.find(x => x.id === id);\n      if (!workflow) return;\n      if (confirm('Are you sure you want to delete this workflow?')) {\n        workflow.isDeleting = true;\n        this.workflowService.delete(id).pipe(first()).subscribe({\n          next: () => {\n            this.workflows = this.workflows.filter(x => x.id !== id);\n            this.alertService.success('Workflow deleted successfully');\n          },\n          error: error => {\n            this.alertService.error(error);\n            workflow.isDeleting = false;\n          }\n        });\n      }\n    }\n  }\n  ListWorkflowComponent.ɵfac = function ListWorkflowComponent_Factory(t) {\n    return new (t || ListWorkflowComponent)(i0.ɵɵdirectiveInject(i1.WorkflowService), i0.ɵɵdirectiveInject(i1.AlertService), i0.ɵɵdirectiveInject(i1.AccountService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  ListWorkflowComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ListWorkflowComponent,\n    selectors: [[\"ng-component\"]],\n    viewQuery: function ListWorkflowComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.confirmModal = _t.first);\n      }\n    },\n    decls: 15,\n    vars: 8,\n    consts: [[4, \"ngIf\"], [1, \"card\"], [1, \"card-header\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"mb-0\"], [1, \"card-body\"], [\"class\", \"text-center\", 4, \"ngIf\"], [\"class\", \"table table-striped\", 4, \"ngIf\"], [3, \"message\", \"confirmed\"], [\"confirmModal\", \"\"], [\"routerLink\", \"/workflows\", 1, \"btn\", \"btn-secondary\"], [1, \"text-center\"], [1, \"spinner-border\", \"spinner-border-lg\", \"align-center\"], [1, \"table\", \"table-striped\"], [2, \"width\", \"10%\"], [2, \"width\", \"15%\"], [2, \"width\", \"30%\"], [2, \"width\", \"20%\"], [4, \"ngFor\", \"ngForOf\"], [1, \"badge\", 3, \"ngClass\"], [1, \"btn-group\"], [\"type\", \"button\", \"data-bs-toggle\", \"dropdown\", 1, \"btn\", \"btn-sm\", \"btn-primary\", \"dropdown-toggle\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [1, \"dropdown-menu\"], [1, \"dropdown-item\", 3, \"routerLink\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"], [1, \"dropdown-item\", 3, \"click\"], [\"colspan\", \"6\", 1, \"text-center\"], [1, \"text-muted\"]],\n    template: function ListWorkflowComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtemplate(1, ListWorkflowComponent_ng_container_1_Template, 2, 0, \"ng-container\", 0);\n        i0.ɵɵtemplate(2, ListWorkflowComponent_ng_container_2_Template, 2, 1, \"ng-container\", 0);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"div\", 3)(6, \"h2\", 4);\n        i0.ɵɵtemplate(7, ListWorkflowComponent_ng_container_7_Template, 2, 0, \"ng-container\", 0);\n        i0.ɵɵtemplate(8, ListWorkflowComponent_ng_container_8_Template, 2, 0, \"ng-container\", 0);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, ListWorkflowComponent_div_9_Template, 3, 0, \"div\", 0);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 5);\n        i0.ɵɵtemplate(11, ListWorkflowComponent_div_11_Template, 2, 0, \"div\", 6);\n        i0.ɵɵtemplate(12, ListWorkflowComponent_table_12_Template, 17, 2, \"table\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"app-confirm-modal\", 8, 9);\n        i0.ɵɵlistener(\"confirmed\", function ListWorkflowComponent_Template_app_confirm_modal_confirmed_13_listener() {\n          return ctx.onStatusChangeConfirmed();\n        });\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.employeeId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.employeeId);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", !ctx.employeeId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.employeeId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.employeeId);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading && ctx.workflows);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"message\", ctx.confirmMessage);\n      }\n    },\n    dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i2.RouterLink, i4.ConfirmModalComponent, i3.DatePipe],\n    encapsulation: 2\n  });\n  return ListWorkflowComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}