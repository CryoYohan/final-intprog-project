{"ast":null,"code":"import { environment } from '@environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let RequestService = /*#__PURE__*/(() => {\n  class RequestService {\n    constructor(http) {\n      this.http = http;\n    }\n    // Create a new request\n    create(request) {\n      return this.http.post(`${environment.apiUrl}/requests`, request);\n    }\n    // Get all requests (Admin only)\n    getAll() {\n      return this.http.get(`${environment.apiUrl}/requests`);\n    }\n    // Get request by ID\n    getById(id) {\n      return this.http.get(`${environment.apiUrl}/requests/${id}`);\n    }\n    // Get requests for an employee\n    getByEmployeeId(employeeId) {\n      return this.http.get(`${environment.apiUrl}/requests/employee/${employeeId}`);\n    }\n    // Get requests created by current employee\n    getMyRequests() {\n      return this.http.get(`${environment.apiUrl}/requests/my-requests`);\n    }\n    // Update request\n    update(id, params) {\n      return this.http.put(`${environment.apiUrl}/requests/${id}`, params);\n    }\n    // Delete request (Admin only)\n    delete(id) {\n      return this.http.delete(`${environment.apiUrl}/requests/${id}`);\n    }\n    // Update request status\n    changeStatus(id, status, comments) {\n      return this.http.put(`${environment.apiUrl}/requests/${id}/status`, {\n        status,\n        comments\n      });\n    }\n  }\n  RequestService.ɵfac = function RequestService_Factory(t) {\n    return new (t || RequestService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  RequestService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RequestService,\n    factory: RequestService.ɵfac,\n    providedIn: 'root'\n  });\n  return RequestService;\n})();","map":{"version":3,"mappings":"AAIA,SAASA,WAAW,QAAQ,2BAA2B;;;AAIvD,WAAaC,cAAc;EAArB,MAAOA,cAAc;IACvBC,YAAoBC,IAAgB;MAAhB,SAAI,GAAJA,IAAI;IAAgB;IAExC;IACAC,MAAM,CAACC,OAAY;MACf,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,GAAGN,WAAW,CAACO,MAAM,WAAW,EAAEF,OAAO,CAAC;IACpE;IAEA;IACAG,MAAM;MACF,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,GAAGT,WAAW,CAACO,MAAM,WAAW,CAAC;IAC1D;IAEA;IACAG,OAAO,CAACC,EAAU;MACd,OAAO,IAAI,CAACR,IAAI,CAACM,GAAG,CAAU,GAAGT,WAAW,CAACO,MAAM,aAAaI,EAAE,EAAE,CAAC;IACzE;IAEA;IACAC,eAAe,CAACC,UAAkB;MAC9B,OAAO,IAAI,CAACV,IAAI,CAACM,GAAG,CAAC,GAAGT,WAAW,CAACO,MAAM,sBAAsBM,UAAU,EAAE,CAAC;IACjF;IAEA;IACAC,aAAa;MACT,OAAO,IAAI,CAACX,IAAI,CAACM,GAAG,CAAY,GAAGT,WAAW,CAACO,MAAM,uBAAuB,CAAC;IACjF;IAEA;IACAQ,MAAM,CAACJ,EAAU,EAAEK,MAAW;MAC1B,OAAO,IAAI,CAACb,IAAI,CAACc,GAAG,CAAU,GAAGjB,WAAW,CAACO,MAAM,aAAaI,EAAE,EAAE,EAAEK,MAAM,CAAC;IACjF;IAEA;IACAE,MAAM,CAACP,EAAU;MACb,OAAO,IAAI,CAACR,IAAI,CAACe,MAAM,CAAC,GAAGlB,WAAW,CAACO,MAAM,aAAaI,EAAE,EAAE,CAAC;IACnE;IAEA;IACAQ,YAAY,CAACR,EAAU,EAAES,MAAc,EAAEC,QAAgB;MACrD,OAAO,IAAI,CAAClB,IAAI,CAACc,GAAG,CAAU,GAAGjB,WAAW,CAACO,MAAM,aAAaI,EAAE,SAAS,EAAE;QAAES,MAAM;QAAEC;MAAQ,CAAE,CAAC;IACtG;;;qBAzCSpB,cAAc;EAAA;;WAAdA,cAAc;IAAAqB,SAAdrB,cAAc;IAAAsB,YADD;EAAM;EAAA,OACnBtB,cAAc;AAAA","names":["environment","RequestService","constructor","http","create","request","post","apiUrl","getAll","get","getById","id","getByEmployeeId","employeeId","getMyRequests","update","params","put","delete","changeStatus","status","comments","factory","providedIn"],"sourceRoot":"","sources":["D:\\JiM\\School\\3rd Year\\2nd Semester\\SUBJECTS\\IT-INTPROG32\\Coding (INTPROG32)\\Final\\project6\\frontend\\src\\app\\_services\\request.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { environment } from '@environments/environment';\r\nimport { Request } from '@app/_models';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class RequestService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    // Create a new request\r\n    create(request: any) {\r\n        return this.http.post(`${environment.apiUrl}/requests`, request);\r\n    }\r\n\r\n    // Get all requests (Admin only)\r\n    getAll() {\r\n        return this.http.get(`${environment.apiUrl}/requests`);\r\n    }\r\n\r\n    // Get request by ID\r\n    getById(id: string): Observable<Request> {\r\n        return this.http.get<Request>(`${environment.apiUrl}/requests/${id}`);\r\n    }\r\n\r\n    // Get requests for an employee\r\n    getByEmployeeId(employeeId: string) {\r\n        return this.http.get(`${environment.apiUrl}/requests/employee/${employeeId}`);\r\n    }\r\n\r\n    // Get requests created by current employee\r\n    getMyRequests() {\r\n        return this.http.get<Request[]>(`${environment.apiUrl}/requests/my-requests`);\r\n    }\r\n\r\n    // Update request\r\n    update(id: string, params: any) {\r\n        return this.http.put<Request>(`${environment.apiUrl}/requests/${id}`, params);\r\n    }\r\n\r\n    // Delete request (Admin only)\r\n    delete(id: string) {\r\n        return this.http.delete(`${environment.apiUrl}/requests/${id}`);\r\n    }\r\n\r\n    // Update request status\r\n    changeStatus(id: string, status: string, comments: string) {\r\n        return this.http.put<Request>(`${environment.apiUrl}/requests/${id}/status`, { status, comments });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}