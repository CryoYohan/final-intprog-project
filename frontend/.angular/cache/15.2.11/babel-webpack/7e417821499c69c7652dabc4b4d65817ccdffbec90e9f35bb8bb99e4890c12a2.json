{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport let ErrorInterceptor = /*#__PURE__*/(() => {\n  class ErrorInterceptor {\n    intercept(request, next) {\n      return next.handle(request).pipe(catchError(err => {\n        // Let JWT interceptor handle auth errors\n        if ([401, 403].includes(err.status)) {\n          return throwError(() => err);\n        }\n        const error = err && err.error && err.error.message || err.statusText;\n        console.error('Error Interceptor:', error);\n        return throwError(() => error);\n      }));\n    }\n  }\n  ErrorInterceptor.ɵfac = function ErrorInterceptor_Factory(t) {\n    return new (t || ErrorInterceptor)();\n  };\n  ErrorInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ErrorInterceptor,\n    factory: ErrorInterceptor.ɵfac\n  });\n  return ErrorInterceptor;\n})();","map":{"version":3,"mappings":"AAEA,SAAqBA,UAAU,QAAQ,MAAM;AAC7C,SAASC,UAAU,QAAQ,gBAAgB;;AAG3C,WAAaC,gBAAgB;EAAvB,MAAOA,gBAAgB;IACzBC,SAAS,CAACC,OAAyB,EAAEC,IAAiB;MAClD,OAAOA,IAAI,CAACC,MAAM,CAACF,OAAO,CAAC,CAACG,IAAI,CAC5BN,UAAU,CAACO,GAAG,IAAG;QACb;QACA,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAACC,QAAQ,CAACD,GAAG,CAACE,MAAM,CAAC,EAAE;UACjC,OAAOV,UAAU,CAAC,MAAMQ,GAAG,CAAC;;QAGhC,MAAMG,KAAK,GAAIH,GAAG,IAAIA,GAAG,CAACG,KAAK,IAAIH,GAAG,CAACG,KAAK,CAACC,OAAO,IAAKJ,GAAG,CAACK,UAAU;QACvEC,OAAO,CAACH,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;QAC1C,OAAOX,UAAU,CAAC,MAAMW,KAAK,CAAC;MAClC,CAAC,CAAC,CACL;IACL;;;qBAdST,gBAAgB;EAAA;;WAAhBA,gBAAgB;IAAAa,SAAhBb,gBAAgB;EAAA;EAAA,OAAhBA,gBAAgB;AAAA","names":["throwError","catchError","ErrorInterceptor","intercept","request","next","handle","pipe","err","includes","status","error","message","statusText","console","factory"],"sourceRoot":"","sources":["D:\\JiM\\School\\3rd Year\\2nd Semester\\SUBJECTS\\IT-INTPROG32\\Coding (INTPROG32)\\Final\\project6\\frontend\\src\\app\\_helpers\\error.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(\n            catchError(err => {\n                // Let JWT interceptor handle auth errors\n                if ([401, 403].includes(err.status)) {\n                    return throwError(() => err);\n                }\n\n                const error = (err && err.error && err.error.message) || err.statusText;\n                console.error('Error Interceptor:', error);\n                return throwError(() => error);\n            })\n        );\n    }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}