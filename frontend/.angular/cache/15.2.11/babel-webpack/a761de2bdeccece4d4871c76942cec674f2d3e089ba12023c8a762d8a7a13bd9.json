{"ast":null,"code":"import { first } from 'rxjs/operators';\nimport { Role, WorkflowStatus } from '@app/_models';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/_services\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"./confirm-modal.component\";\nconst _c0 = [\"confirmModal\"];\nfunction ListWorkflowComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵelement(1, \"span\", 9);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ListWorkflowComponent_table_8_tr_15_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const workflow_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"title\", workflow_r5.details.additionalInfo);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", workflow_r5.details.additionalInfo, \" \");\n  }\n}\nfunction ListWorkflowComponent_table_8_tr_15_span_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 26);\n  }\n}\nfunction ListWorkflowComponent_table_8_tr_15_li_25_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"a\", 27);\n    i0.ɵɵlistener(\"click\", function ListWorkflowComponent_table_8_tr_15_li_25_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const workflow_r5 = i0.ɵɵnextContext().$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.openStatusChangeModal(workflow_r5.id, ctx_r11.WorkflowStatus.ForReviewing));\n    });\n    i0.ɵɵtext(2, \"Mark For Review\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const workflow_r5 = i0.ɵɵnextContext().$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"disabled\", workflow_r5.status === ctx_r8.WorkflowStatus.ForReviewing);\n  }\n}\nfunction ListWorkflowComponent_table_8_tr_15_li_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"a\", 27);\n    i0.ɵɵlistener(\"click\", function ListWorkflowComponent_table_8_tr_15_li_26_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const workflow_r5 = i0.ɵɵnextContext().$implicit;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.openStatusChangeModal(workflow_r5.id, ctx_r15.WorkflowStatus.Completed));\n    });\n    i0.ɵɵtext(2, \"Mark Complete\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const workflow_r5 = i0.ɵɵnextContext().$implicit;\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"disabled\", workflow_r5.status === ctx_r9.WorkflowStatus.Completed);\n  }\n}\nconst _c1 = function (a0, a1) {\n  return {\n    \"bg-info\": a0,\n    \"bg-success\": a1\n  };\n};\nfunction ListWorkflowComponent_table_8_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"div\", 17)(7, \"strong\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, ListWorkflowComponent_table_8_tr_15_div_9_Template, 2, 2, \"div\", 18);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"td\")(11, \"span\", 19);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵpipe(15, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"td\")(17, \"div\", 20)(18, \"button\", 21);\n    i0.ɵɵtemplate(19, ListWorkflowComponent_table_8_tr_15_span_19_Template, 1, 0, \"span\", 22);\n    i0.ɵɵtext(20, \" Actions \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"ul\", 23)(22, \"li\")(23, \"a\", 24);\n    i0.ɵɵtext(24, \"View Details\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(25, ListWorkflowComponent_table_8_tr_15_li_25_Template, 3, 2, \"li\", 16);\n    i0.ɵɵtemplate(26, ListWorkflowComponent_table_8_tr_15_li_26_Template, 3, 2, \"li\", 16);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const workflow_r5 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(workflow_r5.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(workflow_r5.type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"title\", workflow_r5.details.task);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(workflow_r5.details.task);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", workflow_r5.details.additionalInfo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(16, _c1, workflow_r5.status === ctx_r3.WorkflowStatus.ForReviewing, workflow_r5.status === ctx_r3.WorkflowStatus.Completed));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(workflow_r5.status);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(15, 13, workflow_r5.createdDate, \"medium\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", workflow_r5.isUpdating);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", workflow_r5.isUpdating);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"view/\", workflow_r5.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.isAdmin);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.isAdmin);\n  }\n}\nfunction ListWorkflowComponent_table_8_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 28)(2, \"span\", 29);\n    i0.ɵɵtext(3, \"No workflows found\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction ListWorkflowComponent_table_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 10)(1, \"thead\")(2, \"tr\")(3, \"th\", 11);\n    i0.ɵɵtext(4, \"ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\", 12);\n    i0.ɵɵtext(6, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\", 13);\n    i0.ɵɵtext(8, \"Details\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\", 11);\n    i0.ɵɵtext(10, \"Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\", 14);\n    i0.ɵɵtext(12, \"Created\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"th\", 12);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"tbody\");\n    i0.ɵɵtemplate(15, ListWorkflowComponent_table_8_tr_15_Template, 27, 19, \"tr\", 15);\n    i0.ɵɵtemplate(16, ListWorkflowComponent_table_8_tr_16_Template, 4, 0, \"tr\", 16);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(15);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.workflows);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.loading && (!ctx_r1.workflows || ctx_r1.workflows.length === 0));\n  }\n}\nconst _c2 = function (a0) {\n  return {\n    employeeId: a0\n  };\n};\nexport let ListWorkflowComponent = /*#__PURE__*/(() => {\n  class ListWorkflowComponent {\n    constructor(workflowService, alertService, accountService, route) {\n      var _a;\n      this.workflowService = workflowService;\n      this.alertService = alertService;\n      this.accountService = accountService;\n      this.route = route;\n      this.workflows = null;\n      this.loading = false;\n      this.isAdmin = false;\n      this.employeeId = null;\n      this.confirmMessage = '';\n      this.pendingStatusChange = null;\n      // Make enum available in template\n      this.WorkflowStatus = WorkflowStatus;\n      this.isAdmin = ((_a = this.accountService.accountValue) === null || _a === void 0 ? void 0 : _a.role) === Role.Admin;\n      // Get employeeId from query params\n      this.route.queryParams.subscribe(params => {\n        this.employeeId = params['employeeId'];\n        if (this.employeeId) {\n          this.loadWorkflows();\n        }\n      });\n    }\n    ngOnInit() {\n      if (!this.employeeId) {\n        this.loadAllWorkflows();\n      }\n    }\n    loadAllWorkflows() {\n      this.loading = true;\n      this.workflowService.getAll().pipe(first()).subscribe({\n        next: workflows => {\n          this.workflows = workflows;\n          this.loading = false;\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    loadWorkflows() {\n      this.loading = true;\n      this.workflowService.getByEmployeeId(this.employeeId).pipe(first()).subscribe({\n        next: workflows => {\n          this.workflows = workflows;\n          this.loading = false;\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    openStatusChangeModal(id, status) {\n      const workflow = this.workflows.find(x => x.id === id);\n      if (!workflow) return;\n      this.pendingStatusChange = {\n        id,\n        status\n      };\n      this.confirmMessage = `Are you sure you want to mark this workflow ${status === WorkflowStatus.ForReviewing ? 'for review' : 'as completed'}?`;\n      this.confirmModal.show();\n    }\n    onStatusChangeConfirmed() {\n      if (!this.pendingStatusChange) return;\n      const {\n        id,\n        status\n      } = this.pendingStatusChange;\n      const workflow = this.workflows.find(x => x.id === id);\n      if (!workflow) return;\n      workflow.isUpdating = true;\n      this.workflowService.changeStatus(id, status).pipe(first()).subscribe({\n        next: () => {\n          workflow.status = status;\n          workflow.isUpdating = false;\n          this.alertService.success('Workflow status updated successfully');\n        },\n        error: error => {\n          this.alertService.error(error);\n          workflow.isUpdating = false;\n        }\n      });\n      this.pendingStatusChange = null;\n    }\n    deleteWorkflow(id) {\n      const workflow = this.workflows.find(x => x.id === id);\n      if (!workflow) return;\n      if (confirm('Are you sure you want to delete this workflow?')) {\n        workflow.isDeleting = true;\n        this.workflowService.delete(id).pipe(first()).subscribe({\n          next: () => {\n            this.workflows = this.workflows.filter(x => x.id !== id);\n            this.alertService.success('Workflow deleted successfully');\n          },\n          error: error => {\n            this.alertService.error(error);\n            workflow.isDeleting = false;\n          }\n        });\n      }\n    }\n  }\n  ListWorkflowComponent.ɵfac = function ListWorkflowComponent_Factory(t) {\n    return new (t || ListWorkflowComponent)(i0.ɵɵdirectiveInject(i1.WorkflowService), i0.ɵɵdirectiveInject(i1.AlertService), i0.ɵɵdirectiveInject(i1.AccountService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  ListWorkflowComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ListWorkflowComponent,\n    selectors: [[\"ng-component\"]],\n    viewQuery: function ListWorkflowComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.confirmModal = _t.first);\n      }\n    },\n    decls: 11,\n    vars: 6,\n    consts: [[1, \"mb-3\"], [\"routerLink\", \"add\", 1, \"btn\", \"btn-sm\", \"btn-success\", 3, \"queryParams\"], [1, \"card\"], [1, \"card-body\"], [\"class\", \"text-center\", 4, \"ngIf\"], [\"class\", \"table table-striped\", 4, \"ngIf\"], [3, \"message\", \"confirmed\"], [\"confirmModal\", \"\"], [1, \"text-center\"], [1, \"spinner-border\", \"spinner-border-lg\", \"align-center\"], [1, \"table\", \"table-striped\"], [2, \"width\", \"10%\"], [2, \"width\", \"15%\"], [2, \"width\", \"30%\"], [2, \"width\", \"20%\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"text-truncate\", 2, \"max-width\", \"300px\", 3, \"title\"], [\"class\", \"text-muted small text-truncate\", 3, \"title\", 4, \"ngIf\"], [1, \"badge\", 3, \"ngClass\"], [1, \"btn-group\"], [\"type\", \"button\", \"data-bs-toggle\", \"dropdown\", 1, \"btn\", \"btn-sm\", \"btn-primary\", \"dropdown-toggle\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [1, \"dropdown-menu\"], [1, \"dropdown-item\", 3, \"routerLink\"], [1, \"text-muted\", \"small\", \"text-truncate\", 3, \"title\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"], [1, \"dropdown-item\", 3, \"click\"], [\"colspan\", \"6\", 1, \"text-center\"], [1, \"text-muted\"]],\n    template: function ListWorkflowComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Workflows\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0)(3, \"a\", 1);\n        i0.ɵɵtext(4, \"New Workflow\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 2)(6, \"div\", 3);\n        i0.ɵɵtemplate(7, ListWorkflowComponent_div_7_Template, 2, 0, \"div\", 4);\n        i0.ɵɵtemplate(8, ListWorkflowComponent_table_8_Template, 17, 2, \"table\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"app-confirm-modal\", 6, 7);\n        i0.ɵɵlistener(\"confirmed\", function ListWorkflowComponent_Template_app_confirm_modal_confirmed_9_listener() {\n          return ctx.onStatusChangeConfirmed();\n        });\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"queryParams\", i0.ɵɵpureFunction1(4, _c2, ctx.employeeId));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading && ctx.workflows);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"message\", ctx.confirmMessage);\n      }\n    },\n    dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i2.RouterLink, i4.ConfirmModalComponent, i3.DatePipe],\n    encapsulation: 2\n  });\n  return ListWorkflowComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}