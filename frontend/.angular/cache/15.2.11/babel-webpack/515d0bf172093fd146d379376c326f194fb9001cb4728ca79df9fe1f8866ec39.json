{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { Role } from '@app/_models';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/_services\";\nimport * as i4 from \"@angular/common\";\nfunction AddEditComponent_div_7_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Title is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtemplate(1, AddEditComponent_div_7_div_1_Template, 2, 0, \"div\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.title.errors.required);\n  }\n}\nfunction AddEditComponent_div_12_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Description is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtemplate(1, AddEditComponent_div_12_div_1_Template, 2, 0, \"div\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.description.errors.required);\n  }\n}\nfunction AddEditComponent_div_29_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Request type is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtemplate(1, AddEditComponent_div_29_div_1_Template, 2, 0, \"div\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f.requestType.errors.required);\n  }\n}\nfunction AddEditComponent_div_45_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const employee_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", employee_r9.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" \", employee_r9.account == null ? null : employee_r9.account.firstName, \" \", employee_r9.account == null ? null : employee_r9.account.lastName, \" (\", employee_r9.position, \") \");\n  }\n}\nfunction AddEditComponent_div_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"label\", 2);\n    i0.ɵɵtext(2, \"Assign To\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"select\", 26);\n    i0.ɵɵelement(4, \"option\", 9);\n    i0.ɵɵtemplate(5, AddEditComponent_div_45_option_5_Template, 2, 4, \"option\", 27);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.employees);\n  }\n}\nfunction AddEditComponent_span_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 29);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport let AddEditComponent = /*#__PURE__*/(() => {\n  class AddEditComponent {\n    constructor(formBuilder, route, router, requestService, alertService, employeeService, accountService) {\n      var _a, _b;\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.requestService = requestService;\n      this.alertService = alertService;\n      this.employeeService = employeeService;\n      this.accountService = accountService;\n      this.loading = false;\n      this.submitted = false;\n      this.employees = [];\n      this.currentEmployeeId = null;\n      this.isAdmin = false;\n      this.isModerator = false;\n      // Check if current user is admin or moderator\n      this.isAdmin = ((_a = this.accountService.accountValue) === null || _a === void 0 ? void 0 : _a.role) === Role.Admin;\n      this.isModerator = ((_b = this.accountService.accountValue) === null || _b === void 0 ? void 0 : _b.role) === Role.Moderator;\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      this.isAddMode = !this.id;\n      // Get current employee ID\n      this.employeeService.getByAccountId(this.accountService.accountValue.id).pipe(first()).subscribe(employee => {\n        this.currentEmployeeId = (employee === null || employee === void 0 ? void 0 : employee.id) ? Number(employee.id) : null;\n      });\n      // Get all employees for assignee dropdown (if admin or moderator)\n      if (this.isAdmin || this.isModerator) {\n        this.employeeService.getAll().pipe(first()).subscribe(employees => {\n          this.employees = employees;\n        });\n      }\n      // Form validation rules\n      this.form = this.formBuilder.group({\n        title: ['', Validators.required],\n        description: ['', Validators.required],\n        requestType: ['', Validators.required],\n        priority: ['Medium', Validators.required],\n        requesterId: [this.currentEmployeeId],\n        assignedTo: [''],\n        dueDate: ['']\n      });\n      if (!this.isAddMode) {\n        this.requestService.getById(this.id).pipe(first()).subscribe(x => {\n          // Prepare form data without modifying the original object\n          const formData = Object.assign({}, x);\n          // Format date for the date input\n          if (formData.dueDate) {\n            const dueDate = new Date(formData.dueDate);\n            // Use a separate variable for the form value\n            const dateString = dueDate.toISOString().split('T')[0];\n            // Use patchValue instead of directly modifying formData\n            this.form.patchValue(Object.assign(Object.assign({}, formData), {\n              dueDate: dateString\n            }));\n          } else {\n            this.form.patchValue(formData);\n          }\n        });\n      }\n    }\n    // convenience getter for easy access to form fields\n    get f() {\n      return this.form.controls;\n    }\n    onSubmit() {\n      this.submitted = true;\n      // reset alerts on submit\n      this.alertService.clear();\n      // stop here if form is invalid\n      if (this.form.invalid) {\n        return;\n      }\n      this.loading = true;\n      // Set requesterId if not already set\n      if (!this.f.requesterId.value && this.currentEmployeeId) {\n        this.form.patchValue({\n          requesterId: this.currentEmployeeId\n        });\n      }\n      // Prepare request data with correct types\n      const requestData = Object.assign(Object.assign({}, this.form.value), {\n        requesterId: this.form.value.requesterId ? Number(this.form.value.requesterId) : null,\n        assignedTo: this.form.value.assignedTo ? Number(this.form.value.assignedTo) : null\n      });\n      if (this.isAddMode) {\n        this.createRequest(requestData);\n      } else {\n        this.updateRequest(requestData);\n      }\n    }\n    createRequest(requestData) {\n      this.requestService.create(requestData).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Request added successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../my-requests'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    updateRequest(requestData) {\n      this.requestService.update(this.id, requestData).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Update successful', {\n            keepAfterRouteChange: true\n          });\n          if (this.isAdmin || this.isModerator) {\n            this.router.navigate(['../../'], {\n              relativeTo: this.route\n            });\n          } else {\n            this.router.navigate(['../../my-requests'], {\n              relativeTo: this.route\n            });\n          }\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n  }\n  AddEditComponent.ɵfac = function AddEditComponent_Factory(t) {\n    return new (t || AddEditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.RequestService), i0.ɵɵdirectiveInject(i3.AlertService), i0.ɵɵdirectiveInject(i3.EmployeeService), i0.ɵɵdirectiveInject(i3.AccountService));\n  };\n  AddEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddEditComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 52,\n    vars: 18,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"title\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"formControlName\", \"description\", \"rows\", \"4\", 1, \"form-control\", 3, \"ngClass\"], [1, \"row\"], [1, \"col-md-6\", \"mb-3\"], [\"formControlName\", \"requestType\", 1, \"form-select\", 3, \"ngClass\"], [\"value\", \"\"], [\"value\", \"Issue\"], [\"value\", \"Feature Request\"], [\"value\", \"Documentation\"], [\"value\", \"Task\"], [\"value\", \"Other\"], [\"formControlName\", \"priority\", 1, \"form-select\"], [\"value\", \"Low\"], [\"value\", \"Medium\"], [\"value\", \"High\"], [\"type\", \"date\", \"formControlName\", \"dueDate\", 1, \"form-control\"], [\"class\", \"col-md-6 mb-3\", 4, \"ngIf\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [1, \"btn\", \"btn-link\", 3, \"routerLink\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [\"formControlName\", \"assignedTo\", 1, \"form-select\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"]],\n    template: function AddEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function AddEditComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"label\", 2);\n        i0.ɵɵtext(5, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 3);\n        i0.ɵɵtemplate(7, AddEditComponent_div_7_Template, 2, 1, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 1)(9, \"label\", 2);\n        i0.ɵɵtext(10, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"textarea\", 5);\n        i0.ɵɵtemplate(12, AddEditComponent_div_12_Template, 2, 1, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 6)(14, \"div\", 7)(15, \"label\", 2);\n        i0.ɵɵtext(16, \"Request Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"select\", 8);\n        i0.ɵɵelement(18, \"option\", 9);\n        i0.ɵɵelementStart(19, \"option\", 10);\n        i0.ɵɵtext(20, \"Issue\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"option\", 11);\n        i0.ɵɵtext(22, \"Feature Request\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"option\", 12);\n        i0.ɵɵtext(24, \"Documentation\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"option\", 13);\n        i0.ɵɵtext(26, \"Task\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"option\", 14);\n        i0.ɵɵtext(28, \"Other\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(29, AddEditComponent_div_29_Template, 2, 1, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"div\", 7)(31, \"label\", 2);\n        i0.ɵɵtext(32, \"Priority\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"select\", 15)(34, \"option\", 16);\n        i0.ɵɵtext(35, \"Low\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"option\", 17);\n        i0.ɵɵtext(37, \"Medium\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"option\", 18);\n        i0.ɵɵtext(39, \"High\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(40, \"div\", 6)(41, \"div\", 7)(42, \"label\", 2);\n        i0.ɵɵtext(43, \"Due Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(44, \"input\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(45, AddEditComponent_div_45_Template, 6, 1, \"div\", 20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"div\", 1)(47, \"button\", 21);\n        i0.ɵɵtemplate(48, AddEditComponent_span_48_Template, 1, 0, \"span\", 22);\n        i0.ɵɵtext(49, \" Save \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(50, \"a\", 23);\n        i0.ɵɵtext(51, \"Cancel\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"\", ctx.isAddMode ? \"Create\" : \"Edit\", \" Request\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c0, ctx.submitted && ctx.f.title.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.title.errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(14, _c0, ctx.submitted && ctx.f.description.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.description.errors);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(16, _c0, ctx.submitted && ctx.f.requestType.errors));\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.requestType.errors);\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"ngIf\", ctx.isAdmin || ctx.isModerator);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"routerLink\", ctx.isAdmin || ctx.isModerator ? \"../\" : \"../my-requests\");\n      }\n    },\n    dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.RouterLink],\n    encapsulation: 2\n  });\n  return AddEditComponent;\n})();","map":{"version":3,"mappings":"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","names":["Validators","first","Role","i0","AddEditComponent","constructor","formBuilder","route","router","requestService","alertService","employeeService","accountService","isAdmin","accountValue","role","Admin","isModerator","Moderator","ngOnInit","id","snapshot","params","isAddMode","getByAccountId","pipe","subscribe","employee","currentEmployeeId","Number","getAll","employees","form","group","title","required","description","requestType","priority","requesterId","assignedTo","dueDate","getById","x","formData","Date","dateString","toISOString","split","patchValue","f","controls","onSubmit","submitted","clear","invalid","loading","value","requestData","createRequest","updateRequest","create","next","success","keepAfterRouteChange","navigate","relativeTo","error","update","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\JiM\\School\\3rd Year\\2nd Semester\\SUBJECTS\\IT-INTPROG32\\Coding (INTPROG32)\\Final\\project3 (cursor)\\frontend\\src\\app\\requests\\add-edit.component.ts","D:\\JiM\\School\\3rd Year\\2nd Semester\\SUBJECTS\\IT-INTPROG32\\Coding (INTPROG32)\\Final\\project3 (cursor)\\frontend\\src\\app\\requests\\add-edit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { RequestService, AlertService, EmployeeService, AccountService } from '@app/_services';\r\nimport { Role } from '@app/_models';\r\n\r\n@Component({ templateUrl: 'add-edit.component.html' })\r\nexport class AddEditComponent implements OnInit {\r\n    form: FormGroup;\r\n    id: string;\r\n    isAddMode: boolean;\r\n    loading = false;\r\n    submitted = false;\r\n    employees = [];\r\n    currentEmployeeId: number = null;\r\n    isAdmin = false;\r\n    isModerator = false;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private requestService: RequestService,\r\n        private alertService: AlertService,\r\n        private employeeService: EmployeeService,\r\n        private accountService: AccountService\r\n    ) {\r\n        // Check if current user is admin or moderator\r\n        this.isAdmin = this.accountService.accountValue?.role === Role.Admin;\r\n        this.isModerator = this.accountService.accountValue?.role === Role.Moderator;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.id = this.route.snapshot.params['id'];\r\n        this.isAddMode = !this.id;\r\n        \r\n        // Get current employee ID\r\n        this.employeeService.getByAccountId(this.accountService.accountValue.id)\r\n            .pipe(first())\r\n            .subscribe(employee => {\r\n                this.currentEmployeeId = employee?.id ? Number(employee.id) : null;\r\n            });\r\n        \r\n        // Get all employees for assignee dropdown (if admin or moderator)\r\n        if (this.isAdmin || this.isModerator) {\r\n            this.employeeService.getAll()\r\n                .pipe(first())\r\n                .subscribe(employees => {\r\n                    this.employees = employees;\r\n                });\r\n        }\r\n\r\n        // Form validation rules\r\n        this.form = this.formBuilder.group({\r\n            title: ['', Validators.required],\r\n            description: ['', Validators.required],\r\n            requestType: ['', Validators.required],\r\n            priority: ['Medium', Validators.required],\r\n            requesterId: [this.currentEmployeeId],\r\n            assignedTo: [''],\r\n            dueDate: ['']\r\n        });\r\n\r\n        if (!this.isAddMode) {\r\n            this.requestService.getById(this.id)\r\n                .pipe(first())\r\n                .subscribe(x => {\r\n                    // Prepare form data without modifying the original object\r\n                    const formData = { ...x };\r\n                    \r\n                    // Format date for the date input\r\n                    if (formData.dueDate) {\r\n                        const dueDate = new Date(formData.dueDate);\r\n                        // Use a separate variable for the form value\r\n                        const dateString = dueDate.toISOString().split('T')[0];\r\n                        // Use patchValue instead of directly modifying formData\r\n                        this.form.patchValue({\r\n                            ...formData,\r\n                            dueDate: dateString\r\n                        });\r\n                    } else {\r\n                        this.form.patchValue(formData);\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.form.controls; }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n\r\n        // reset alerts on submit\r\n        this.alertService.clear();\r\n\r\n        // stop here if form is invalid\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        \r\n        // Set requesterId if not already set\r\n        if (!this.f.requesterId.value && this.currentEmployeeId) {\r\n            this.form.patchValue({ requesterId: this.currentEmployeeId });\r\n        }\r\n        \r\n        // Prepare request data with correct types\r\n        const requestData = {\r\n            ...this.form.value,\r\n            requesterId: this.form.value.requesterId ? Number(this.form.value.requesterId) : null,\r\n            assignedTo: this.form.value.assignedTo ? Number(this.form.value.assignedTo) : null\r\n        };\r\n        \r\n        if (this.isAddMode) {\r\n            this.createRequest(requestData);\r\n        } else {\r\n            this.updateRequest(requestData);\r\n        }\r\n    }\r\n\r\n    private createRequest(requestData: any) {\r\n        this.requestService.create(requestData)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success('Request added successfully', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['../my-requests'], { relativeTo: this.route });\r\n                },\r\n                error: error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n\r\n    private updateRequest(requestData: any) {\r\n        this.requestService.update(this.id, requestData)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success('Update successful', { keepAfterRouteChange: true });\r\n                    if (this.isAdmin || this.isModerator) {\r\n                        this.router.navigate(['../../'], { relativeTo: this.route });\r\n                    } else {\r\n                        this.router.navigate(['../../my-requests'], { relativeTo: this.route });\r\n                    }\r\n                },\r\n                error: error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n} ","<h1>{{isAddMode ? 'Create' : 'Edit'}} Request</h1>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"mb-3\">\r\n        <label class=\"form-label\">Title</label>\r\n        <input type=\"text\" formControlName=\"title\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.title.errors }\" />\r\n        <div *ngIf=\"submitted && f.title.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.title.errors.required\">Title is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"mb-3\">\r\n        <label class=\"form-label\">Description</label>\r\n        <textarea formControlName=\"description\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.description.errors }\" rows=\"4\"></textarea>\r\n        <div *ngIf=\"submitted && f.description.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.description.errors.required\">Description is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6 mb-3\">\r\n            <label class=\"form-label\">Request Type</label>\r\n            <select formControlName=\"requestType\" class=\"form-select\" [ngClass]=\"{ 'is-invalid': submitted && f.requestType.errors }\">\r\n                <option value=\"\"></option>\r\n                <option value=\"Issue\">Issue</option>\r\n                <option value=\"Feature Request\">Feature Request</option>\r\n                <option value=\"Documentation\">Documentation</option>\r\n                <option value=\"Task\">Task</option>\r\n                <option value=\"Other\">Other</option>\r\n            </select>\r\n            <div *ngIf=\"submitted && f.requestType.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.requestType.errors.required\">Request type is required</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-6 mb-3\">\r\n            <label class=\"form-label\">Priority</label>\r\n            <select formControlName=\"priority\" class=\"form-select\">\r\n                <option value=\"Low\">Low</option>\r\n                <option value=\"Medium\">Medium</option>\r\n                <option value=\"High\">High</option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6 mb-3\">\r\n            <label class=\"form-label\">Due Date</label>\r\n            <input type=\"date\" formControlName=\"dueDate\" class=\"form-control\" />\r\n        </div>\r\n        <div *ngIf=\"isAdmin || isModerator\" class=\"col-md-6 mb-3\">\r\n            <label class=\"form-label\">Assign To</label>\r\n            <select formControlName=\"assignedTo\" class=\"form-select\">\r\n                <option value=\"\"></option>\r\n                <option *ngFor=\"let employee of employees\" [value]=\"employee.id\">\r\n                    {{employee.account?.firstName}} {{employee.account?.lastName}} ({{employee.position}})\r\n                </option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n    <div class=\"mb-3\">\r\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm me-1\"></span>\r\n            Save\r\n        </button>\r\n        <a routerLink=\"{{isAdmin || isModerator ? '../' : '../my-requests'}}\" class=\"btn btn-link\">Cancel</a>\r\n    </div>\r\n</form> "]},"metadata":{},"sourceType":"module","externalDependencies":[]}