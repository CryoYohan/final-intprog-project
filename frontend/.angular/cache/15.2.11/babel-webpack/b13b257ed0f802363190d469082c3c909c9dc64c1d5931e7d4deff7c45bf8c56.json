{"ast":null,"code":"import { first } from 'rxjs/operators';\nimport { Role } from '@app/_models';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/_services\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../shared/confirm-dialog/confirm-dialog.component\";\nfunction ListComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelement(1, \"span\", 11);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ListComponent_table_13_tr_15_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const request_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", request_r4.employee.account == null ? null : request_r4.employee.account.firstName, \" \", request_r4.employee.account == null ? null : request_r4.employee.account.lastName, \" \");\n  }\n}\nfunction ListComponent_table_13_tr_15_button_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function ListComponent_table_13_tr_15_button_17_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const request_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.editRequest(request_r4.id));\n    });\n    i0.ɵɵelement(1, \"i\", 24);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ListComponent_table_13_tr_15_button_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function ListComponent_table_13_tr_15_button_18_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const request_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.deleteRequest(request_r4.id));\n    });\n    i0.ɵɵelement(1, \"i\", 26);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0, a1, a2) {\n  return {\n    \"bg-secondary\": a0,\n    \"bg-success\": a1,\n    \"bg-danger\": a2\n  };\n};\nfunction ListComponent_table_13_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtemplate(4, ListComponent_table_13_tr_15_span_4_Template, 2, 2, \"span\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"span\", 17);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵpipe(12, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\")(14, \"div\", 18)(15, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function ListComponent_table_13_tr_15_Template_button_click_15_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const request_r4 = restoredCtx.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.viewRequest(request_r4.id));\n    });\n    i0.ɵɵelement(16, \"i\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(17, ListComponent_table_13_tr_15_button_17_Template, 2, 0, \"button\", 21);\n    i0.ɵɵtemplate(18, ListComponent_table_13_tr_15_button_18_Template, 2, 0, \"button\", 22);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const request_r4 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(request_r4.requestNumber);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", request_r4.employee);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(request_r4.type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(11, _c0, request_r4.status === \"Pending\", request_r4.status === \"Approved\", request_r4.status === \"Rejected\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(request_r4.status);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(12, 8, request_r4.createdDate, \"medium\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isAdmin);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isAdmin);\n  }\n}\nfunction ListComponent_table_13_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 27)(2, \"span\", 28);\n    i0.ɵɵtext(3, \"No requests found\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction ListComponent_table_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 12)(1, \"thead\")(2, \"tr\")(3, \"th\", 13);\n    i0.ɵɵtext(4, \"Request #\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\", 13);\n    i0.ɵɵtext(6, \"Employee\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\", 13);\n    i0.ɵɵtext(8, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\", 13);\n    i0.ɵɵtext(10, \"Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\", 14);\n    i0.ɵɵtext(12, \"Created\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"th\", 13);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"tbody\");\n    i0.ɵɵtemplate(15, ListComponent_table_13_tr_15_Template, 19, 15, \"tr\", 15);\n    i0.ɵɵtemplate(16, ListComponent_table_13_tr_16_Template, 4, 0, \"tr\", 16);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(15);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.requests);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.loading && (ctx_r1.requests == null ? null : ctx_r1.requests.length) === 0);\n  }\n}\nexport let ListComponent = /*#__PURE__*/(() => {\n  class ListComponent {\n    constructor(requestService, accountService, alertService, router, dialog) {\n      var _a;\n      this.requestService = requestService;\n      this.accountService = accountService;\n      this.alertService = alertService;\n      this.router = router;\n      this.dialog = dialog;\n      this.requests = [];\n      this.loading = false;\n      this.isAdmin = false;\n      this.showDeleteConfirm = false;\n      this.requestToDelete = null;\n      this.isAdmin = ((_a = this.accountService.accountValue) === null || _a === void 0 ? void 0 : _a.role) === Role.Admin;\n    }\n    ngOnInit() {\n      this.loading = true;\n      this.loadRequests();\n    }\n    loadRequests() {\n      this.requestService.getAll().pipe(first()).subscribe({\n        next: requests => {\n          this.requests = requests;\n          this.loading = false;\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    viewRequest(id) {\n      this.router.navigate(['/requests/view', id]);\n    }\n    editRequest(id) {\n      this.router.navigate(['/requests/edit', id]);\n    }\n    deleteRequest(id) {\n      this.requestToDelete = id;\n      this.showDeleteConfirm = true;\n    }\n    confirmDelete() {\n      if (this.requestToDelete) {\n        this.requestService.delete(this.requestToDelete).pipe(first()).subscribe({\n          next: () => {\n            this.alertService.success('Request deleted successfully');\n            this.loadRequests();\n          },\n          error: error => {\n            this.alertService.error(error);\n          }\n        });\n      }\n      this.showDeleteConfirm = false;\n      this.requestToDelete = null;\n    }\n    cancelDelete() {\n      this.showDeleteConfirm = false;\n      this.requestToDelete = null;\n    }\n    changeStatus(id, newStatus) {\n      const request = this.requests.find(x => x.id === id);\n      request.isUpdating = true;\n      this.requestService.changeStatus(id, newStatus, `Status changed to ${newStatus} by admin`).pipe(first()).subscribe({\n        next: () => {\n          request.status = newStatus;\n          request.isUpdating = false;\n          this.alertService.success('Request status updated successfully');\n        },\n        error: error => {\n          this.alertService.error(error);\n          request.isUpdating = false;\n        }\n      });\n    }\n    getStatusBadgeClass(status) {\n      switch (status) {\n        case 'Pending':\n          return 'bg-warning text-dark';\n        case 'Approved':\n          return 'bg-success';\n        case 'Rejected':\n          return 'bg-danger';\n        case 'In Progress':\n          return 'bg-info';\n        default:\n          return 'bg-secondary';\n      }\n    }\n  }\n  ListComponent.ɵfac = function ListComponent_Factory(t) {\n    return new (t || ListComponent)(i0.ɵɵdirectiveInject(i1.RequestService), i0.ɵɵdirectiveInject(i1.AccountService), i0.ɵɵdirectiveInject(i1.AlertService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.MatDialog));\n  };\n  ListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ListComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 15,\n    vars: 5,\n    consts: [[1, \"card\"], [1, \"card-header\"], [1, \"mb-0\", \"d-flex\", \"justify-content-between\", \"align-items-center\"], [\"routerLink\", \"add\", 1, \"btn\", \"btn-sm\", \"btn-success\"], [1, \"fas\", \"fa-plus\", \"me-1\"], [1, \"card-body\"], [\"class\", \"text-center\", 4, \"ngIf\"], [1, \"table-responsive\"], [\"class\", \"table table-striped\", 4, \"ngIf\"], [3, \"isOpen\", \"title\", \"message\", \"confirm\", \"cancel\"], [1, \"text-center\"], [1, \"spinner-border\", \"spinner-border-lg\", \"align-center\"], [1, \"table\", \"table-striped\"], [2, \"width\", \"15%\"], [2, \"width\", \"25%\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"badge\", 3, \"ngClass\"], [1, \"btn-group\"], [1, \"btn\", \"btn-sm\", \"btn-info\", \"me-1\", 3, \"click\"], [1, \"fas\", \"fa-eye\"], [\"class\", \"btn btn-sm btn-primary me-1\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"btn btn-sm btn-danger\", 3, \"click\", 4, \"ngIf\"], [1, \"btn\", \"btn-sm\", \"btn-primary\", \"me-1\", 3, \"click\"], [1, \"fas\", \"fa-edit\"], [1, \"btn\", \"btn-sm\", \"btn-danger\", 3, \"click\"], [1, \"fas\", \"fa-trash\"], [\"colspan\", \"6\", 1, \"text-center\"], [1, \"text-muted\"]],\n    template: function ListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"All Requests\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0)(3, \"div\", 1)(4, \"h4\", 2)(5, \"span\");\n        i0.ɵɵtext(6, \"Requests\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 3);\n        i0.ɵɵelement(8, \"i\", 4);\n        i0.ɵɵtext(9, \"Add Request \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"div\", 5);\n        i0.ɵɵtemplate(11, ListComponent_div_11_Template, 2, 0, \"div\", 6);\n        i0.ɵɵelementStart(12, \"div\", 7);\n        i0.ɵɵtemplate(13, ListComponent_table_13_Template, 17, 2, \"table\", 8);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(14, \"app-confirm-dialog\", 9);\n        i0.ɵɵlistener(\"confirm\", function ListComponent_Template_app_confirm_dialog_confirm_14_listener() {\n          return ctx.confirmDelete();\n        })(\"cancel\", function ListComponent_Template_app_confirm_dialog_cancel_14_listener() {\n          return ctx.cancelDelete();\n        });\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading && ctx.requests);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"isOpen\", ctx.showDeleteConfirm)(\"title\", \"Confirm Delete\")(\"message\", \"Are you sure you want to delete this request? This action cannot be undone.\");\n      }\n    },\n    dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i2.RouterLink, i5.ConfirmDialogComponent, i4.DatePipe],\n    encapsulation: 2\n  });\n  return ListComponent;\n})();","map":{"version":3,"mappings":"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","names":["first","Role","i0","ListComponent","constructor","requestService","accountService","alertService","router","dialog","isAdmin","accountValue","role","Admin","ngOnInit","loading","loadRequests","getAll","pipe","subscribe","next","requests","error","viewRequest","id","navigate","editRequest","deleteRequest","requestToDelete","showDeleteConfirm","confirmDelete","delete","success","cancelDelete","changeStatus","newStatus","request","find","x","isUpdating","status","getStatusBadgeClass","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\JiM\\School\\3rd Year\\2nd Semester\\SUBJECTS\\IT-INTPROG32\\Coding (INTPROG32)\\Final\\project6\\frontend\\src\\app\\requests\\list.component.ts","D:\\JiM\\School\\3rd Year\\2nd Semester\\SUBJECTS\\IT-INTPROG32\\Coding (INTPROG32)\\Final\\project6\\frontend\\src\\app\\requests\\list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { first } from 'rxjs/operators';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\nimport { RequestService, AlertService, AccountService } from '@app/_services';\r\nimport { Role, Request } from '@app/_models';\r\nimport { ConfirmDialogComponent } from '@app/shared/confirm-dialog/confirm-dialog.component';\r\n\r\n@Component({ templateUrl: 'list.component.html' })\r\nexport class ListComponent implements OnInit {\r\n    requests: Request[] = [];\r\n    loading = false;\r\n    isAdmin = false;\r\n    showDeleteConfirm = false;\r\n    requestToDelete: string | null = null;\r\n\r\n    constructor(\r\n        private requestService: RequestService,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService,\r\n        private router: Router,\r\n        private dialog: MatDialog\r\n    ) {\r\n        this.isAdmin = this.accountService.accountValue?.role === Role.Admin;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.loading = true;\r\n        this.loadRequests();\r\n    }\r\n\r\n    private loadRequests() {\r\n        this.requestService.getAll()\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: (requests: Request[]) => {\r\n                    this.requests = requests;\r\n                    this.loading = false;\r\n                },\r\n                error: error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n\r\n    viewRequest(id: string) {\r\n        this.router.navigate(['/requests/view', id]);\r\n    }\r\n\r\n    editRequest(id: string) {\r\n        this.router.navigate(['/requests/edit', id]);\r\n    }\r\n\r\n    deleteRequest(id: string) {\r\n        this.requestToDelete = id;\r\n        this.showDeleteConfirm = true;\r\n    }\r\n\r\n    confirmDelete() {\r\n        if (this.requestToDelete) {\r\n            this.requestService.delete(this.requestToDelete)\r\n                .pipe(first())\r\n                .subscribe({\r\n                    next: () => {\r\n                        this.alertService.success('Request deleted successfully');\r\n                        this.loadRequests();\r\n                    },\r\n                    error: error => {\r\n                        this.alertService.error(error);\r\n                    }\r\n                });\r\n        }\r\n        this.showDeleteConfirm = false;\r\n        this.requestToDelete = null;\r\n    }\r\n\r\n    cancelDelete() {\r\n        this.showDeleteConfirm = false;\r\n        this.requestToDelete = null;\r\n    }\r\n\r\n    changeStatus(id: string, newStatus: string) {\r\n        const request = this.requests.find(x => x.id === id);\r\n        request.isUpdating = true;\r\n        this.requestService.changeStatus(id, newStatus, `Status changed to ${newStatus} by admin`)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    request.status = newStatus;\r\n                    request.isUpdating = false;\r\n                    this.alertService.success('Request status updated successfully');\r\n                },\r\n                error: error => {\r\n                    this.alertService.error(error);\r\n                    request.isUpdating = false;\r\n                }\r\n            });\r\n    }\r\n\r\n    getStatusBadgeClass(status: string): string {\r\n        switch (status) {\r\n            case 'Pending':\r\n                return 'bg-warning text-dark';\r\n            case 'Approved':\r\n                return 'bg-success';\r\n            case 'Rejected':\r\n                return 'bg-danger';\r\n            case 'In Progress':\r\n                return 'bg-info';\r\n            default:\r\n                return 'bg-secondary';\r\n        }\r\n    }\r\n} ","<h1>All Requests</h1>\r\n\r\n<div class=\"card\">\r\n    <div class=\"card-header\">\r\n        <h4 class=\"mb-0 d-flex justify-content-between align-items-center\">\r\n            <span>Requests</span>\r\n            <button routerLink=\"add\" class=\"btn btn-sm btn-success\">\r\n                <i class=\"fas fa-plus me-1\"></i>Add Request\r\n            </button>\r\n        </h4>\r\n    </div>\r\n    <div class=\"card-body\">\r\n        <div *ngIf=\"loading\" class=\"text-center\">\r\n            <span class=\"spinner-border spinner-border-lg align-center\"></span>\r\n        </div>\r\n        <div class=\"table-responsive\">\r\n            <table *ngIf=\"!loading && requests\" class=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th style=\"width: 15%\">Request #</th>\r\n                        <th style=\"width: 15%\">Employee</th>\r\n                        <th style=\"width: 15%\">Type</th>\r\n                        <th style=\"width: 15%\">Status</th>\r\n                        <th style=\"width: 25%\">Created</th>\r\n                        <th style=\"width: 15%\"></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let request of requests\">\r\n                        <td>{{request.requestNumber}}</td>\r\n                        <td>\r\n                            <span *ngIf=\"request.employee\">\r\n                                {{request.employee.account?.firstName}} {{request.employee.account?.lastName}}\r\n                            </span>\r\n                        </td>\r\n                        <td>{{request.type}}</td>\r\n                        <td>\r\n                            <span class=\"badge\" [ngClass]=\"{\r\n                                'bg-secondary': request.status === 'Pending',\r\n                                'bg-success': request.status === 'Approved',\r\n                                'bg-danger': request.status === 'Rejected',\r\n                            }\">{{request.status}}</span>\r\n                        </td>\r\n                        <td>{{request.createdDate | date:'medium'}}</td>\r\n                        <td>\r\n                            <div class=\"btn-group\">\r\n                                <button class=\"btn btn-sm btn-info me-1\" (click)=\"viewRequest(request.id)\">\r\n                                    <i class=\"fas fa-eye\"></i>\r\n                                </button>\r\n                                <button *ngIf=\"isAdmin\" class=\"btn btn-sm btn-primary me-1\" (click)=\"editRequest(request.id)\">\r\n                                    <i class=\"fas fa-edit\"></i>\r\n                                </button>\r\n                                <button *ngIf=\"isAdmin\" class=\"btn btn-sm btn-danger\" (click)=\"deleteRequest(request.id)\">\r\n                                    <i class=\"fas fa-trash\"></i>\r\n                                </button>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr *ngIf=\"!loading && requests?.length === 0\">\r\n                        <td colspan=\"6\" class=\"text-center\">\r\n                            <span class=\"text-muted\">No requests found</span>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<app-confirm-dialog\r\n    [isOpen]=\"showDeleteConfirm\"\r\n    [title]=\"'Confirm Delete'\"\r\n    [message]=\"'Are you sure you want to delete this request? This action cannot be undone.'\"\r\n    (confirm)=\"confirmDelete()\"\r\n    (cancel)=\"cancelDelete()\">\r\n</app-confirm-dialog> "]},"metadata":{},"sourceType":"module","externalDependencies":[]}