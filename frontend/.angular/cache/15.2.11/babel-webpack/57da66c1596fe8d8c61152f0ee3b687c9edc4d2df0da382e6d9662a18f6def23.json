{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/_services\";\nimport * as i4 from \"@angular/common\";\nfunction AddEditComponent_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const account_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", account_r8.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" \", account_r8.id, \" - \", account_r8.firstName, \" \", account_r8.lastName, \" \");\n  }\n}\nfunction AddEditComponent_div_13_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Account is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtemplate(1, AddEditComponent_div_13_div_1_Template, 2, 0, \"div\", 29);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.accountId.errors.required);\n  }\n}\nfunction AddEditComponent_div_18_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Employee ID is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtemplate(1, AddEditComponent_div_18_div_1_Template, 2, 0, \"div\", 29);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f.employeeId.errors.required);\n  }\n}\nfunction AddEditComponent_option_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dept_r11 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", dept_r11.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", dept_r11.name, \" \");\n  }\n}\nfunction AddEditComponent_div_27_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Department is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtemplate(1, AddEditComponent_div_27_div_1_Template, 2, 0, \"div\", 29);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.f.departmentId.errors.required);\n  }\n}\nfunction AddEditComponent_div_32_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Position is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtemplate(1, AddEditComponent_div_32_div_1_Template, 2, 0, \"div\", 29);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.f.position.errors.required);\n  }\n}\nfunction AddEditComponent_div_38_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Hire Date is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtemplate(1, AddEditComponent_div_38_div_1_Template, 2, 0, \"div\", 29);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.f.hireDate.errors.required);\n  }\n}\nfunction AddEditComponent_span_60_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 30);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport let AddEditComponent = /*#__PURE__*/(() => {\n  class AddEditComponent {\n    constructor(formBuilder, route, router, accountService, employeeService, departmentService, alertService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.accountService = accountService;\n      this.employeeService = employeeService;\n      this.departmentService = departmentService;\n      this.alertService = alertService;\n      this.loading = false;\n      this.submitted = false;\n      this.accounts = [];\n      this.departments = [];\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      this.isAddMode = !this.id;\n      // Load accounts and departments\n      this.loadAccounts();\n      this.loadDepartments();\n      this.form = this.formBuilder.group({\n        accountId: ['', Validators.required],\n        employeeId: [{\n          value: this.generateEmployeeId(),\n          disabled: true\n        }, Validators.required],\n        departmentId: ['', Validators.required],\n        position: ['', Validators.required],\n        hireDate: ['', Validators.required],\n        salary: [''],\n        status: ['Active']\n      });\n      if (!this.isAddMode) {\n        this.employeeService.getById(this.id).pipe(first()).subscribe(x => {\n          this.form.patchValue(x);\n          // Enable employee ID field in edit mode\n          this.form.get('employeeId').enable();\n        });\n      }\n    }\n    // Load all accounts\n    loadAccounts() {\n      this.accountService.getAll().pipe(first()).subscribe(accounts => {\n        this.accounts = accounts;\n      });\n    }\n    // Load all departments\n    loadDepartments() {\n      this.departmentService.getAll().pipe(first()).subscribe(departments => {\n        this.departments = departments;\n      });\n    }\n    // Generate a random employee ID (you can modify this logic as needed)\n    generateEmployeeId() {\n      const prefix = 'EMP';\n      const randomNum = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\n      const year = new Date().getFullYear().toString().substr(-2);\n      return `${prefix}${year}${randomNum}`;\n    }\n    // convenience getter for easy access to form fields\n    get f() {\n      return this.form.controls;\n    }\n    onSubmit() {\n      this.submitted = true;\n      // reset alerts on submit\n      this.alertService.clear();\n      // stop here if form is invalid\n      if (this.form.invalid) {\n        return;\n      }\n      this.loading = true;\n      if (this.isAddMode) {\n        this.createEmployee();\n      } else {\n        this.updateEmployee();\n      }\n    }\n    createEmployee() {\n      const formData = Object.assign(Object.assign({}, this.form.value), {\n        employeeId: this.form.get('employeeId').value // Include the disabled field\n      });\n\n      this.employeeService.create(formData).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Employee added successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    updateEmployee() {\n      const formData = Object.assign(Object.assign({}, this.form.value), {\n        employeeId: this.form.get('employeeId').value // Include the disabled field\n      });\n\n      this.employeeService.update(this.id, formData).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Update successful', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n  }\n  AddEditComponent.ɵfac = function AddEditComponent_Factory(t) {\n    return new (t || AddEditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AccountService), i0.ɵɵdirectiveInject(i3.EmployeeService), i0.ɵɵdirectiveInject(i3.DepartmentService), i0.ɵɵdirectiveInject(i3.AlertService));\n  };\n  AddEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddEditComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 64,\n    vars: 27,\n    consts: [[1, \"mb-4\"], [1, \"card\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"col-md-6\", \"mb-3\"], [1, \"form-label\"], [\"formControlName\", \"accountId\", 1, \"form-select\", 3, \"ngClass\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"employeeId\", 1, \"form-control\", 3, \"ngClass\", \"readonly\"], [\"formControlName\", \"departmentId\", 1, \"form-select\", 3, \"ngClass\"], [\"type\", \"text\", \"formControlName\", \"position\", \"placeholder\", \"Enter position\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"date\", \"formControlName\", \"hireDate\", 1, \"form-control\", 3, \"ngClass\"], [1, \"input-group\"], [1, \"input-group-text\"], [\"type\", \"number\", \"formControlName\", \"salary\", \"placeholder\", \"Enter salary\", 1, \"form-control\"], [\"formControlName\", \"status\", 1, \"form-select\"], [\"value\", \"Active\"], [\"value\", \"Inactive\"], [\"value\", \"On Leave\"], [\"value\", \"Terminated\"], [1, \"border-top\", \"pt-3\"], [1, \"btn\", \"btn-primary\", \"me-2\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [\"routerLink\", \"../\", 1, \"btn\", \"btn-secondary\"], [3, \"value\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"]],\n    template: function AddEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2)(4, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function AddEditComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 5)(7, \"label\", 6);\n        i0.ɵɵtext(8, \"Account\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"select\", 7)(10, \"option\", 8);\n        i0.ɵɵtext(11, \"Select Account...\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, AddEditComponent_option_12_Template, 2, 4, \"option\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(13, AddEditComponent_div_13_Template, 2, 1, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 5)(15, \"label\", 6);\n        i0.ɵɵtext(16, \"Employee ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 11);\n        i0.ɵɵtemplate(18, AddEditComponent_div_18_Template, 2, 1, \"div\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"div\", 4)(20, \"div\", 5)(21, \"label\", 6);\n        i0.ɵɵtext(22, \"Department\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"select\", 12)(24, \"option\", 8);\n        i0.ɵɵtext(25, \"Select Department...\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(26, AddEditComponent_option_26_Template, 2, 2, \"option\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(27, AddEditComponent_div_27_Template, 2, 1, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 5)(29, \"label\", 6);\n        i0.ɵɵtext(30, \"Position\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"input\", 13);\n        i0.ɵɵtemplate(32, AddEditComponent_div_32_Template, 2, 1, \"div\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(33, \"div\", 4)(34, \"div\", 5)(35, \"label\", 6);\n        i0.ɵɵtext(36, \"Hire Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(37, \"input\", 14);\n        i0.ɵɵtemplate(38, AddEditComponent_div_38_Template, 2, 1, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"div\", 5)(40, \"label\", 6);\n        i0.ɵɵtext(41, \"Salary\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"div\", 15)(43, \"span\", 16);\n        i0.ɵɵtext(44, \"\\u20B1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(45, \"input\", 17);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(46, \"div\", 0)(47, \"label\", 6);\n        i0.ɵɵtext(48, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"select\", 18)(50, \"option\", 19);\n        i0.ɵɵtext(51, \"Active\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"option\", 20);\n        i0.ɵɵtext(53, \"Inactive\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(54, \"option\", 21);\n        i0.ɵɵtext(55, \"On Leave\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(56, \"option\", 22);\n        i0.ɵɵtext(57, \"Terminated\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(58, \"div\", 23)(59, \"button\", 24);\n        i0.ɵɵtemplate(60, AddEditComponent_span_60_Template, 1, 0, \"span\", 25);\n        i0.ɵɵtext(61, \" Save Employee \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(62, \"a\", 26);\n        i0.ɵɵtext(63, \"Cancel\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"\", ctx.isAddMode ? \"Add New\" : \"Edit\", \" Employee\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(17, _c0, ctx.submitted && ctx.f.accountId.errors));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.accounts);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.accountId.errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(19, _c0, ctx.submitted && ctx.f.employeeId.errors))(\"readonly\", ctx.isAddMode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.employeeId.errors);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(21, _c0, ctx.submitted && ctx.f.departmentId.errors));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.departments);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.departmentId.errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(23, _c0, ctx.submitted && ctx.f.position.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.position.errors);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(25, _c0, ctx.submitted && ctx.f.hireDate.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.hireDate.errors);\n        i0.ɵɵadvance(21);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      }\n    },\n    dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.RouterLink],\n    encapsulation: 2\n  });\n  return AddEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}